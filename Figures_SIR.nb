(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    983687,      18607]
NotebookOptionsPosition[    973996,      18446]
NotebookOutlinePosition[    974337,      18461]
CellTagsIndexPosition[    974294,      18458]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Define Models, Give Basic Example", "Section",
 CellChangeTimes->{{3.7876859191420507`*^9, 
  3.7876859265509977`*^9}},ExpressionUUID->"d5fe9526-ea5e-4b52-8aaa-\
751578c48230"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Defining", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"poppars", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n1", "\[Rule]", "500."}], ",", 
       RowBox[{"n2", "\[Rule]", "500."}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sirpars", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]1", "\[Rule]", "2.1"}], ",", 
       RowBox[{"\[Beta]2", "\[Rule]", ".5"}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Aligning", " ", "Movement", " ", "parameters"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tarpars", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]1", "\[Rule]", 
        RowBox[{"1", "/", "5."}]}], ",", " ", 
       RowBox[{"\[Tau]12", " ", "\[Rule]", 
        RowBox[{"1", "/", "3."}]}], ",", 
       RowBox[{"\[Phi]2", "\[Rule]", 
        RowBox[{"1", "/", "20."}]}], ",", 
       RowBox[{"\[Tau]21", " ", "\[Rule]", 
        RowBox[{"1", "/", "3."}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"movtar", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "\[Phi]1"}], " ", "n11"}], " ", "+", " ", 
         RowBox[{"\[Tau]12", " ", "n12"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"0", " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "\[Phi]2"}], " ", "n22"}], "+", " ", 
         RowBox[{"\[Tau]21", "  ", "n21"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Normalize", " ", "to", " ", "the", " ", "residence", " ", 
         "populations"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n11", " ", "+", " ", "n12"}], " ", "\[Equal]", " ", "n1"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n22", " ", "+", " ", "n21"}], " ", "\[Equal]", " ", "n2"}]}],
       "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"movTarSols", " ", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"movtar", "/.", "tarpars"}], "/.", "poppars"}], "/.", 
         "tarpars"}], ",", 
        RowBox[{"{", 
         RowBox[{"n11", ",", "n12", ",", "n22", ",", "n21"}], "}"}]}], "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mtar", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m12", "\[Rule]", " ", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"\[Tau]12", " ", "\[Phi]1"}], 
           RowBox[{"\[Tau]12", "+", "\[Phi]1"}]], "n1"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Tau]21", " ", "\[Phi]2"}], 
           RowBox[{"\[Tau]21", "+", "\[Phi]2"}]], "n2"}]}]}], ",", 
       RowBox[{"m21", "->", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"\[Tau]12", " ", "\[Phi]1"}], 
           RowBox[{"\[Tau]12", "+", "\[Phi]1"}]], "n1"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Tau]21", " ", "\[Phi]2"}], 
           RowBox[{"\[Tau]21", "+", "\[Phi]2"}]], "n2"}]}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fluxpars", " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f12", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"m12", "/", "n1"}], ")"}]}], ",", 
          RowBox[{"f21", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"m21", "/", "n2"}], ")"}]}]}], "}"}], "/.", "mtar"}], "/.",
        "tarpars"}], "/.", "poppars"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7664255468483686`*^9, 3.7664256481786346`*^9}, {
   3.766425696956251*^9, 3.766425846522387*^9}, {3.766434201970811*^9, 
   3.766434202729185*^9}, {3.766434247137945*^9, 3.7664342478873568`*^9}, {
   3.766436810902083*^9, 3.76643681289672*^9}, {3.766436866624847*^9, 
   3.766436866936586*^9}, 3.766437353030882*^9, {3.766439095407136*^9, 
   3.766439098402238*^9}, 3.7664391541185417`*^9, {3.7664395222966127`*^9, 
   3.766439544267885*^9}, {3.766439671112155*^9, 3.76643968515656*^9}, {
   3.766439716736611*^9, 3.766439720132537*^9}, {3.766439852861905*^9, 
   3.766439853636981*^9}, {3.766440948580282*^9, 3.766440955410276*^9}, {
   3.766441316334902*^9, 3.766441316474155*^9}, {3.766441372380862*^9, 
   3.76644138081857*^9}, {3.76644142136659*^9, 3.7664414525976562`*^9}, 
   3.766787419859338*^9, {3.766788495445159*^9, 3.766788495980907*^9}, {
   3.766946325941414*^9, 3.766946327513483*^9}, 3.784382321924526*^9, {
   3.784382391417276*^9, 3.7843823915025597`*^9}, {3.787685874510138*^9, 
   3.787685890314456*^9}},
 CellLabel->
  "In[589]:=",ExpressionUUID->"a25b3859-bc9e-413c-a525-59152b4b3ea9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"This", " ", "is", " ", "the", " ", "TaR", " ", "model"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TarVars", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s11", "[", "t", "]"}], ",", 
       RowBox[{"s12", "[", "t", "]"}], ",", 
       RowBox[{"s22", "[", "t", "]"}], ",", 
       RowBox[{"s21", "[", "t", "]"}], ",", 
       RowBox[{"i11", "[", "t", "]"}], ",", 
       RowBox[{"i12", "[", "t", "]"}], ",", 
       RowBox[{"i22", "[", "t", "]"}], ",", 
       RowBox[{"i21", "[", "t", "]"}], ",", 
       RowBox[{"r11", "[", "t", "]"}], ",", 
       RowBox[{"r12", "[", "t", "]"}], ",", 
       RowBox[{"r22", "[", "t", "]"}], ",", 
       RowBox[{"r21", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sirTar", " ", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"s11", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Beta]1"}], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i11", "[", "t", "]"}], " ", "+", " ", 
             RowBox[{"i21", "[", "t", "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s11", "[", "t", "]"}], "+", 
             RowBox[{"i11", "[", "t", "]"}], "+", 
             RowBox[{"r11", "[", "t", "]"}], "+", 
             RowBox[{"s21", "[", "t", "]"}], "+", 
             RowBox[{"i21", "[", "t", "]"}], "+", 
             RowBox[{"r21", "[", "t", "]"}]}], ")"}]], 
          RowBox[{"s11", "[", "t", "]"}]}], "-", " ", 
         RowBox[{"\[Phi]1", " ", 
          RowBox[{"s11", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"\[Tau]12", " ", 
          RowBox[{"s12", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"s12", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Beta]2"}], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i22", "[", "t", "]"}], " ", "+", " ", 
             RowBox[{"i12", "[", "t", "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s22", "[", "t", "]"}], "+", 
             RowBox[{"i22", "[", "t", "]"}], "+", 
             RowBox[{"r22", "[", "t", "]"}], "+", 
             RowBox[{"s12", "[", "t", "]"}], "+", 
             RowBox[{"i12", "[", "t", "]"}], "+", 
             RowBox[{"r12", "[", "t", "]"}]}], ")"}]], 
          RowBox[{"s12", "[", "t", "]"}]}], "+", " ", 
         RowBox[{"\[Phi]1", " ", 
          RowBox[{"s11", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Tau]12", " ", 
          RowBox[{"s12", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"s22", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Beta]2"}], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i22", "[", "t", "]"}], " ", "+", " ", 
             RowBox[{"i12", "[", "t", "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s22", "[", "t", "]"}], "+", 
             RowBox[{"i22", "[", "t", "]"}], "+", 
             RowBox[{"r22", "[", "t", "]"}], "+", 
             RowBox[{"s12", "[", "t", "]"}], "+", 
             RowBox[{"i12", "[", "t", "]"}], "+", 
             RowBox[{"r12", "[", "t", "]"}]}], ")"}]], 
          RowBox[{"s22", "[", "t", "]"}]}], "-", 
         RowBox[{"\[Phi]2", " ", 
          RowBox[{"s22", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"\[Tau]21", " ", 
          RowBox[{"s21", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"s21", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Beta]1"}], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i11", "[", "t", "]"}], " ", "+", " ", 
             RowBox[{"i21", "[", "t", "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s11", "[", "t", "]"}], "+", 
             RowBox[{"i11", "[", "t", "]"}], "+", 
             RowBox[{"r11", "[", "t", "]"}], "+", 
             RowBox[{"s21", "[", "t", "]"}], "+", 
             RowBox[{"i21", "[", "t", "]"}], "+", 
             RowBox[{"r21", "[", "t", "]"}]}], ")"}]], 
          RowBox[{"s21", "[", "t", "]"}]}], "+", " ", 
         RowBox[{"\[Phi]2", " ", 
          RowBox[{"s22", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Tau]21", " ", 
          RowBox[{"s21", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"i11", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        
        RowBox[{
         RowBox[{"\[Beta]1", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i11", "[", "t", "]"}], " ", "+", " ", 
             RowBox[{"i21", "[", "t", "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s11", "[", "t", "]"}], "+", 
             RowBox[{"i11", "[", "t", "]"}], "+", 
             RowBox[{"r11", "[", "t", "]"}], "+", 
             RowBox[{"s21", "[", "t", "]"}], "+", 
             RowBox[{"i21", "[", "t", "]"}], "+", 
             RowBox[{"r21", "[", "t", "]"}]}], ")"}]], 
          RowBox[{"s11", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"i11", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Phi]1", " ", 
          RowBox[{"i11", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"\[Tau]12", " ", 
          RowBox[{"i12", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"i12", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        
        RowBox[{
         RowBox[{"\[Beta]2", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i22", "[", "t", "]"}], " ", "+", " ", 
             RowBox[{"i12", "[", "t", "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s22", "[", "t", "]"}], "+", 
             RowBox[{"i22", "[", "t", "]"}], "+", 
             RowBox[{"r22", "[", "t", "]"}], "+", 
             RowBox[{"s12", "[", "t", "]"}], "+", 
             RowBox[{"i12", "[", "t", "]"}], "+", 
             RowBox[{"r12", "[", "t", "]"}]}], ")"}]], 
          RowBox[{"s12", "[", "t", "]"}]}], "-", " ", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"i12", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"\[Phi]1", " ", 
          RowBox[{"i11", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Tau]12", " ", 
          RowBox[{"i12", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"i22", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        
        RowBox[{
         RowBox[{"\[Beta]2", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i22", "[", "t", "]"}], " ", "+", " ", 
             RowBox[{"i12", "[", "t", "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s22", "[", "t", "]"}], "+", 
             RowBox[{"i22", "[", "t", "]"}], "+", 
             RowBox[{"r22", "[", "t", "]"}], "+", 
             RowBox[{"s12", "[", "t", "]"}], "+", 
             RowBox[{"i12", "[", "t", "]"}], "+", 
             RowBox[{"r12", "[", "t", "]"}]}], ")"}]], 
          RowBox[{"s22", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"i22", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Phi]2", " ", 
          RowBox[{"i22", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"\[Tau]21", " ", 
          RowBox[{"i21", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"i21", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        
        RowBox[{
         RowBox[{"\[Beta]1", " ", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i11", "[", "t", "]"}], " ", "+", " ", 
             RowBox[{"i21", "[", "t", "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s11", "[", "t", "]"}], "+", 
             RowBox[{"i11", "[", "t", "]"}], "+", 
             RowBox[{"r11", "[", "t", "]"}], "+", 
             RowBox[{"s21", "[", "t", "]"}], "+", 
             RowBox[{"i21", "[", "t", "]"}], "+", 
             RowBox[{"r21", "[", "t", "]"}]}], ")"}]], 
          RowBox[{"s21", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"i21", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"\[Phi]2", " ", 
          RowBox[{"i22", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Tau]21", " ", 
          RowBox[{"i21", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"r11", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"i11", "[", "t", "]"}]}], "-", " ", 
         RowBox[{"\[Phi]1", " ", 
          RowBox[{"r11", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"\[Tau]12", " ", 
          RowBox[{"r12", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"r12", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"i12", "[", "t", "]"}]}], "+", " ", 
         RowBox[{"\[Phi]1", " ", 
          RowBox[{"r11", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Tau]12", " ", 
          RowBox[{"r12", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"r22", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"i22", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"\[Phi]2", " ", 
          RowBox[{"r22", "[", "t", "]"}]}], "+", " ", 
         RowBox[{"\[Tau]21", " ", 
          RowBox[{"r21", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"r21", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"i21", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"\[Phi]2", " ", 
          RowBox[{"r22", "[", "t", "]"}]}], "-", " ", 
         RowBox[{"\[Tau]21", " ", 
          RowBox[{"r21", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
      "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.766421127422505*^9, 3.766421131254745*^9}, {
  3.766421197963571*^9, 3.7664213131436777`*^9}, {3.7664213746659813`*^9, 
  3.766421620531261*^9}, {3.766421665040547*^9, 3.7664217101837387`*^9}, {
  3.7664218353166122`*^9, 3.7664218850100183`*^9}, {3.766421991803892*^9, 
  3.7664220639469748`*^9}, {3.766432242453081*^9, 3.766432248362502*^9}, {
  3.766433499092267*^9, 3.7664335102023897`*^9}, {3.766787261015696*^9, 
  3.766787317944646*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"6cae5cb0-4b3b-489c-99e1-c1c7838e1928"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"And", " ", "the", " ", "flux", " ", "model"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"stvec", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "[", "t", "]"}], ",", 
       RowBox[{"S2", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"itvec", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"I1", "[", "t", "]"}], ",", 
       RowBox[{"I2", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rtvec", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"R1", "[", "t", "]"}], ",", 
       RowBox[{"R2", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nvec", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "n2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]vec", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\[Beta]1", ",", "\[Beta]2"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fij", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "f12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f21", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sirFlux", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{"stvec", ",", "t"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{"itvec", ",", "t"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{"rtvec", ",", "t"}], "]"}]}], "}"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], "==", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Beta]vec"}], " ", "itvec", " ", 
              RowBox[{"stvec", "/", "nvec"}]}], " ", "+", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "fij", "]"}], ".", "stvec"}], " ", 
             "-", " ", 
             RowBox[{
              RowBox[{"fij", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "*", "stvec"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"+", " ", "\[Beta]vec"}], " ", "itvec", " ", 
              RowBox[{"stvec", "/", "nvec"}]}], " ", "+", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "fij", "]"}], ".", "itvec"}], " ", 
             "-", " ", 
             RowBox[{
              RowBox[{"fij", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "*", "itvec"}], " ", "-", 
             " ", 
             RowBox[{"\[Gamma]", " ", "itvec"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Gamma]", " ", "itvec"}], "+", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "fij", "]"}], ".", "rtvec"}], " ", 
             "-", " ", 
             RowBox[{
              RowBox[{"fij", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "*", "rtvec"}]}]}], "}"}], 
          "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"sirFlux", "/.", "sirpars"}], "/.", "poppars"}], "/.", 
      "fluxpars"}], "//", "MatrixForm"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7664322256579237`*^9, 3.766432236869377*^9}, {
   3.766439006515707*^9, 3.766439007263096*^9}, {3.7664395542149*^9, 
   3.766439582659421*^9}, 3.766440964356379*^9},
 CellLabel->
  "In[598]:=",ExpressionUUID->"0e6295e7-46e1-4131-9136-ecb93d40d0ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Solving", " ", "the", " ", "TaR", " ", "model"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"qTar", " ", "=", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], ",", "\[IndentingNewLine]", 
      "TarVars", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.766421741506901*^9, 3.7664218099932528`*^9}, {
   3.7664218927057867`*^9, 3.7664219399704533`*^9}, {3.766422114080977*^9, 
   3.7664221162822*^9}, {3.7664324173806887`*^9, 3.766432431951375*^9}, {
   3.766432489710086*^9, 3.766432491406754*^9}, 3.766432704043436*^9, {
   3.78768588624415*^9, 3.7876858873085737`*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"a0886e97-a45b-487a-a018-6ebdb4a01d60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Solving", " ", "the", " ", "Flux", " ", "model"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"qFlux", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{
  3.7664324927897263`*^9, {3.7664325442083073`*^9, 3.7664325501801243`*^9}, {
   3.766432629851096*^9, 3.766432640903481*^9}, {3.7664327501307364`*^9, 
   3.766432750489189*^9}, 3.766436877251444*^9, {3.76643960410539*^9, 
   3.766439604395259*^9}, {3.766441280973742*^9, 3.766441281649452*^9}},
 CellLabel->
  "In[606]:=",ExpressionUUID->"1738ba5a-8774-4bfb-9272-4a80551ed578"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plotting", " ", "results", " ", "for", " ", "the", " ", "TaR", " ", 
    "model", " ", "and", " ", "the", " ", "Flux", " ", "Model"}], " ", "*)"}], 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i11", "[", "t", "]"}], "+", 
          RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
       RowBox[{
        RowBox[{"I1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i22", "[", "t", "]"}], "+", 
          RowBox[{"i21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
       RowBox[{
        RowBox[{"I2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.766422096603424*^9, 3.76642214522199*^9}, {
  3.7664327108509207`*^9, 3.766432723327924*^9}, {3.766432771994156*^9, 
  3.766432805862062*^9}, {3.766432865316206*^9, 3.766432878728393*^9}, {
  3.766433607178939*^9, 3.766433651779921*^9}, {3.766437145315529*^9, 
  3.766437189355812*^9}, {3.766439313814934*^9, 3.766439314754487*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"4733ed8e-498c-4df9-ab5f-7c9c24a47ed8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
9l3b3SXgt4awohE5Evgf07S0zA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23338#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
2kuXtNCHEu9/Jyen5/RqDqRSWuh/haXvIw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23338#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.00003088910847004791}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {0.00003088910847004791, 75.04062815900086}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.76642212654277*^9, 3.766422146061494*^9}, {
   3.766432718673435*^9, 3.766432723981927*^9}, {3.766432800018943*^9, 
   3.766432806387589*^9}, 3.766432880090933*^9, {3.766433598481903*^9, 
   3.766433619467599*^9}, 3.766433652662796*^9, 3.766434176617217*^9, 
   3.766434213399249*^9, 3.766434255474657*^9, 3.766436820418569*^9, 
   3.766436880726206*^9, 3.766437154745577*^9, 3.766437190146084*^9, 
   3.76643735825974*^9, 3.766439105864305*^9, 3.766439161279427*^9, 
   3.7664393159719*^9, 3.7664395590533867`*^9, 3.7664396928919783`*^9, 
   3.766439725922021*^9, 3.766439861077425*^9, 3.766440967746451*^9, 
   3.766441283550417*^9, 3.766441323385806*^9, 3.766441386429144*^9, 
   3.76644142769987*^9, 3.766441458359977*^9, 3.7667873355498037`*^9, 
   3.766787427862273*^9, 3.766788502792898*^9, 3.766945923506749*^9, 
   3.7669463381005907`*^9, 3.784382207346128*^9, 3.784382328111314*^9, 
   3.7843823970562477`*^9, 3.787685896277504*^9, 3.788278127614511*^9},
 CellLabel->
  "Out[607]=",ExpressionUUID->"413e9d21-7498-438d-8850-5455e8f2d7c6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
hd/y1hYFmZ/InInQXDb8HzxfMUA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23422#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
AL9r7nU0TBwi9Tcpub98ByBvTaft7vohhHa5oEiJAdB2TmlW4FJEt7en3Nxk
/4CLoVqVi6UihmjWJN+m7odZca7Pr2wUsZmLXqZyqA+8961/XbdTxNLeCzus
H/og5NvbvjgXRVzWVuKyDOiDJDPVrbwgRZy/kRzLOtML5baHNSYfKOKwWE+E
5J9fQBGg/M51UBG3axyEV//2QMwZttqSEUU0jxM6/PRzD9BrLDduTCjipWaP
Y4HPe4Btp7QnflERNYO7rmW49YB4tNJa/h4lXFdcpnm93A0mSYqHp0SVsLlo
IZ+OqRse5CqUubkqoZiCieOf853Q+NOhMeuSEva39j9MP9IJS/tSe394K+H4
u7kVH/lOMPLYINcMVkKZM/fMYnc6YEPhozF9ghJm/ZlZk3zQAWcqzccLXiph
cvJt+0P9P4C9xZ9ndl4JfdnoRoT92kF3N09WeFkJY2Z6yG7ZtsMl+T6d0+tK
eL3UjY/9aDvUJ6NzNbkyXvl5qdZXoB38LPaWJTIroz71jyTPL23QMZBhLKek
jHR003fUxdvg9r+qCC9/ZRR4yRLkM/4dLrUn2dsEK+NUDH3F5ufvcOyVgw4x
TBmTA9viXzz5DtSee8kFY5SRipOXLsL2O4RMmod/T1XGUBpTsp2eFnAcnLoq
W66Mmjnqlzh+fAPN71wh00vKKBow3xQ79AW4Cqete9aUMeqDMV3upy+wkvBB
49OWMh5qdxCYyPkCr45e3LxPqYI5mdVCrW5f4GB9cZARqwqavE3QklltBqYq
w8B8RRUM3q9OIGdthtF8vyvO3ipY8keCf/tCI5zm2/mde0UFSz9IlfURG+Hz
reuGE0Eq2GCW5v5buhGe+qZxukapoMAUdaLhcgOc135X4ZaiglG8DR0vYhrg
d9vWzqXy//M+a6WW1EPnWlSM34YKeoqWcTYLfAaCG/182Y4KJv6etLhP8xlK
+1MsVygOo+9X4t24uU+QXPdMwp/uMPKIZHq///AJTBMavgTwHkbX1pQkf/tP
8FWAbn+I9mEUH9O6Lpz/ET4ZJN+LjDyM1Z9/ydiY1MGIY+W3oOuHSXNt38a4
Rh1QxwxT+MQfRj8H0aM3xOuA2KDi4ZB8GJ8+a9qzn6IOvhr26hAeH8bNq/I8
HOW18IMoMkVVdxglbyeI0QjXwtDRcq04clXs6ijsb6KtgT1uf7wjqFRR70z6
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
QGGx1+ruLknfM+rrXYII/A93eKsD
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23422#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.000022133745867161165`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {0.000022133745867161165`, 14.731566724106772`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.76642212654277*^9, 3.766422146061494*^9}, {
   3.766432718673435*^9, 3.766432723981927*^9}, {3.766432800018943*^9, 
   3.766432806387589*^9}, 3.766432880090933*^9, {3.766433598481903*^9, 
   3.766433619467599*^9}, 3.766433652662796*^9, 3.766434176617217*^9, 
   3.766434213399249*^9, 3.766434255474657*^9, 3.766436820418569*^9, 
   3.766436880726206*^9, 3.766437154745577*^9, 3.766437190146084*^9, 
   3.76643735825974*^9, 3.766439105864305*^9, 3.766439161279427*^9, 
   3.7664393159719*^9, 3.7664395590533867`*^9, 3.7664396928919783`*^9, 
   3.766439725922021*^9, 3.766439861077425*^9, 3.766440967746451*^9, 
   3.766441283550417*^9, 3.766441323385806*^9, 3.766441386429144*^9, 
   3.76644142769987*^9, 3.766441458359977*^9, 3.7667873355498037`*^9, 
   3.766787427862273*^9, 3.766788502792898*^9, 3.766945923506749*^9, 
   3.7669463381005907`*^9, 3.784382207346128*^9, 3.784382328111314*^9, 
   3.7843823970562477`*^9, 3.787685896277504*^9, 3.788278127721755*^9},
 CellLabel->
  "Out[608]=",ExpressionUUID->"fac74500-5851-4e07-b87f-5fc52c9e65c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"s11", "[", "t", "]"}], "+", 
        RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"S1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"s22", "[", "t", "]"}], "+", 
        RowBox[{"s21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"S2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.766437280436532*^9, 3.766437309817938*^9}, {
  3.7664395709351587`*^9, 3.7664395721795673`*^9}, {3.766439608592485*^9, 
  3.7664396134118032`*^9}, {3.766439822877385*^9, 3.766439823428994*^9}, {
  3.784382378673691*^9, 3.784382384480932*^9}},
 CellLabel->
  "In[609]:=",ExpressionUUID->"18b26548-db12-4a43-9f03-213288f46784"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJwd13k4VV8XB3CEVBKSEDLP85T5frmGG9IkEYq6ZkqGzENzVEIiEioVUiFU
REiUX4OkVFQylGROhci7z/vPvc/nOfvsvdbd66x9j+TufVs82VhYWHzJB/Ut
dWb+Sq54manZaMP8gno87nIprg30OUNbUSTiFU3cEHGrQMEnj6YwcKRvSi0e
zRr7vTl9btP6Cjo5e1Xj8eRUO+OX90PaBydn2wLleDw1PHx/2PslLVqxy/mR
XDxuGK+M073dRvvelLhOjHiii5kXWvyKxrgp3hQqG484Ea7eyfzXNHbFwOei
MvHIzLT3HjvdSWMNnH+5UTIerald+we9P9NKNkzdNFwTjxPnM56e1eyhtdMv
d/uLxEPFh7ZD+3YP7XvvFYNs4XgEL06NDi7+Qss/O+s8ujoe/yx16sbz+2jt
64S1QgTiIfQoij5y+httpdW2e1+541GTJt1xatkgLTbs1oavy+Kxc/czpkri
IO18y57g3qXxKGAVP+Z/5DuN0/urSRtXPDTR8OR71A/a+86SCwns8bCpXWz/
1XuMVmi9m1/pbxw0F3b/Ehwfo6V2TVm1z8ThlMSuF9LG47RirR8nw6bjELq7
OsyhaZxmznKF5eavOFh8DWqq7JigTQ4dLfw4FofekY8eEb9+0jzKX03p9sXh
bfLJyhSDKdqK4u7bx77EoVXdYElR7BSNszdl46vPcSjfn176nuMX7YLb2cGt
3XE4+MtmwVDwN+1ctbQW95s4SMzfzZnXm6btmch5q/s4DgK5nuOroqdpWzx+
XhF5FAcu2koLtYfTtPpXZSN/6uMwlrD3x07rGVrL0PO0Cw/iUMcua1i/fZa2
9CGr75E7cXDjTus8FDFHe73T1eNxXhw23aQpX3gwRxPmnPske5HkYz8Sd4dl
ntb0/rd6bHYcVFIYcv0n5mni+TferTgXh7mVC6GWWf9ogxMlwo2JcXi+XG8J
uxsLDpRt6qDtj0O7Lf/5FzEsGO4K4Fq3Nw7vEkflsnJYsNqm8KyMfxz6Oa5b
qHWzQKp4n2Uvk8w3vzrByYUVrTZZygPb46A0OvO7xJkN1T/l2seN4qCh8vZo
eCQbytlESqEfBz2/cgHzLDbIqasqHtWJg/lXP63Od2xorpKM+KESB+dPXYGs
TosgXqnlrCQWhxMvavu3ObJjLxeP5fa/sUjmzg6ROMCO7YlGnH2/Y5Fuc4Dt
xzl2qCzdctxjMhZ5zWoSCW/Yod9RulHveyyq6vJcih04YKJifN3obSwGbh1s
/7eFE42fVwxk34zF0LCbx9NgTrB8Vwi0KIzFuJLh+Nk0TjQ/4Xn16XIs5q5N
Llds58TOnv47A5mxEMjbs37r5sXI2MW4rX8wFuZnLOuvb+RCe/Vd5Q+bYpFg
U1HUvpcL77pYmq/YxKKOQ/rs/GkulDjqibpZxMIwhsVr6zMu5G47npG7Lhba
vjXLFhhL8FOhiH2HWCxk6JrbHc2XIvupU3buQAx2/8vDQY+lsNd/0+z0KQb5
93mUShKWItn8sAVrZwxENYbnWB8uRUdZ/aDokxisErt++abRMsQoSbfGFMWA
84/oKLsuN4yP19e2+cTAovxkp7oDN2ScA3h93GNwKHC2fkcIN0av59QNb4/B
v77Os6Vl3LjmO8RTZxWDP21pBq5qy/HPa6gwXjoGg8VcR+/I82D/ry/Jke+j
4ak+u1xzOS/cW2Bqvy4adl3HrwqJ84LDUmjPFeVo6BxfZcKizgt4TizrWxsN
9s8aAS838SKAdt1Yiisal5O9WwPTeZG47O2/y51R+DzScax4DR/yOCaKWoOj
4Fxye0FaiR8WYqWCH7MjsUHRc0LQWgA/OLJ+X3wYjtmTYTUfHQWQ9SIwX60s
HIWjR48WeAngiWKcafXlcLBXXBPWOiaAy/vp4Y+OhqPadNBsw2MBTNXef3rV
NhxyDv5ph+mr0PuEVe/72wNgid+vPU4TxKu7mQ0uI2Eo74gNe6ovhICjSwNZ
FEJReJS5u3e9EIZObjVYJxyKXD3bjX93CEFUxm8wcmkoks4LKarGCqHqznSh
9EgI9rje6U5pEIKP3e+W5XdCINA/SHeyEcYps+AP7mYhOPBzK/83FxF4bUiS
HPQJRkCB4cJCgAiyLWs7e12CsXub5LBQnAhENwzYj9gHw/7u6GObfBFw1ehV
aOoGQz46MfJWvwjizHc0RbIF4x3bw56wwDXIGDnfy5O/H0b8SrfZ40Uxu02n
mfktCC9Ydzx9fkYUOlka4xndQXCfSOzLyBeFXRXj3LtXQTjS9n21YqMo7v0c
0E56QMYnFyVs4BCDzZkjP6+mkfHLFLdknBTDXqaY6V0zMp5d4Zf8eXG4MOnh
n7btg+DU9hUTheLoH1XWn6HvQ2HfccXq++Kw2fD0p7rWPjxv/OZm1yUOts8q
n8Z5yPiD15uDxNdC1aGBt/bpXhTNy52/X7AW97qnvHdb7IX337SLV50k4Njn
sumXXSDS7YcfRbpLoDhm/0sbWiDqL1kObfCRQNPwZrZKzUAIMab1fodLIOe9
wcoWwUA8SXdrs8qUwBTrhrZPXwKgqKawaPCNBApVqvc0RQfgh3utj9JWSQw9
WZd9vdYfQhWCZ/7tkMS8m7TAznJ/WCwOqmzfLYkC5voPstf9kXNTii06WBKt
4rJ9gyn+sJs9fuG/VEnsp2fzGHr64+bZLS8C2iThV3fn0iSvP/Y1f9O+vUEK
o2+qePhC/VCPEn8VRyk0ayaYTvv6gbcm6ErRTuKj5zTGd/mh9PYMf8E+KUxP
vh/is/PD5Pllk+dTpZDww/yysKwfDvirlx56IwUbpfwPkh98EcMbruLoJo0c
necH3Tb64lmSEfO1pzQC4pPfK1j7QoyDJWfTXmlEpBy9w0rzRd3MiWW28dJ4
bjOf2qXmC5a+7CHaJWmILQ4MVV3hi8OVdYWKA9LI7c6b1233QdIOTtn5ABnc
aitbZunhA1MN7t/fQ2VwR3A4Z7GLDyY4+FvexsjAaOOOwtcOPnAqE/MtPSUD
SzHBseMMH8hy6d7cUyKDZK/ovF0aPqiv3KPb+kMGbRVLXtex+uA3b4Nlpp8s
5qSOLvtQ7I3ir82CR4JlMfB0kULpVW+4PXj2LShKFimOXuzJ+d5o8n6XaJMk
i3Oiqs/cM7yRWjf2fL5IFhJGa+geh7yhEiDuyPwuC6bHrMkjF2/saYn20vSR
Q7Bdo/SDld5gGsvZ/94nh8IebYPEFd7wKmvTrQmXw+qQER/XZd7wuSDLYXlc
Dvea+8YFFnlj776XV5yuyaGkj5b5fNILUaulv8T3y2HvveUO2157Ic271eWF
uzxcBe3nD573Qnp3KP2sjzxODoSLsZ7zwrnNa5WdguThLvbB4miqF84bhc5+
iZdHhULCyZwkL+SuEM/6lSuP7M/LFDhjvVB8d/9b0Y/ySJb4K/5wtxcaFgtv
9ndWAF+u2dkMTS98vaJm895DAV/8qsR91bzADQu6tZ8C3O2HkqHsBaeIfbrS
0QqQqBaZn5fxwtjgY+GuHAW0vhlRLxfyglhrcK9NjwK4JRIZMyxeiDz1LETJ
WxGOPz9Lv+zwRK5Cb8D5fYrIClrUqN7uiaamP56cEYowfU7bmf7SE7zzUk69
JxSx89HmcN9WT1wPjDTOLlZEGydHhHm9J97Yy3EsHVWE8eBXRnGJJzT5EjK+
hyrhnSdDRuGEJ6q5OhVaYpTAwZzplzzmCXMWtZqCI0r4kNoRK37EEw5jXZ93
pSth06oyeYkETxx4vk7x7R0l0L9nfreI8MSDxLGaxkklTJUZpPP6eoLBtuvL
hSBlGKpc3X7OzhOvZipDIiOUofTtRFivjSd2THBzbk9QBu8tgwnN9Z7w76lW
4k9RBnjFpjotPZFcJxh64rYyPm4paqbRPNER9YIzbFQZDzbWlUVrecL9p4mK
fYAKOJfkuSeLeGI5P0tbR6gKBLju27AJk3w0GkNcYlWgkuB3NGK1JwT2WtX4
JKugWuDVR38BTzwZtLc5XKoCLsO5+4E8ntD4tMvn3pQKnGdXiXWxeYLl6cEC
qVhV2AmtV7QcYeLmNzqj6KgqklboZM79YGIHJ+ewerIqNAQThyuHmKigJ2mb
5Kmi9cY/M7VBJnzq0hq3N6hCaPeZ9bp9TLTdudJzikMNvXn/HLPfM3Ep97Ho
n9NqUFk4536zhYkcV5XObRlqYOq2MC81M3Fe5GxqRa4aouq8hzMeM5Gc4c4Z
fFsNrwz1Y489YiIq+e/YcJsaIu5v8Ql/yMSWOM1HvSvV0X/PLi73LhPsOy/6
vshSB5dl0fBkIRMLa9hlVC+rY1dbtPlK4tn3fp9OFqtDZSDjvc51Jsa36W9d
X6MOizbfpuirTHRveG3c1K2OHb03dghdZuJDLjvXxxUaqBEbnE26wMSdZMOu
9i0aGOb9MLL+DBO7L/BwVDtq4EHs2wsXkpngL+xVu7RDAzzXBbRGTzMR1JB0
aN9uDUwe2cifcYoJlakPitzBGtjcdyRhPJGJAufoCMtUDbAZdi99eYSJdJkH
q+691MDFkKRypWgm6JoptLzXGshO/yadGcXEpAnT91inBlbcW+7MTrxpO3et
w2cN8GX4L/0SwQR3kitzYlQDskmP/K8cYOLI2Fy5Eo8mjgWp2toGMxFabbLp
op0mOLa41Uj4MVG5o4Xt/SZNCNn9Uc/yZeL37KZKgW2amGR57sVPHGnEFDnl
pgkWtpuCi32YiHuQ1B+1VxPHtZ7umvFk4nhdZ4RTiiZU7EsKWHYzkd24/9LK
DvJWdC6rI20HE127/27d+I7cX/D8qCSx6KKjnCe7NfHxe8W7Umcmcunn/dkG
NOF2+PuuV05MXGmq0534pYm5WtYPwtuZKGle1vpitRbMy2l3WrYy8bD16mSi
ixY6NnjzpW5golyobX/sLi14XHyVrk9c4DU7HrRHC7VRZad77JhIYts4tt1f
C5vMtn/UJHYwnP4hG60Fwds9ve9tmBgqshloyNZCsHDdvCmDCYHEsc6Z91pQ
PXAuyJnOBGen8PaRj1r4GVgRy0M8I2PxtueLFmyX/Bt5ZM7Ep/rzHS3ftTDS
w/Fbnbho2uzVuRkt5KzIOsdtxoSpT3qrprA2bkx553eaMuFrbVDr66QNx1NX
4soMmRhVEH5c5qoNOed7pQHEwUtnns24ayPYSdRSgTjm+b3uRF9tmPOUpOUb
MJGyVX+uKEobvLpfys7pM1G1a53RUI42ed6cT6TqMcEWoXvf74s2bhr5Tv2n
RfbHeVVD+YA2epRvBKQRcxv9ejL7XRsOAv16zsSr/lW8S5rURtLhsIffNJlQ
OKIzXbxIB9Ir6tO5iDemaK/7IasD5WiTESd18rwWalb6++mgOc12o6YKE0/e
73mSt1cHO5e4r2Ajnlqa0fU6WAcN3pF8r5WZsA2cZTWO1oGIq/GHMOJZzUf2
3Kd0MGWbGlKnxIRzjcNgyU0d8B4dPuCiyITgi/A1o+M6UG34z6dRjgnzhSI1
qV860PjbVZtNvFej28xxRgd5aTSbEOLmNNJyWHXhWvB8sSxx2PYllcn8uoj7
mLv8pCwTHT3Z9uo6uhhP/8niIcNE6s/ag0HhunBycDulJUXma0/xcI3WRViF
XfhKYruyPWaMeF3YsaUlTUmS/d+3hFXiuC5ktm1WvEscM+SQ8DJDF98K5MxN
ib2+/IhTq9JFS/L6yq0STBi/FI4ZntIF785bltniTAjfGnZ5N60L/+Y1XfHE
v089NGqa00WU/qs0T+IyG8+/F9j10G3g7qNJLNdcGmUroIfWcqnrrWJM8NVa
RxZr68GxTt5uEfHX4rADPsF60HkhtPLUGiYcxf59Kjygh0sz/TUhxI/PHLP+
HqWHRK4Px1yIC0IzhfwO6+HzbOghZeLdpver/dP1sGan+7LnIqR+X83921ul
h8nKs8aCxG+mDx8PmyXrcU1/eSjEhIU/93jlPz1I/B0Nv0Fc8THd6TfbOgT2
nVLKJE5rvKoYvmwdeOTEB/YSbzrV8l+E6DrcDjS8sZb42dplvDGm67C/Lcrp
2GommqzSzh86tA7prTLq3oJMDHjVPI86tg4tV7M0txNzHu9nC0lah/xXfxnW
xIwWvcA9aetg67uqSp74mXWXmcXldWhIOHLs+yomXjNkfnA0rsOh+VPfg4h7
bapMEln1Ycr3mjNZgIlF/p+DD3LoY+01w9AEYpmTXIWRS/RhZeDxM5jY678d
/H58+pi/mSrnRDxku/DVRlIfOiLcO6WJJ+0YKdxm+mizejr/YCUTrBs/9J5J
0MeL8reec/yk/uu2SYce0UdWnJzIBHGK2qs9Tif0SV1MdA8QS/A86ZdIIfff
Lj39khjPK7+W5eljj82jrCvECbapQ6/r9KHFMmhrT8zCYEyuntfHyy/fc2/y
kfnvPtKaYzFA1j5JlgLiFHlaSA+7AU7mlgRmE0ss1psq5DbAUFpM4HFiNEv/
NhA1wJFqg38exAkWCzMuRgawDzRwFCZmMatizY80gNSG09EpvOQ8t/jW+i7W
ACpD284fJ66wFkrnO2SAYnpYQxyxj32U3OEkA/ToBekHEr9yMbX1umCAYDmP
uzbElw80p6vUGiDW4c3QYmKLkrfy91kMkRGgVJO0gvT324snJtgN8cLSgH6Y
eLpcv1ppiSHURvLfRBOX3M+2y+EzxIEddOFA4lUtO/fHSxlibK+byCbir1++
VltaGOKIsfL0auITq/9saD9uCOYOr6ZbPOS8fPKkr/GkIcrWFQ4WEudFZkfe
OWOI3E3xAleIq7pMrqZnGsIhreVQJvFA3pE5x+uG4O25dy+B2FyB/0ZXsyHq
/vYedCCe01flGuAwQoBWuzUrMdfQv4tvlhjh/v0iu7nlTKy80KbdvNwIkRun
tv8hVpoP2XV9lRE+yjQeHCF2bqiu8pU1wsKwq+QH4qr1DM9RCyN8yQ9OrCAO
2rGn8c9hI5goSD4OJObJG+oxPmGEm3lmar7EJX37Fw6eMkL5lfaLTOJvAQnG
3OeMsClNKsWFeGf8xSqJa0aYfxlfv57YrqCzeP0TI1ybd2PIEyuM2p69wG0M
zwsT975yk/6o9bqsh9cYWqoBn3uJmeE72mRXGSMmaMOyz8R5LL7LS8WM8Yku
G9JJLLjy2PEmNWPYFG459ISYXb8+emSTMbpuTmTeIP5yUIdJO2eM7NDT+8KI
5QR5koOyjJHQ2UMPJvYr/nb30kWyvl+q6D7iqfbsZezXjHFMYuKDDzGXDOud
J1XGqGz7m+RKrNb8nHXLO2MMW3DfsSCOWuqdx1xjAk4+vfnVxA9z8fTcWhPM
CghvWUXFoy3ys1naBG64XsxPfNrluZWiiglEz9/2Wk6cX6I9OmJsgk9Vn5cs
Im6xZzEJ32mC/IHr06PLyPl+NutD4iUTfFl/YftT4qVvVr4KvmqCyClTWgsx
y+rkFpciExRkpyo+Jh7JPlShWmaCf9N6nA3EzZf9k1/Vm6BRQeHzPeKIchNz
4R4T8Je84S4i/vjqS1GhuCkElw/iJHHHStf8VClTHO3Xjkgkbt32NiNKzhRm
40/KjhNXvW89bKdmiuG8R8pHiFO+3HEbNzEFjXbLMJbYfOIon76bKazCxxr2
EV/jVYpsuWCKvZ0fdjsSq311nmbPN8Wmdfq1DsR3axLDzQtMcSLns/BW4ide
38NqS0zB5cXyYSPx0IPC4Du1piiN0w1bT6zqKx+Q99kUj/haBUyIKxpkdoVL
0/C7O6dPltg40+FThTwNLf/tOyhD/DjgiNukMg05/uqS0sRvV/e7BOrQ0Djn
6yVB/CfwitMeSxr+Ch9cvIbYUERqy0ZvGvrOjV3iJW4IXmspf4OGhFshcvNL
yf+BX2Mpordp6Oy+wTtHrBNZ3813hwb3u3Zzs8SF8R6hc9U08E3Wd04Tp5y6
cuVVKw0K4sibIna/Js8WM0RDtR3/vmHiheHMXYMCwDjvMs6PxDlqCRx9gsAz
7RnhbmL9IJ8bH4UA1yZh9S7i4J/6f9pFgdhnP1zfE3+deZ9cKwPoSxU1vyF+
wSlal6YDuH83evWCOFciX9TEAfAwPHWvgZgnSfOJqiMwevLjz3ri+J+NIeJO
wKyGogZl9+aB1gUXwNKh+EYdsVSAcmTjHqB0n8atGuJrd6veWIcAbA7mPZXE
t+yfJ29JA56Ee4wXE4vf22lITwcenC9lUD4jOT6gnUHi0X1zqYg4aIrfZFU2
MF2c7VhIrJXt9KPzEiDPNfP0KnHVQJ+1WxlgKiPUmU9cGzPL4tMGnBudOJxJ
/Pv21/FD7cC3r28HM4g1+tp7LnYAU32p9pQL1t+of/0OWBt7VPQccZKgawLt
C9AoadGYRuxYWrsgOAlk9cvpJBOP9SX8e7zSDP1rRoqOEiusDhztWWUG87xw
ecq7bZw//V1thm30qqtHiN+WatZpipqBc8S24DDxg9je2IsyZqB/e1B0cCnV
7y3mQ3XNUK77tSOWWNJ28Zz0djMcFFp+7QBVL2/o7SLOZuT5uUajbLUroZDP
xQwb1za9DyP2C5lxWNhphmbmiRWUKy78uPnBywwcl6UPhlDjh1/uSj1ghoIK
vpggavzp84/+nTODAWfIMz/imNVvsn5lmiFgdFMY5eRLfEHDWWaY5soTp3yn
Mkn0w0UznDqQGOxLPPcxJqzyqhl8R46v9aH2S81DPqDSDCtVKk57Uuu/VDz5
vsMMm0+uuOtO1bN0w9XZt2YYX1PuRdk/3Kl+zXszVA80CVKWWnv8l9tHM2i1
6Ufsoubb27+rd8AMx0vXYycV7/I8nR+/zbBV7HS/C7GErcCnOSFz6N88Ebmd
iif3xrTYGnNMjvHrUe6cNF9JEzNH066/k45UPtn7GQclzRHV0R9I+e/3F+Uc
SuY4E8zts43anxOJx3mMzHHtiFngVuJTzf80JNzMYSfRdXcjMfZ/1RTbZY4D
yX8OUZ5a80JLxMMcMs+d7Cm77r+oI+BpDpv9gwP2xKqixvpcgeZ4vF5biPKL
/ZG08Rhz+PapJdoR84pNbajPMcfv6ajs9cRNLV32tbnmSLdKDaQcEfxoY3W+
OWZ4ekG5pyVtc0WBOTwfaw4yiMuCNbcVlpgj9l+CAeUtT/a6pjwwB/frS1+t
iM+GfPdz7yb51PP5WhCLWEXt3/rJHLvpJXTKl4WWRVj1kPG5B8Qpl9eqHFXp
N4dQV1YHnbhtcVDe9A8ST8hKOmWenN+vU/6aY1nTBQVzql6bFpk0iNDJ+3aM
AKh8MtPpFaJ0hD7Mm6IRZ/rK2lwXp2Py/Y8Oytd4rLeflqKjJHf+HOXHTkn7
nZXosL7MKkKZbYT32oQBHb/83RRNqXpcJb5CypmOqA1sTGPi52VLdtBc6Nh4
JNWKsrj9rwJXNzqqMtcrUn547JlhpgcdGuHaY0bUfNNRXtx+dNQsH4yhfPxD
Z+3vKDrEUZBnSJyWlxrwXw4dh3wGWQyI+4xi7w7m0pHkojioTz1v73zYOC/R
sfvCqZeU3/DiPK7SYb/pfi5loUOjjypv0pFZdc2Uci7Tdk1+HR0qZcVH1hEX
KXK0hvbQwYCkgh5xu6jZ38BeOhYJ3ROgPLciVsW7nw5eFh9Wyva/p5KdB+lY
sZ+/S5eqr8b+rabjdOh/PX2GMmnkHxezWKBqB/u8DvG75MMT2WstsMxX9bs2
le+hh1LpkhaIy7zxjrJy2N+tp6UtoK1Je0I5ziWkKl7eAr16165TllHYE81U
t0BFXJA35X0N5hxqNAuYXPg4pEXMOcUq3LDTArI7nFgoT5eeT+53t4DEG6kJ
TeIfgersXHsscCCHrZdy2zfXMXtvC2y8zNpEObvr7uPufRZISZw9QVntUWDw
dIIFRh88FKTsmPb+P/UrFvAL6IQGMWNjkNnWqxYINRDUoWzEvfjugesWeNHn
JU9Z4pjO5dobFjix24SH8lDkmQjbCgv84nzQrU7l52Ep6/3YAnXsQzGUr2uU
xeV+s0CNachTNeK9qyZm7n63wOX7E3WUdWY1wl79IPFUxFVQrn9U6s8+boEV
3Y/yKL9zLHXymyb535s+QJkr9raW3hJLvGb/K0/Z5+nNr8+VLBGt3HlWlcrv
1ojHNxVLbDi8kER5Kk31I4s6uc6pc4hyguvN19ralkja1BBE+fxYSX2WkSUe
mPrbU36yqiTb084SVR9Hl1FW3F1sPx9oCc9p6zMq1PWLhqWT+yxxcc32E5S9
3rfyDe63hKvMvoOUCzb96GgPs8SLO/dDKEvQVFwKYy0x7X3XibKg6C3vrafJ
eqm2MpTZ3pYlFJVYIuJSWoMy8SU+897cW5ZQuldUQxkb2unppZaw8n9SSTm2
aZIzvsISifGixZSny7VPOzywRM4G8bOUR89UZi38ZwnbH/FelLvW3y/f9sMS
Dd8O8FM231jgFDZiiUfhbMspFzuc+Zc+Zgn9i+cWU47a5WnT8dMSNQfb55So
fhXG17tlzhJdl65+o+yU78u3abkVLJoK6yi//S0cZKNuhY6Hn/ZTNp1jF/TT
tEKFvk0g5Wus4zWJ2lb4x/vAh/IB7ubFT9dZYcX98l2UV0kF51nDCn2dQxso
O2xofWGx2QpVznHKlNuvRKnSQqwQrz4/pEjMz1J13zDMClbxnt8ob3WdsNQL
t8JEbHsf5Q4Bn52q0VZI2VfdTbnz6LYzaw5bQSCy4QXlbm+NiT9pVtj74tod
ygPKXytKy61guawggbLcCUmzkgorsCZmxFL26nd9fr3KChvmT0VRHsx5PZBb
bYXKqqOhlIeWNwiebrRC5OBVH8qjYxcifNtJ/LIXN1OevrPZWGrSCgu/LOUo
c+vrvVg5ZYUw6RppyhIPRNw5flvhWbK2JGVGU9/hwRkrbF2uJko5qyPsv1us
1pBQXc9P2fBX1g4jPmsUSAssKFD9Wa83wkHDGilhfR8op1Q3L7XSssbLvHvv
KBeY3shZp0PuP53ylvIzq9B6EX1r8F9mtFMW287J9YVG5nN8/5RyXbhSZuBG
azjORd6nvHAvuPLYXmvIsFzKptzNWX7ycpA12hfyzlOudpjwqAu2xqrHlzIo
h47v4/l9wBoLKTfTKA/KB3p7xlujp3EgiXJ7hrewRYo1Xpu8iaZ8NdQ1lrXc
GhtfZO6ifKjxwlaxCmty/gy6UXbn7VI0qLLGop1GrpRFSpzfBlVbk/fMQSfK
yX2O6j2N1uCzdttCOWLL5i91r62x27XckrKthpVlzC9rHAr6qUqZ5c0b1tA/
1hgZzFehXBXpWec/Y42oVZuUKUs9OrLOZd4a4QfvKFCe3fZI0ZCDAS7/ZGnK
xdHgmRZgIPFHmjDlJS2GnSE6DGRcbuH8/+/n33rWX48BmSvXOf7/e/Du2LRH
nwFxoUR2yj3OkU+3GDNwY/smNsr3hu/WaFowcObP2Lw81c/4dfPHtjJwaHnw
L8otbuq+/iEMmE+FDlDm3+NTczGMQeplTz/lnT6XlreFM4A7W/so/w5eWa4T
w0Bgiv4XyjIn/szOH2HgobPAR8oJ5Q9PpWQwUBzC94ay4eJNpZX3GYj5zN9M
+Rh3IttgDQM7UtUeU37F1+ggUsfAq2zbpv/HJ6ozE9fIwHmHxEbKmZpC5oz/
GPiHlQ8pT7n0vP7QzYDSvPs9yvAQllv+mQEWqZS7lE96bYmgfWEgLbq+irLU
/ibRggEGRp/JVFLefKzQM3CUgYrev2WUc05+uZs3zsDwMZ3/ezBFZGn7JAN1
RntL/5/PhVO39P4woNXZf4vys/zHLL4zDLTXSv7fq6/923LhLwM8lbtuUt59
Y93V5/MM9D/ILaF8qzToz8ICAw5vPt2g/D8fCIkm
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23503#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
D+/jb3ST/D/Pm6Ym
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23503#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 160.31734269640094`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 160.31734269640094`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {160.31734269640094`, 498.99999786142513`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.766437286548564*^9, 3.7664373104499207`*^9}, 
   3.766437359247373*^9, 3.7664391147345753`*^9, 3.766439163291195*^9, {
   3.766439563949339*^9, 3.766439572513982*^9}, 3.766439613692272*^9, 
   3.766439696324772*^9, 3.7664397300468616`*^9, 3.7664398241346416`*^9, 
   3.766439863423224*^9, 3.7664409695093393`*^9, 3.7664412851362753`*^9, 
   3.766441325369516*^9, 3.7664413883258657`*^9, 3.766441429048609*^9, 
   3.766441460159541*^9, 3.766787338276867*^9, 3.766787429389636*^9, 
   3.766788504126848*^9, 3.766945925376186*^9, 3.7669463409151907`*^9, 
   3.784382233605527*^9, 3.7843823316018972`*^9, {3.7843823804025993`*^9, 
   3.7843824052219267`*^9}, 3.7876858979312067`*^9, 3.7882781278541517`*^9},
 CellLabel->
  "Out[609]=",ExpressionUUID->"108ecf40-be3b-4360-a681-2789481bd92b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
vsa9VxskoGrJ/vODcr/lrS0SiJAn6DD/D8jU0zw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23584#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
Or/QZ2phgYZYg+2MRf8PMPjnUw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23584#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 207.673146866717}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 207.673146866717}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {207.673146866717, 498.9999994908166}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.766437286548564*^9, 3.7664373104499207`*^9}, 
   3.766437359247373*^9, 3.7664391147345753`*^9, 3.766439163291195*^9, {
   3.766439563949339*^9, 3.766439572513982*^9}, 3.766439613692272*^9, 
   3.766439696324772*^9, 3.7664397300468616`*^9, 3.7664398241346416`*^9, 
   3.766439863423224*^9, 3.7664409695093393`*^9, 3.7664412851362753`*^9, 
   3.766441325369516*^9, 3.7664413883258657`*^9, 3.766441429048609*^9, 
   3.766441460159541*^9, 3.766787338276867*^9, 3.766787429389636*^9, 
   3.766788504126848*^9, 3.766945925376186*^9, 3.7669463409151907`*^9, 
   3.784382233605527*^9, 3.7843823316018972`*^9, {3.7843823804025993`*^9, 
   3.7843824052219267`*^9}, 3.7876858979312067`*^9, 3.788278127964789*^9},
 CellLabel->
  "Out[610]=",ExpressionUUID->"394dd1e8-b268-4fe7-b9c5-bf9faa366ba9"]
}, Open  ]],

Cell["\<\
The other type of figure we\[CloseCurlyQuote]ll make: plot S0 vs. \[Beta]1, \
comparable to the other figure made for the SIS model\
\>", "Text",
 CellChangeTimes->{{3.787686253147011*^9, 3.787686282636486*^9}, {
  3.787686338887496*^9, 
  3.7876863434823008`*^9}},ExpressionUUID->"cdd121de-c68a-4aef-87d7-\
367c58d86d61"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"poppars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "500."}], ",", 
     RowBox[{"n2", "\[Rule]", "500."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sirpars", "=", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", "1."}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tarpars", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]1", "\[Rule]", ".5"}], ",", " ", 
     RowBox[{"\[Tau]12", " ", "\[Rule]", "40"}], ",", 
     RowBox[{"\[Phi]2", "\[Rule]", ".5"}], ",", 
     RowBox[{"\[Tau]21", " ", "\[Rule]", "40"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.78768631896203*^9, 3.787686337116778*^9}, {
  3.7876864760756598`*^9, 3.787686476240924*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"679c657f-4c4e-4eda-bd40-2f83c0d3ce34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tabdat", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qFlux", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qTar", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s11", "[", "t", "]"}], "+", 
            RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
          RowBox[{"qTar", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"S1", "[", "t", "]"}], "/.", 
          RowBox[{"qFlux", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.78768637489329*^9, 3.7876864351225452`*^9}, {
  3.787686465767254*^9, 3.787686506126225*^9}, {3.7876865409424133`*^9, 
  3.78768659727874*^9}, {3.7876866385732813`*^9, 3.7876866406645603`*^9}},
 CellLabel->
  "In[614]:=",ExpressionUUID->"34f5e24e-8ad4-428f-9819-44b39533ae0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"tabdat", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"tabdat", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.787686601694397*^9, 3.7876866835337763`*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"0aaca936-e5d5-47b2-aa9f-d7834227d551"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
h/mywU4PPb4hS88MdZWN6ZL/AWYZnBI=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw11HlczPkfB/A5mils1hFyVo6UjVhLyvL+oKY7TfcxaqaZ+U6rkBwpRyKr
LR0UObO6KClHW61biTYkdBNNJd33ffmp33s+/8xj5jPz+bzfr+d7vmpuu6zE
DBqNtpxOo429ytZ8zvW+8FAJOaiUaij1C4TMuyc9vwTJ3kdBZKmSx/xACcla
cKKJmxUDnffvXzP2l+3Hwxyt7AdCPwm5eGFsJcG0P38XeuyTfT8V/C5cJnwv
CWnmjn1yB2wc0gY3ech+nw5tE6LWTqEkZGJpnNeGiZnwYufx6Hy+7Lx/4YTc
5ydezhKiyQvP7tF4COVfGFsZdrLzH8Pcs2o1RywlJP7Hr0vjnsJck2HlOhPZ
fc8gUno0RMdAQlaPrxwYLXD94A2y+59D9GjKyWhdCcnp0fhxQy78NHvtxoTV
snpeQqLdhr8uLZcQq/EL8+BPXdMh36Wy+v6DZLp0EVGTEKnf2IH5sJhTFdEy
R1bva1iQa1oQoCQhu8fK83oDec4calhRVn8BaPKnSXnyEvJ/jUJoOTk1N5Ym
66cQeh1yz70ZoIjR+AXvwG5FYdmnTgr7ewdxX3onFTZRZOw2Xvh7aP1pUVpi
LYX9foAaVQr4lRQZb6f0A3gojugMF1PYfxHcK7GZ5ldAEZWxchYUQ/ZyW075
CwrzKIbtkVuNZz+hiIQaWyXw9OrNcN1MCvMphVp+cYhuGkXGTlNKLQWnBSGp
ytcpzKsMwrSbqJIYivSOHddTBt+S/BZ6n6Mwv3I4HKtm3hRKkY3jB1YAXyuI
u+kEhXlWwOrUpPN7DlFkvLwTH+G3OybBAXsozPcT/Cc4ELZ9O0XevB5bn+BA
cAl7hYDCvCvh9su1jq/sKTJjvMDPcOhVaP0mCwrz/wzPZ5XOPK1PkfHjeF+g
NUzTIEuPQo8qoOZWfshYKeunCrpuX1l4Sp1CnyqwmftXhM48WX9VMOLMPZQ1
VeYlhT3LefqT5WX9SiHMu46zbliMflKYaaVZvaZDjP1Xw42rR/ey68ToWQ1F
tyN5SRVizKMapkj9B+a/FaNvDajSWTeFOWLMpwb2Rd5755spRu8a0PAZKnC9
Kca8amFjwDfWjKti9K+FLVOOVZw/I8b8auHm2XN3G0+IcR6+wr1/XvRM8BVj
nl/BxuS5Yq+HGOfjK/QahVKpLmLMtw6UfZN2/soV47zUQXznH9EBW8SYdx20
LVhme2mNGOfnG3T7Rar4LxVj/t/g9LGq3VqzxThP38A3Z9Gr2Ili9KgHc2lY
qnRIhB718HzVg7j6ZhF61IPeqa61mZUi9KiHywv9B8wKROjRAJ6cloCkxyL0
aIChDoHn61QRejSARnu10z8xIvRohCLvhB5hmIhEjHs0QhKN11R6WIQejRCu
G9gxZYcIPZqg623688k8EXo0QTSjSeOdiQg9msDlVGmDva4IPZphQ9eKj7FL
RejRDF1OtWV3ZojQoxlqi0JeBjJF6NECdXfORM3tEKJHC9zUD167/7MQPVqA
P3nHrahXQvRohV0+VQyfLCF6tMKk5j9N5icI0aMV1C16r508LUSPNohO5a3K
OCxEjzZYmbHrl6Q/hOjRBkyFu2/4tkL0aAelN7H8SiLEftrhgm6DjoqWEH3a
ITjn4F31WULsrx2KSrP1uulC9GoH+9WRnKBmN+y3HXryi+1rStzQrx3+3VQw
xHrmhv13AJVz5lV7sht6doDpml8846PcMI8OKA3fEaZ2xA19O+DXHaw2d4kb
5tMBJ7542B20dEPvDlhhW37eUdcN8+qE6AOrzsktdEP/TmhiNugenuiG+XXC
hb1f/Z53CvD/2QlJS02dP1YIMM9OqAg9Wp+dLcD56IRUn3t6h5IFmG8X6L99
t1fhjADnpQuypRufu/sKMO8uOCI5zY/hC3B+fuxvNgxJNhRg/l1A1/YLD1sh
wHnqgqS/g5+ZzhCgRzf8TV4eqRnio0c3KO2futy+mo8e3TDo4Kt3I4+PHt1w
9Z/yeWWpfPTohrK2ndz6KD56dMMDRyGvwo+PHt1g3bsvL43PR48eGLCj1Ldz
+OjRAyOHz/40SYuPHj3Q8/LkzKipfPTogfC40jzFVlf06IGU+7AmP8sVPXpA
Z2h7Nv+4K3r0wrR1jS+KzF3Roxfie57EaCq7okcvsD0lyW7VLujRCzmJ5ebH
U1zQ48d+eVRb2H4X9OiFg5YJfUHEBT36oLX6dsHeiS7o0QcFIlalbdE29OiD
5Jjkv7RjtqFHH9S4BOmy3LehRx/4xIFFxapt6NEHL/bcXXJ3iIce/ZDU1zIr
IpeHHv2gL1jk5xPOQ49+qH9jdt7DkYce/RBLTcvatYiHHv2QtlV91skWZ/To
h8nrDjemZzqjRz8kUPHbhgOc0WMALEamn+GbOaPHAPgsDompnemMHgPwKH9P
WIjUCT0GYImDhcAhxQk9BiBCR3WihY8TegzAeaP+nbs2O6HHICyO9XB/ouiE
HoNw9K3qM1LuiB6DUDtPsqY33hGfl4Owre6Rd7WXI3oMgrd/2CyFDY7oMQjp
F17c/WOCI3oMwW8jwTkTShzQYwj4Tq1ZjbEO6DEEj5emdkz2ckCPIUjf0vjg
wAYH9BiCwhAt22WTHNBjCFIyKhqWlNujxzAsDjA9u+O6PXoMw4IPiQLmfnv0
GIblcnGGDfr26DEMR7SjVqgp2aPHMEy/bticUmOHHsNwImpIP+yeHXoMQ5y2
a+OL43boMQIfW/b4O9jYoccItBy9Ham/xA49RiD90aS4U7226DECr21r5/ya
Z4seI2C+3d5u7UVb9BiB9e7XYi562qLHKDzVXKnFB1v0GIXQQJ5G0DRb9BiF
kyrR8dPrbNBjFI6st7zBvG+DHqMg/uOKumOYDXqMwscZuawZQhv0+A70q+9n
rVtngx7fwbjkgUqOog16fIder+OFGTXW6PEd/FsN30y/b40e3yErITCpIsIa
Pb5D4jvThknu1uhBI5vLjtFvgDX2QyNLitUc0mZZow+NHDPZq7+w3Qr7o5E7
Js4/0/+zQi8aUaE/6TGNtSLj7VI04qmRo8o8ZIV+NPIoJ/i2up0VPh9oZFT1
fWbGSiv0pJFdKmfX35tkhXnQiDT3yW/zvnHR98e+4uZTHdlczIdGJKP26quv
ctH7x33FasVVB7mYF52cny0WDDpw0Z9Ont/JCPJfy8X86GTPbO2RXUpcnAc6
ebe5wP1VpyXmSSfOI1L30+8scT7oJJL5+fSz25aYL514kk87nSMscV7oxIt/
KsDFyxLzppN5exduybe0xPmhE4VzF5fGrLLE/OlkNLQkonyaJc4TnbwtaMrt
q9+KHgwSeetiq8KtrejBIHoPNcjX3VvRg0EO+HtzQ3S2ogeDXPvTPWVgxAI9
GCRQkl6wItcC549BcqUNyzRDLdCDQSbbt6p/s7VADwapyWhVkahYoAeD5K3L
d7/eYI4eDGJnpmuamG6OHgyS4Pu7gttRc/RgkMVOQ2VlZubowSCj/y5uU5hj
jh5MImYH72v/ZoYeTLJtX0pEaIYZejDJq+BNrp9PmKEHk3iXZg5W2ZqhB5PM
+dzuE6luhh4/9peOVnb1maIHk6heempOyzdFDybJzJr5IuOyKXowSVTmUfMZ
XqbowSSruPL1s/VN0YNJdJ4+jM5WNkUPJtH+R2ObYqsJesgR5q8ZOv05Jugh
RxyfzVcPuGiCHnJkkW+eeuJuE/SQI6n6muvExiboIUcKl011fKhmgh5yRNWi
JShp0Bg95EjXoyV5y4qM0UOOrN/ipLwx1Rg95AhXKzlQGmSMHnKkRmcqc7rI
GD3kSLuz8bVCMEYPOfK966a78jxj9JAjTuWLxPX9RujBInHamxM2lhihB4sQ
zcd6s9ON0INFXu84prf/jBF6sEiMa+VD691G6MEiczPuVKZZGqEHi5Qr/f0w
aKURerDIYlvtw5+mGKEHizTmdnCSOgzRg0UutdwwaHlviB4s4ntPkJSYboge
LKLYFJ344ZwherDIpmS7/d6+hujBJvPM19kF8AzRg00S/z0bNAqG6MEmHv6B
NvWLDNGDTa7MWMbeoGCIHmyy+71H62AzBz3YJHrkd6Hqew56sMkC30tPbmZy
0INNtuZfFl66wkEPNnmmtzat5TgHPdiEp82ZdW07Bz3YpHL9HHY6l4MebPLR
bk/7Yl0OerBJsbWJZacqBz3kSYD5+/g5EzjoIU+K3vp6X+4wQA95UvihcfP+
CgP0kCcKP89OSMwxQA95EhRJW651ywA95Mnrz8y9rGgD9JAnN9TilVcFGKCH
PLG5Fv74locBesiTGv9bU/zsDNBDnvyn9iUrapMBesgTyeMlnsNaBughT1Lm
XKlOUzZADwXiF99efkvOgPwP9Uyh8Q==
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.}, {0, 485.8163813533447}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.78768660858978*^9, 3.787686683894773*^9}, 
   3.7882781313155823`*^9},
 CellLabel->
  "Out[615]=",ExpressionUUID->"9eafac84-19ae-4709-8ccc-d457e4dd7706"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(Upper Left) High Freq Travel; High L2 \[CapitalBeta]", "Title",
 CellChangeTimes->{{3.787685997797535*^9, 3.7876860072755613`*^9}, {
  3.787686699045342*^9, 
  3.787686710308111*^9}},ExpressionUUID->"d1c15bcf-2a5f-402f-b9c6-\
63c03ac48ab5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"poppars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "500."}], ",", 
     RowBox[{"n2", "\[Rule]", "500."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sirpars", "=", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", "\[Rule]", "1."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"High", " ", "Frequency", " ", "Travel"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tarpars", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]1", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"\[Tau]12", " ", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Phi]2", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]21", " ", "\[Rule]", "10"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.78768671657576*^9, 3.787686722340773*^9}, {
  3.7876892364586067`*^9, 3.7876892415834084`*^9}},
 CellLabel->
  "In[616]:=",ExpressionUUID->"821c3797-d812-482f-bc9f-4a6ce1dc637b"],

Cell[CellGroupData[{

Cell["\<\
First : solve for residual population size as a function of \[Beta]\
\>", "Subtitle",
 CellChangeTimes->{{3.787686741572324*^9, 3.78768677338752*^9}, {
  3.7876869165364122`*^9, 
  3.7876869197295103`*^9}},ExpressionUUID->"5e8225ab-602e-4a8b-9dcb-\
16549a7dd66b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datFastHigh", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qFlux", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qTar", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s11", "[", "t", "]"}], "+", 
            RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
          RowBox[{"qTar", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"S1", "[", "t", "]"}], "/.", 
          RowBox[{"qFlux", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7876867580867558`*^9, 3.787686759312018*^9}, {
  3.787686933451592*^9, 3.787686944511117*^9}, {3.7876869934541273`*^9, 
  3.7876869970670443`*^9}, {3.787687091133718*^9, 3.78768709866328*^9}, {
  3.787687129226465*^9, 3.787687129363596*^9}},
 CellLabel->
  "In[619]:=",ExpressionUUID->"b46ffc0c-1c41-474c-bf7a-61f578e0efa2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Residual", " ", "population", " ", "size"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"datFastHigh", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"datFastHigh", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.787687167102415*^9, 3.787687175399469*^9}, {
  3.787687704738448*^9, 3.787687706024865*^9}},
 CellLabel->
  "In[620]:=",ExpressionUUID->"4e1d3a92-3ffa-420f-88be-cd61243f9b17"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
v5YieUjgcMjRJYtqgDxm4XxGseKLs4D/B1dLoWs=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw11HlczPkfB/A5mils1hFyVo6UjVhLyvL+oKY7TfcxaqaZ+U6rkBwpRyKr
LR0UObO6KClHW61biTYkdBNNJd33ffmp33s+/8xj5jPz+bzfr+d7vmpuu6zE
DBqNtpxOo429ytZ8zvW+8FAJOaiUaij1C4TMuyc9vwTJ3kdBZKmSx/xACcla
cKKJmxUDnffvXzP2l+3Hwxyt7AdCPwm5eGFsJcG0P38XeuyTfT8V/C5cJnwv
CWnmjn1yB2wc0gY3ech+nw5tE6LWTqEkZGJpnNeGiZnwYufx6Hy+7Lx/4YTc
5ydezhKiyQvP7tF4COVfGFsZdrLzH8Pcs2o1RywlJP7Hr0vjnsJck2HlOhPZ
fc8gUno0RMdAQlaPrxwYLXD94A2y+59D9GjKyWhdCcnp0fhxQy78NHvtxoTV
snpeQqLdhr8uLZcQq/EL8+BPXdMh36Wy+v6DZLp0EVGTEKnf2IH5sJhTFdEy
R1bva1iQa1oQoCQhu8fK83oDec4calhRVn8BaPKnSXnyEvJ/jUJoOTk1N5Ym
66cQeh1yz70ZoIjR+AXvwG5FYdmnTgr7ewdxX3onFTZRZOw2Xvh7aP1pUVpi
LYX9foAaVQr4lRQZb6f0A3gojugMF1PYfxHcK7GZ5ldAEZWxchYUQ/ZyW075
CwrzKIbtkVuNZz+hiIQaWyXw9OrNcN1MCvMphVp+cYhuGkXGTlNKLQWnBSGp
ytcpzKsMwrSbqJIYivSOHddTBt+S/BZ6n6Mwv3I4HKtm3hRKkY3jB1YAXyuI
u+kEhXlWwOrUpPN7DlFkvLwTH+G3OybBAXsozPcT/Cc4ELZ9O0XevB5bn+BA
cAl7hYDCvCvh9su1jq/sKTJjvMDPcOhVaP0mCwrz/wzPZ5XOPK1PkfHjeF+g
NUzTIEuPQo8qoOZWfshYKeunCrpuX1l4Sp1CnyqwmftXhM48WX9VMOLMPZQ1
VeYlhT3LefqT5WX9SiHMu46zbliMflKYaaVZvaZDjP1Xw42rR/ey68ToWQ1F
tyN5SRVizKMapkj9B+a/FaNvDajSWTeFOWLMpwb2Rd5755spRu8a0PAZKnC9
Kca8amFjwDfWjKti9K+FLVOOVZw/I8b8auHm2XN3G0+IcR6+wr1/XvRM8BVj
nl/BxuS5Yq+HGOfjK/QahVKpLmLMtw6UfZN2/soV47zUQXznH9EBW8SYdx20
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
XKlOUzZADwXiF99efkvOgPwP9Uyh8Q==
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.}, {0, 418.54800582541174`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.787687152838627*^9, 3.7876877103649693`*^9, 3.787689249193387*^9, 
   3.7876934108604507`*^9, {3.7882781257389402`*^9, 3.788278139467614*^9}},
 CellLabel->
  "Out[620]=",ExpressionUUID->"0072d439-30fd-4903-a930-dc9fdd11fdfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_Fast_high.csv\>\
\"", ",", "datFastHigh"}], "]"}]], "Input",
 CellChangeTimes->{{3.787687015313569*^9, 3.787687051835745*^9}, {
   3.787687108391959*^9, 3.787687141828972*^9}, 3.788277865831688*^9},
 CellLabel->
  "In[621]:=",ExpressionUUID->"2c2a89ed-a58e-430d-a9ac-c4572faef419"],

Cell[BoxData["\<\"/Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_\
Fast_high.csv\"\>"], "Output",
 CellChangeTimes->{{3.787687018033574*^9, 3.787687052130486*^9}, 
   3.787687145202959*^9, 3.78768771428745*^9, 3.78768925320341*^9, 
   3.78769341087967*^9, {3.7882781258419247`*^9, 3.78827813951024*^9}},
 CellLabel->
  "Out[621]=",ExpressionUUID->"6634643c-e05c-4b73-94ff-767d6862ce8f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second : show one archetypal set of curves", "Subtitle",
 CellChangeTimes->{{3.787686754179069*^9, 3.7876867574938498`*^9}, {
  3.7876869256702967`*^9, 
  3.7876869303956423`*^9}},ExpressionUUID->"4e3a42f7-c40a-4f21-a686-\
5d62376f748d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFlux", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
        RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qTar", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
        RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7876872854250183`*^9, 3.7876873904335823`*^9}, {
  3.787687450398038*^9, 3.787687456758687*^9}, {3.7876883944209414`*^9, 
  3.787688416600794*^9}, {3.787689259323649*^9, 3.7876892665154753`*^9}},
 CellLabel->
  "In[622]:=",ExpressionUUID->"e0776f71-e8fb-4ba9-97c5-8afed61b8f62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"s11", "[", "t", "]"}], "+", 
        RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"S1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s22", "[", "t", "]"}], "+", 
         RowBox[{"s21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
      RowBox[{
       RowBox[{"S2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i11", "[", "t", "]"}], "+", 
        RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"I1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i22", "[", "t", "]"}], "+", 
        RowBox[{"i21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"I2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.787693909778454*^9, 3.78769391963972*^9}},
 CellLabel->
  "In[625]:=",ExpressionUUID->"050fd31d-c610-485f-89f6-9f3d31924772"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
VVrxyBKvNCXpvlPqN7O8bAkXZ3G6/wcw/Tsh
          "]]}, 
        Annotation[#, "Charting`Private`Tag$67183#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$67183#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 115.08696679614431`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 115.08696679614431`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {115.08696679614431`, 498.99999847244766`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.7876883966658773`*^9, 3.787688417633786*^9}, {3.787689256480048*^9, 
   3.787689267802038*^9}, 3.7876934110155478`*^9, {3.787693901364965*^9, 
   3.787693920499447*^9}, {3.78827812630169*^9, 3.788278139687297*^9}},
 CellLabel->
  "Out[625]=",ExpressionUUID->"fe3e5874-b69a-4ce9-ad81-317850cd2e33"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
q+J6/EYJcX1r/mmu2MBYOZ2S904Jv+MPDwkQntT33nf8oxLE5lv+YyBM3cFa
7fBFCacFpvlal23AmurmPTGqhE9e7xb3Ej42tvhAZoMy/iwHH7+2ZIOwSn3q
lW3KwBFrVeNFG5S7NDJ0U5VhOTgvKU94ZoFazumojLLSzfY8hCN0vTedcldG
mvcVy5F/NoitSh2I3K8MSZU1JVmET9R8POKcrgyBmeDBhQUbNHnsls3MVCbO
m8uMPwmvXRn+/CZLGQ6JrnbvCZ+iLBuZX1WGWM6b8BLC6c/F1ms8UIbIDbY+
P8LZdQevcnQqQ9wt6NHXeRv07Plnb9OlDH6R1pNvCQusSmI+2asMhhL65FrC
ucZZAQyDypjg85i5Svh6fY36xLQycpqs8r0JFzese9XGo4KDPhYfx+ds8OzV
zckUVxXUTDqGiBB+wNt+MGaXCkLaMt14CN/wWRgP9lIBtyw8WQmnMtiM7QhQ
gZL5+IOZWRs46Mz9Fo9SQd4H/7gWwsOFloO12SrY6sh2LJpw72yYd3muCi4n
XxsOIfzGNO97wTXCckq++wiXff379UyRClakjlx1IhzHd6XPvVIFL9PtuVQI
c6aMfZzvVsG16Pk3IzM2YP7It+PPZxUcd0+JGyA8L2byof+rCmzPCxr1Eu57
ntXZ+EsF+W3FK68JF84Zvj0/r4JDn6/tKCZs4Jf5SplPFdX3YpyCCe8z167e
56wKib228YyER6X4Xpa6qcK35l/10rQNQtbOt8x7quJ1rBvrLOHo1se9KftU
wZl16dMvwun2WouFkaqYrbmg1U64Ypem7nCOKvYbGHXlEdY15DFWuaqK+Zv3
NmQTfi4yaxl5UxXbdXzsMwk3D1a4rL2nitZG6dUphHsDNCJlnqmiX0iVM5Qw
wxH1J/5fVVH5e+HWVsIndnLVPhhUxcnPCg9MCLPqTjct/FLFJo8rzRTCXMtl
XamTqmhWLRHQICx1TG2uaJUa8hj3U0UJ26Srav4WVwOdus77lSkb5BQolwf4
qyFa6dal54Sbur2a8varIYfrxOpqwlNrL/S8C1HDEMva2CeErYIW6PWi1HD9
1/VjDwgvKL+wZj2lBjPhn9M3CO986vCz+K4aNv3R3nGS8LGR4//6S9XQTP/O
NJlwyeYnG7gq1KC3sVM3iTBL/Gb1mBo1nGFo0o8j/NhkKGH7GzWsn824GEqY
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
ahOl
          "]]}, Annotation[#, "Charting`Private`Tag$67264#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
bGINg9mAoo8knvvg+rvER8qqCxX75XDFIXXXa+J21SPd14bkYDrF93SCWP6G
lYj8pBwmsxm+0iS/YHke+0vzcojW91izlbg+t/WYJKc81jD2/jpGLCB69nH2
cnn8fN90pZ54zxnHKREReVx998mQkzxfjuO9XvyK8vB4U1CVQ7yLrSA3TV0e
EryrYkaJCyL9Opfpy2ODVc3rTWT9rA+OW3DZyGNKU+7jMrLemT8fRCVsl8e2
NTn7Qoh/7IkqY2PKY+/zDto34mQ6x+q5ffIoeHFvzxtSP8ZqPJM/guUxbaS9
dCOpt1H2lU87I+Wx6G4Zdx2xwx0J35KT8tg4MPC2jtTnai7tWx5F8qjeEaox
Rer57Sf9aPt78pi/47AyldT7ybuwM6qUR5hj57u1ZD+MOW8eFXopj89DRr98
7cj+LfPQfv5THmNbvlaKbCPP64Qvx/0/8rjp+OJQM/EatwNdl//Kg8PyV0kC
2W+pPBFhUUtX4/4JmwhqPzI80qvU1q3GF86/7JJk/06uqLE4v3c1RhPbxoad
6bjxrVHoaOBq5JromHSS/uBU+fJ7QPhqrFJnc3xC+ke999ukTcmroZaSW3nR
nY7T1b+b566vxmZFf4NDpN8o75Pc5fljNXhrOJkX99Ph8TTCS91HAQ22Z+Lj
Y+nwNFSwnTyggBE107wbcaR/3WnVfhSigMmumu3t8XT4ZK9mtzimgOi3W72U
E8h+OPDqssM1Behu7/QaJv01XFiuJ6ZPAVV9ptz3zpB69H7OaHFdAxauyt2i
hXTUcIpu9XNci4iSWwyxN3So88We+xGshAvWXqrrNMj5+cdI2XafMlZwxFoL
HWVg2UqW1vZgZeiv9lVxT2CgQq02iBGlDLs1f3VvJTIgsN/ykU+qMrgn2R8i
iZxvA7abjpQow82BscMplQG1zy4+D8aVcWRJYcS+TAZYnsVdkY1aj30bHkt9
ucnApdwG8akUFVjrtWZwtDJwkanctfOcCpzPyefzv2YgU+zM6Xu5KthYVdok
1cZA6jlXjsDbKhBh4QjUbmcgPPXv71+tKhCPtlHc9ZaBbdHqdb38qpi4W2Xt
383AYucc35YLqljsb1T45zcDd1P1P7RtU0MOt2JVAA8T7tm87BW71PBxbGuC
7jImVhb2qlyiq+HboG3mAnFATXL8AXc10PqV808sZ0J5/L0iT6AaDATsTbJX
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
7Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$67264#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 63.90053319052031}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 63.90053319052031}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {63.90053319052031, 498.99999745407945`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.7876883966658773`*^9, 3.787688417633786*^9}, {3.787689256480048*^9, 
   3.787689267802038*^9}, 3.7876934110155478`*^9, {3.787693901364965*^9, 
   3.787693920499447*^9}, {3.78827812630169*^9, 3.7882781398263493`*^9}},
 CellLabel->
  "Out[626]=",ExpressionUUID->"209978ab-83d0-44c2-b16d-06868fd0d43c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$67345#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
XsogdgPsfx87z6o=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$67345#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 9.044415595239064*^-9}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {9.044415595239064*^-9, 63.9659781529501}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.7876883966658773`*^9, 3.787688417633786*^9}, {3.787689256480048*^9, 
   3.787689267802038*^9}, 3.7876934110155478`*^9, {3.787693901364965*^9, 
   3.787693920499447*^9}, {3.78827812630169*^9, 3.7882781399574203`*^9}},
 CellLabel->
  "Out[627]=",ExpressionUUID->"901b8544-ac11-4ecc-a4db-990a25a9cf1a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
3RsQ6agAd5Z+jyfGP8aFbptL/mcVQFBm+pymwWOcRGGyaOWtAM7ZhCD3thJs
rrE+d/iCAlDos7+vfF+MZ4sNfzRnKYClqTHD/HYRHl0LdqnOVYCw3g/ZG6+L
8HuDvO+P7u3FM/3UTLpRhKsm/kwklyiA+mDksIJgEY7myfniUKcAibo+89FG
DzH71cWhjU8K8NAif4mithDTDPFYzY8pwMtf82KtiYV4Q1R/cHxCAWKofWn/
WhfiL00Z/e0/FeCSQGdO8eZ9XLyu8+H2hgLMPivbVdO7j5FHWpc8jyLEbf8+
xTRTgD2J6g2e1opQvU1oFF7JxQviPG/K7RWB/vd7McuHuTiQfqN7w0kRfqSs
EUxscvHFdy9Gr3oqwgDvUElScw5OMVPbLo5QBDEnTYalrGxc46iqOZu9F1/+
b/2DXxbW1OHSUyhQhOmEKoNI6SzcJLxmGPFAEey/6nf1zmXizh81tvRP9u6l
lYc6PL0y8ai3SoTkK0UoGk4xVvbLwBThyrVeE3v1Fm1Ge26n4wQbjuaKH4pw
kWvmopZDOmbQ/Nux+VMRTEpGT6gfTsccO1XDScuKkMXW0TRScxuLX1ZaL6FU
gpdUZHW3x9OwSYqi6txhJTi7OjHWcPw/nP1IvtrbSwmu9SeUckSn4I5PZzvy
fJUgRfGjaKFlCl6hT//8MVAJGmkdXqbLpGAjn01yrQtKsFRxcYz0Khlvyrca
M1xXAr9drHXz+k1s89J8prRMCaxvTtZWHLuOL/+6sjVergR9shmHgqiu42eH
ag9w1CjBi/18cV9eXcN0MYeUIxuVYJjH5+NTtWv4hf7UpRPvlSD3QGwbk0IS
5uwJO7iwpAR5l0vSnXUTse5usYzwXyUwtF5T4aBNxL5yozqWG0rQUpcsZtud
gNtSwaORXBn4eHiFblsn4BCrfdU3WZWhdsa5tSjsCu4fzzKWVVIGKcEMDe73
l/GtPw2X/MOU4bGz3bTTyCXs25dyxv6CMrCpXqtrKb+Ej5ef1SFFK8PXjAcN
l65ewjR++8gFE5SB8bj1CpvGJXxx1jzmfboyVGgFbwfkxWC3ibkomRplGPYO
UGxdicL6TY2neeuUQVQ0pdzrSRQWyruFaBqV4fbTQotKjyg8aq+6M/ZGGYoi
MrDw10h8cjg28saAMhwR9C02/ngRa73nufhrRRmsCffWSociMM+TX3bD68qw
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
nEXQk2f+a7u7JKDN5bOcPSKC/gcQq8WY
          "]]}, 
        Annotation[#, "Charting`Private`Tag$67426#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
xRppgv0PZyGfEw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$67426#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.2300425264173023`*^-9}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {2.2300425264173023`*^-9, 108.72171899247776`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.7876883966658773`*^9, 3.787688417633786*^9}, {3.787689256480048*^9, 
   3.787689267802038*^9}, 3.7876934110155478`*^9, {3.787693901364965*^9, 
   3.787693920499447*^9}, {3.78827812630169*^9, 3.788278140102818*^9}},
 CellLabel->
  "Out[628]=",ExpressionUUID->"2a554511-d55b-4c9d-8a4c-6642af2ed0be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_Fast_high_\
time_series.csv\>\"", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s11", "[", "t", "]"}], "+", 
           RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
         RowBox[{"qTar", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"S1", "[", "t", "]"}], "/.", 
         RowBox[{"qFlux", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i11", "[", "t", "]"}], "+", 
           RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", 
         RowBox[{"qTar", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"I1", "[", "t", "]"}], "/.", 
         RowBox[{"qFlux", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "60", ",", ".25"}], "}"}]}], "]"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7876875432462473`*^9, 3.787687627699267*^9}, {
  3.787693959496442*^9, 3.787693976130927*^9}},
 CellLabel->
  "In[629]:=",ExpressionUUID->"6da195ba-d168-4398-8444-45a60c597f39"],

Cell[BoxData["\<\"/Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_\
Fast_high_time_series.csv\"\>"], "Output",
 CellChangeTimes->{{3.7876875700962667`*^9, 3.7876875961552896`*^9}, 
   3.7876876343466787`*^9, 3.7876884194582987`*^9, 3.7876892697667303`*^9, 
   3.78769341116691*^9, 3.787693978105188*^9, {3.788278127288005*^9, 
   3.7882781401753063`*^9}},
 CellLabel->
  "Out[629]=",ExpressionUUID->"ecffc43b-40a2-4538-94d0-b47212dfd8e3"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["(Upper Right) High Freq Travel; Low L2 \[CapitalBeta]", "Title",
 CellChangeTimes->{{3.787685997797535*^9, 3.7876860072755613`*^9}, {
  3.787686699045342*^9, 3.787686710308111*^9}, {3.7876876483100977`*^9, 
  3.787687650245266*^9}},ExpressionUUID->"b0d8c8d9-d4a0-4b7c-8dfd-\
dd7ed6872f57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"poppars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "500."}], ",", 
     RowBox[{"n2", "\[Rule]", "500."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sirpars", "=", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", "\[Rule]", "1."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"High", " ", "Frequency", " ", "Travel"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tarpars", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]1", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"\[Tau]12", " ", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Phi]2", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]21", " ", "\[Rule]", "10"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.78768671657576*^9, 3.787686722340773*^9}, {
  3.787689274862273*^9, 3.787689284416379*^9}},
 CellLabel->
  "In[630]:=",ExpressionUUID->"a8cb49be-ea7b-433a-a008-3726548bed98"],

Cell[CellGroupData[{

Cell["\<\
First : solve for residual population size as a function of \[Beta]\
\>", "Subtitle",
 CellChangeTimes->{{3.787686741572324*^9, 3.78768677338752*^9}, {
  3.7876869165364122`*^9, 
  3.7876869197295103`*^9}},ExpressionUUID->"b64cfa65-05f1-4468-bc06-\
9eda5e471144"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datFastLow", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qFlux", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qTar", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s11", "[", "t", "]"}], "+", 
            RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
          RowBox[{"qTar", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"S1", "[", "t", "]"}], "/.", 
          RowBox[{"qFlux", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7876867580867558`*^9, 3.787686759312018*^9}, {
  3.787686933451592*^9, 3.787686944511117*^9}, {3.7876869934541273`*^9, 
  3.7876869970670443`*^9}, {3.787687091133718*^9, 3.78768709866328*^9}, {
  3.787687129226465*^9, 3.787687129363596*^9}, {3.787687664954625*^9, 
  3.7876877163817873`*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"392db5cc-65c1-4223-a4d7-eb669e5f672a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Residual", " ", "population", " ", "size"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"datFastLow", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"datFastLow", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.787687167102415*^9, 3.787687175399469*^9}, {
  3.787687718849916*^9, 3.787687720193314*^9}},
 CellLabel->
  "In[634]:=",ExpressionUUID->"2e80d4ce-890a-4e42-8269-6e7b0e4429b2"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
yQQ9OKQu+3LPxhZj9BAn3ET3gG/pxuR/r/yR0A==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
4ZL/ATuXhSA=
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.}, {0, 498.9250824154206}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.787687152838627*^9, 3.7876876736193542`*^9, 
  3.787687720716815*^9, 3.787688539823859*^9, 3.787689289462492*^9, 
  3.787693341402433*^9, 3.787693413779879*^9, 3.788278148346128*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"ca4de1cb-aed8-4f56-b501-e348b0cd8991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_Fast_low.csv\>\
\"", ",", "datFastLow"}], "]"}]], "Input",
 CellChangeTimes->{{3.787687015313569*^9, 3.787687051835745*^9}, {
  3.787687108391959*^9, 3.787687141828972*^9}, {3.787687732983377*^9, 
  3.7876877379029837`*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"e1f6a8b1-24a8-48c8-a1c7-2c616e0352d4"],

Cell[BoxData["\<\"/Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_\
Fast_low.csv\"\>"], "Output",
 CellChangeTimes->{{3.787687018033574*^9, 3.787687052130486*^9}, 
   3.787687145202959*^9, 3.787687738266717*^9, 3.7876893013775263`*^9, 
   3.787693341445136*^9, 3.787693413802374*^9, 3.788278148395067*^9},
 CellLabel->
  "Out[635]=",ExpressionUUID->"6cce5fa7-4e9f-43d6-a562-897cf09d434f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second : show one archetypal set of curves", "Subtitle",
 CellChangeTimes->{{3.787686754179069*^9, 3.7876867574938498`*^9}, {
  3.7876869256702967`*^9, 
  3.7876869303956423`*^9}},ExpressionUUID->"5c53098c-e82a-46e2-b131-\
35187279670d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFlux", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
        RowBox[{"\[Beta]2", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qTar", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
        RowBox[{"\[Beta]2", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7876872854250183`*^9, 3.7876873904335823`*^9}, {
  3.787687450398038*^9, 3.787687456758687*^9}, {3.787687751643998*^9, 
  3.787687753544582*^9}, {3.787688378203321*^9, 3.787688378601192*^9}, {
  3.787688429247384*^9, 3.787688443064588*^9}},
 CellLabel->
  "In[636]:=",ExpressionUUID->"664c343d-b6b1-4e55-b116-55ede78a54fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"s11", "[", "t", "]"}], "+", 
        RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"S1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s22", "[", "t", "]"}], "+", 
         RowBox[{"s21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
      RowBox[{
       RowBox[{"S2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i11", "[", "t", "]"}], "+", 
        RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"I1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i22", "[", "t", "]"}], "+", 
        RowBox[{"i21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"I2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.787693909778454*^9, 3.78769391963972*^9}},
 CellLabel->
  "In[639]:=",ExpressionUUID->"57180fdf-0f4c-4999-8de0-f737fba49f52"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJwd13k8VG0UB3CEFBVCEiX7vu/b/JgZvJK0IUsy1izZWmQZIirJlmwJLQop
FCpFqIRKhVaSFkrKFpKU9975Z+bz/dxnzj3nmfOcmbueEbzFm4ONjS2GeCHf
pdL+ni9cW212jvbu74J6LG7wKK4L8kujbNzn4RpPuDni6gUFvyKKSnWUBCfh
Vo1QX26/Skq4sDONSy0WbSld1tO+dylR3vLuf5Rj0W6UcOu771OK6ZpRz1L5
WFw2WcnUrXxG+SOQb76K8ESvV9He8ueU0W2fEg7LxYIpxvNxsribktT6ao2z
bCxycux8x068onAWDf8Yl4pFR0Zv6Fff9xSj2CrVNolYHM3Nbj+pOUD59iEr
U4ywih/FWbtygPLFxZI9QDwWYYszosLKP1CitK2GuNbE4h9dp3G8+BPFr8lE
R1o0FqL3Iqk/Tnyh1IVODs4IxOJ2pnRPCu9XCtSTqfKEdzIee6kc+0opPJFo
t50/FhfY1yYFHB6m2Dud31q+PBaaaG4bjhyhWDpO++rzxsKmYbHdkO8YpSnD
ZOzVIuL6AmNaZHyMUtUnJPaIIxYpku6d0ibjlDsVy3lvs8diL6N+37b74xRe
V1GxjAUmaEMh92t7JihWOms+Cv1h4uOPdx4R0z8pPo+/h4ZNMPEy9XhtuuEU
Zans3gDVcSY61A2XlMVMUZSbaMmfR5m4FppV9YZrmuJzZ4jX6jsTh6ZtFoxE
Zig73jYN9g4xIfn3RsFfvVlKfJtih1EvE0KF3uPCUbOUwGL3m9feMMFDWUlT
uztL2ShosELuNRNjcXtGdlr9pvicSbr3r4eJRk5ZoybHOcpA3vTr/Z1MuPFl
voqPmKd8Dwr+uK+JCfsrFOXTd+YpU2X5qwobiXrsfjCvs/2l5PjxvW26w4RK
urXc56N/KaOX2x9N32RifuXCXnreP8qRIw4311Qz8WSZ3hJONzZUxTeK2xQz
0bVBMLczmg0xa35dMCxk4vWxUbm8AjaUSsxkSBcw8ZnrEk2tjw3VO3IYQzlE
vL+r4pxc2JHR5OYkl8aE0ujvmYodHBB548KVEM2EhsrLxAMHOVDfFKEqGMmE
nv81IYs8DiQ23Hmef4AJiyF/rVevOTBqN2ufG8bEjv7eIHanRZAa3hJh4cfE
0c6Gz9sdONFV3ehD38JEKl9+uOR+TrBtS/zstYmJLJv9HCOnOPH+enBftC0T
Ra1qknEvOHFS+MvMKUsm6hqLXMq3ceGQYcaUvxETg1cPdf3bwo3DMzvvp0sS
90+jN13axIO9fyV/2A7FIM6mpqxrDw9Cb85KBH2MQSOX9Mm/J3hQu1DyKaE/
BkbRbD5bH/OAwf/gc9bLGGjvvs27YL0EzJWrGi1aYyBD1XR0sFgKmmno9Ybz
MWD8K8Ihj6VYM/0ox6woBsW3litVxC3FKwHat5r8GIhrfJ9nv7sU0vX0tEMZ
MRCWuHTuijEvLq74+DyXGQPuX+KjnLp86Kl14q50iAHt2vFX6tv4EL19xVrm
5hjEB801OYfz4XfyiWhz2xj8+/TqZFU1H6TfUR9cMI/Br2eZhq5qy/Boo1FK
r3IMvpbzJF6XX45QbbrX3N9oeKvPLdNcxg/XzRJiSbnRsO09UiK6lh8r5J7k
KmREQ+eIsCmbOj++q4W/rj8WDc73GoFP7flRHB6+9WpkNM6l+nYEZfHDy/6+
7VOXaLz/0ZNUvkYAupxh1BGxaOyoqFyQVhLEmdKffWopUYCTaQ6vsSBaFv05
dCU+Cgqcj9R+bhDERcc/XmIHozDrMuTWEiSIpF33XjZ6RyGbV+LOrmpB1FQz
hbXMotDtnxxxxmAlZr54xDaPRGKjoveEiJUQAi/znDlnGIm54/tuv3MQQsX8
tY5atUiUjiYmXvARglrKX9l66Uhw1lxcrZUkhJ/1lcXZyyJRb/bVfOMDIVRx
7HMsHjgIuW0BmQlUYbg/uJTJffgg2GJDtccpIthlIOR3uykC13pi9rUbiGJS
7X54uugBGAsqVXLGisNri9i3QGo4Otmd25+kiePUPqW6cp1w7Jo49im7WBxt
1ufPj8mG4/Cz4VWKLeIoVvpYmsZDrE8ti9vIJYE7k4tOqnaGYRev4pbs4xLY
m3CyhcclDIc5Fablc9ci78XzVJfoUIhMOa6YKF2LjR/8VzzfE4rST0cU62+t
hXe48sUtHqF40vLFzbZ3LYodnI5FWhLrD11qDVm7Dm41nkq7BEJR9lcu99aF
dZDk13+WWxYC3z+ZZ0qcJPHQNJanoC0YWXbf7x3cJQk/F7+tUdeC0XSW/m2j
nyTOV9x/Hl4QDFHrWb2ZA5KwPFhcUhUSjLYst2eWOZIwDilXdRELhqKawqKv
LyTxoD+wLzpsD0Z2NfgpbV2POzHXngvrBUG0RiTtn/N6WP/kPaokHQTa4pDa
LsZ6rN1vMebEH4SCK1IcUWHrcXSqtYZjJBC2c0dOP8pYjx/rS3DsbCCunNzS
GfhsPZRPbvu4Y2Ugglu/aFdulMIuzdZtV5cEoAkVASoOUrj6OEktbdYf/LdD
zpftlEIfj4Bpyhd/VFX+FrwQLIWWqlNZbx/4YzKXdzI3QwqnjV54PEjwx/4A
9ar4F1Lor04Yvc3pj2j+AyoObtJ4rnerjSG2G4+Tjb26vaXhdP2MWxbfbkhw
sRXY75FGndHipP5/fmj8fZR3Q6w0AgSG+e988gPbp/xvlLPSeKT/Izn3qh8S
ahtLFQelYTjuUldv7YdkZ27Zv4EysGBcZ9494QszDb6Z4b0y2BXwu4mZ4IsJ
LsGHL6NlcEzz2eCmg75wqpbYXZUig5s9h/bIe/tClkf3imeFDF653yguNfVF
U62nbseIDJbGNAz0Tfhghr+ZnuMvi8HVJmIuPj4oH2oVORwmC9URXhHZnT5w
u/P4S0ikLMqLd3T+3e6D+76vj9kky+L+sKBQL90HGY1jT/6WycLJ4Ze7hZwP
VALXOngNy4K99M2VymFveD6M8tH0k8ONOe4rvpHe8DKRs5sJloPRjM2jv+He
8Kl+pnv7gBxC9S77FAV5w++0LBf9iByk0g485PTwxp7gp+edLsqhLdNCzMHa
G5GrpD/EfpZDatTRYo7V3sj07XDp3CWPwNWGm7havJDVt5d60k8e/XtGkr/c
8cKpzeuUnULkEXN379LuG17INd479yFWHhSPP1kPrnihcMXavOlCecg+jBZd
le+F8huhL8XfyUP96j2dnXu90Lx49eaAHQqosfkXK6TuhaHzajZvPBRgYrx5
T5mSF/hAo1r5K4DDxHG1lZwXnCKCdaWjFJBqV+FRIOGFsa8PVvcWKMBprdtQ
BZ8XJDrCPtoMKCBl0+Z8x++esPA52nvzqwKYrgYlIV894cdR2CM3oYA+o5mA
jM+eqDFqb+XgUISJg+34cJ8nNlxed7leWhEvEph60088cTDlcbiSryIiuT8L
+VV7olDhY2BusCIUG424Z6544v79X97cEYqYmi7vTC73BP9fKaePRxXxXZNW
2XbeE5eCDprklyticjjBNCvbEy/s5LiWjipitXyRvXuMJzQF4rKH9yphR5C1
TsgmT9TzvFJ4GK0EmsLmy6O2RP5sarcvHFbCN/797aE2ntg21vvePUsJj7T2
v06ke2L/E33Fl9eVcPaoxrbPxp64c2zsdsukEqrCZlLDFT1hzeH+4XSIMkyj
5V0uLPbE89+14QcjlCHHVFcq5fKE8wQft2OcMt7UbyyrXOSJgIF6JcF0ZfSx
by9oX2AgtVFk79FKZbgc2ZavMMtAT2Qn975RZdwVW2xwYpiBXT9NVewCVfBS
9WTMg04GlgmyPevZq4IXRn9sBJ4wUK/REu4So4JjAhlJux4xILTH8rZfqgp4
vEpVlrQx0PbVziahSgW3drzdF9/MgEa/u9/NKRXIf+/WW1HLwLv59XyUvyrE
/MttTb3OQPKaz5UPuFRx00nKVeAaA5+d/H51iaii+XRn7LpKBnK7Q5J+GKji
rT47p3sZA2zthy5IxahiPips2LuQgStfqNZliao4wJcjtPIMA87c3N/VU1Wh
G5Ay3HKagRpqsrZpkSry+8ujlPIY8GvMbHFsVoWRkEGFaBYDz66fH0jhUsOm
n/EtgckMnC18IP7rhBq2BMePP49goMBV5dX2bDWM/CcZ+/QAkY/YyYyaQjW8
tp3gfbqf2M/sXdxhlWqQVkjk79nLQGTqn7Hvz9TgVpHrNB3CwBam5r2PK9Xx
qdQvN2M3AxtNcmPMxdVxnzPK/IofA9Zz//SLZdQx9k31SocvA2b7H1e46arj
vDmzcakPA8p7fLNfO6hjzcxLvyIGA5w7z+zuzFPH6QTBn6tcGVhYwymjek4d
dCl3LTsXBube+PcfL1eHcnDxQqIzA+PbDbb+d5v4fNlD/TknBvo2dpvc71PH
l7H+9qntDLwt5OR5t0ID3d/sP6nbM3A91ai3a4sGWkK/J5TTGWCcXs5V76AB
G96utFWEBUs/qp111sB2ylBZIo2BkObk+GCGBh469rJ5UxlQmXqryBemgdu7
RxdpmDNwYUdUBD1DA1hxv2HahIEsmTvCN59qIEIk+Jy2LgNUzXRKUbcG7GUw
3qjDwKSp1+6kVxqYv79HaANhe0e+hm3vieuJ3W+8tRngS3b1mhjVQFCwhVqJ
JgOHx+avKS3XxIdVW6v+U2Ngb72p/RlbTejPG9tJKjBQ6/yQ4429Jlz51j+9
Lc/AzJx9rdB2TUwYLBZ1InzQ2EssxU0Tz+bO/MmUY4B5J/lz5B5N5G7keS8g
y8CRxlcRTuma8BXxb9eSIvp7p4dyVpYmnv/rF367noGlC9/ePc3VRLbYQ8F4
wimUfxZWZzXBqRsl2iPJQHqTzDK9a5qY7DymGreOgfyW0LMrezSxIEV1+iXO
QC/jz9ZNr4l4MS18ZYTFFyVyH+/TRHzgtKsL4UJqbgDHoCbE9l181LyGgfP3
G3UnpjXhlFXQdEqMgYpW3o7OVVqIvJDItUOUgbsdJZPHXLQwrXVjO12IgWui
z0Jj3LVw3H3InY/wBZ+58RBPLbxVetzdvZI4fxybxhwDtHCerXzak/A2o9kR
2SgtjLhp8x0TZOBbmc1gc74W/rNV7x/kJ877sbFXv99oQfbmLsPBZQxwv1rt
+OOdFr4s2SNyk/BvGdrLgQ9aKC9TsDpOuL8pt+fhsBZaHQ3PahEumzV/fuq3
FiKSeOUT+Yh+98vq0FytjfKTar8MeBnYbWXYsNtJG3eDLTtf8TAwqrD6QbWr
NhrWSi+vJhy29Pfj37u0saT5/ulkwtFPbvYd262N5QYDZ8wIp281mC+L1Ibd
6h6V8sUM1LnrG38r0EZAz53JVG4GjM1XUbXOaiPfSr8tkHCT1C+byBJtjFKN
P9oQbh+sc156VRs3DjV/WEy4L0AvUumuNoxvL2NL5GKAI0L3lv8Hbfg5Glse
5yT6Y4dw87VBbcgOqMgFEeYznm6bG9bGr/Rki02Ehf/VvE6e1EaV+GU1IcIK
h3VmyxfpgM3c/WHxIgY2pWvrj8jqQEZ7IOs+BzFvSjVrA/x1cEf9Z4k2O9Fv
bzzbivboYEWR50VxwlNLs3u7w3RgUSzaw0V4Q9Acu0mUDtZIfa99zUacf817
dnwpOlC7e+ZYHOEdt7d9rbiigzqVbLnXCx44/D3pz0C1Dqqefu+6R7hK4tZy
4TodcKhQL1US5omT0I1p1IFKUE3rEcI3aUOHNj7Vwc9L6q8NCYt0HlgzOq6D
2bsli0r+ecBioUxNaloH8b828p0kvEejz9zhtw5aDm8yOES4NZMYuey6GLe3
/O1GeJ/jktpUQV0ULI9ftZpwz0C+nbqOLiRXch0/9dcDGT8bDoUc0MXMQlZ2
yTwRryvdwzVKFxkC/jG5hG2rPc2tY3UhV2YZfZwwd/ASdskjuvCM390cSjj6
27a4p9m6CDY970Uh7PNhhKlWp4uXojXD/X88YPJ0dfT3KV3I55W+UCW8+up3
l9ezRD4XXwdJE55JuWt8f14XW76sW72acLWN95/TnHo4OOhfyklYrrUqcoOQ
HuyXaF/sm/OAQIPVwXJtPQgH32FLJzxUvm+/X5geXozmbFlE2EHiX3/pfj1c
3NTuOvfbAw/SkqyGI/WwIbs9YoLwhb05ov4JetC7Xjb4njDD7FZ9QJYels6I
pjUQ7n8+/29PnR7Oda9ZFE3YjpboW1lP3E9HX2wv4Ya6Zc/GGvXguHmpeSDh
gtNrz4Y81EPBZZcGV8LO3qCGvdaD6g3bIDPCL2YTjuyb04Nzw4Z0TsK0AL7x
2n96MF7TnPV31gM177KcZjj0kawucmmGcGZLieIBXn1wvBuf+krYPuXhowhx
fYyHBWt1En68jpc/2kyfeJ48JXGa8H3LzNz4eH2UnvHlNiM86HP7SWSSPnaI
uk0YEOY+8pkjPFkf54zuDmoTtn6oF+SZqY8L1w9/UyTjWfWa087pE8/nRgwR
wt3WMiNcLfpoES34M/7LAx9t6kyPsRvAzVnUt4LwooD3YYe4DDBtqrCrlLDM
cZ7Sg0sMoCVWtesCYZ9HzoL+Agb4XDd2oIDwtw0LQzbrDcB99/rfFMKTttbp
fOYG2Lmu0jmYMPumtx/T4gwQ+yucw5BwW+N26b2HDVC6MfqDLuF0teeeTkcN
ENKg06pFWHJ522fJdAPUFKUUqxDGk9qh6iIDjL6rz5EkHLch41t3owF2mfoc
WUKYzdp6ctVfA2wcklN6P0PEv3FPa57NEGrhcRV9hNPlKeEDnIbwz96l/Zaw
5GK9qVI+QyQvyrZ7QRit0jOG4oaIPjN66xHhONrCbxdjQySo7XK7RZjNvI69
+CCxPlP0fA5hZ9qXjtcxhrhTeST6FOEaK9EsgXhDcLRoO58k7GcXKZeQbAgt
X0mpNMLPXcw2+Jw2hNuXgE9JhM/tb81SaTAEs6ZL5gDh+YO/3LybDeHrYWO2
j7BDjIJ84QNDnOA65BJOeOnh5FsrOg3hKrz8bDDh8Ay7/sl+Q1TH9jr6EaZV
vJS/xWaEzg6uPc6ECysXT0xwGuGQsVCTE+HZawb1SkuMoLUmTNiRcMWtfNsC
ASMcy2Tv2EpY+OHO0FgpI/D11O/YSHjow1A9nWYEh9tyy80JH131a2PXESPo
5ZWfVSKc1db2qeW4ERYizfwUCRcdzD94Pc0IYmYrNRUI1/WalmTlGEHmZ0C7
LOHBosPzDpeM8Dpir9B6whYKgpd7W4n4cnv5Rcn6DVR5BrmMkXdkReJiwjzf
/p15scQYC3sNUrgJrzz9TLt1mTEsBZRPcRFW+hvufknYGOs73SsWEd7RXF+3
W9YYWusujy1ME/f/z9p7lGYMXiP+h7OEQ5w9W34lGOPzX5kLI4SXF30bMDlq
jLl9wp3fCFd8Cl04lGIMOevq38OEvwTGmfCdMsY69G7/Snhn7Jk6yYvG6N+Z
tn6QsO2FV+X/tRljzO/9oveEv33d2Z762BgmQz8t+wkfVR360v3MGNnv446/
I3yvbkpm5xtjpJnOivYRNmoXKAr7ZowbGkvpbwgrjG44eZrPhDj/9u+7Cbdq
dVcP8JuguiXHgLTXAednssIm4PVTPtlFuIht97IqCRM0cqvaPicssjLpyH01
E1RN2j3pJMxp0BT1w94E306NLukg/OGQjhfllAmKKq1cmwnLiSxPDckzgdHO
jr4mwv7lX26cPWOCiZ2WO0lPdeXzcl40gco1Ka+7hHlk2K+31ZngcbtuVANh
tdYn7FteE+uTzF7cIhzufEk5oc8EP15He5G+ORq3vWbABA+Hc6ZuEjZfpVMm
MmyCtf6uq0hv88u37/1tgktJwz51hCOX+hZ5rTFFWkiHynXCdwvRfmqdKTxP
LW2/RtajLfazVdoUjm+X+ZA+4fLEUlHFFBliTueqCRdXaI/+MDGFbdhz6SrC
D+3YTA/sNMUqmuB/VwgLncx7e+ysKaqE/FeWEl76YuXzsBJTPOjI67hEmG1V
6kOXMlOoednFk/6RH1+jWm0KNmeLnxfJ7+NcQOrzJlM8kzbqLSEccc3UYvWA
KYINi1vOE373/ENZ6VozXOezHS4i3LPStThDygw+pz0qSXdsf5kdKWcGAfeB
faTr3nQk2KqZQWurCCfp9A/X3cZNzcAVtF22kLDFRKKAgZsZ/puMiSwgfJFf
6eDD02ZopVb555H7P7RjlrPYDG3LGgxI37h97IDFBTP8iFRZTLrNZ3hfQ4UZ
ai5plOSS/XmnNOx6gxnc+28N5hBW3S0fWPTeDFvaFSKyyXzMHEf6PpnBoHaJ
LWkzoSP+Yl/N8PS9uSRpu7tDfqfGzbBJorb9FHmehC96H2enQKo+S5J0TbOM
+wFpCorelb07SdgkZ1t/jTwFub+u1pF+EHjYbVKZAk9L9nTSL1d9dgnSoeCc
XgqV9K+g806edAoWMaWvZpLnQ0xqyyZfCu5GDaVnEG4OW0eXv0yB686Bo2mE
56bH0sUrKejZFRVIWudgU5/AdQq8n9vYky6N9dg7X0+BQkCiKOn0lPPnn3dQ
8ObjzsuphHddlOeI/kaB/8stb08QXvie4/5VCLjZMOCcQrhALY7rkwiQd8aF
RtogxO/yO1Fg1eSCKumwnwa/usQB59R77KSHfr9JbZABJF3ULh8n3Mkt3pip
A0wOu3KRLpQsFjfdBjz4ovTiGDl/kjXbVB2IeAcu3iMd+7MlfK0TUFRvfo30
rtbBjgUX4IvJyzTSUoHKB1s8gYcXQ21JX7xR98IqHBh0pj86Sviq3ZPULZmA
ef7IuyOE197caUTNAix+Tz8lnbZ+fFA7G7ift7qFdMiUoKlwPhC4cPkiaa18
p5FXZ4n8HGdDSNcNfrJyqwakJhYvJd0QPcfm9wywU3xnm0R4pnJoPL4LyHr8
CKQ1PnUNnOkB3i7p0iF94b/LTd2vAaMtMhKkk0Vc4ygfANsV/aOJhB2qGhZE
JoHvK6KzSad/KhvTnAIaLzw7TrpdJPu97QzgPWt4iLRJzJ678XOAVp9NIGkp
m3WxoxzmKH7oSSU99inu34OV5jhWazN9mJynq4JGB4TNIbH43Qhphs2O/j+r
zDF/+9BH0i+rNBs1xc3xNJv9Gek7MR9jzsiY4/S3l5dJH11F+7tX1xwnDVt8
SK/fsHhe2tEc7G/rvyaQ/faC2iW2wxwUyzcfSFu6x5UKuBDxNnD2kvYP/71t
Yac5Ih7EPiFdc3rkylsfc1zXX3qdtf77U/eM/eaIv+ESx1p/Ivfev1Pm4Izc
LE06etWLvOkcc/y580aCdOpZgZDveeZoZA8UJX29Nln87Rlz8JtfXUZ6/l30
vtoSczAzLs3Gk9+3mod8YC2R/1n3Z6Rrnioef9NjDnroniTS6dLNJXMvzaE3
cPMQ6YADTk1r3pjjTglfDGmpdUem3d6ZI2HyaTgr3p7P7h8HzdEdcc+DtP+y
Ip2RGWI/Z+0opC099Dbx/TbHvQQ5Y9Lra5/sVv1jDm93bn3Sr13nC4MXzGET
0K9Gml6xY8nUYgvw/xhdS1pyg1D/vKgFurgS2UjPF16elVhjgeHCN/OHCL+a
tFhJkbDA5UO6v0mn5odaH1pvAdo7jknSf4Y7r3EpWaBtfuIT6ZdHjx1ZbmwB
useqdtIprf80JN0s8CBELpc0Qoc0JdwtoO8YeYr01JpOLTEPC6zV6M4k7Rp6
RkfI2wLCGSdPkFYVNzHgCbLAlwK7BNKdoQcp49EWxPNZSTBpfompjU0FFhCV
y9tA+v7DXruGQgtsDoj6j3RE2L1N9cUWGMzxsCI98DBzc80FC3DEGFJJV4dp
bi+tsECkvYgx6S1te1zT71gQ/6filUmfDB/239VnAU7bieWkxSwjQ7f2E/k6
2y4jfU6UN8JywAIuAeW8pK81qCSqfLaAw4FgHtLPFocUzY5Y4M92cQ7Sywtm
utP/WKDd+M90HNnv9xeZNotR8fNk7XvS/DlZ1BpxKnQ8fPpJ5+yWtbm0lgpq
yup3pC8ut3I8IUXFj6Gkt6QfOCWH7lCiQl085gVpjh/8FycMqbCT635EOlp4
7QqpHVSk7ltRT/pJ9RJnigsVySU/bpJeazd9wdWNWL+m8wbpu0mPjXI8qLDv
OFXLijcb6cPnT8Xho5Rq0kfevmqYiaQiq2iqlPTr/fd4hGKo8NScukRaYWXl
Vs1YKi7fnL5IumND0nBAAhWZRf8ukOZr0BH+cJyoL1v+LOnMoozARwVUuDN6
8kh/Mo658bWQih07JnNJ67z24+A+S0XHCkGWX/AjFyVUlDIdskmLxo/eq71C
RZ7yz0zShV4b1hQ3UnF8/mAK6TJFro69A1T8On81jnSXuPmfoI9U7Hy/hOX5
FTEqvp+pCLTyiSVtNzOVuuMrFT7ZUkzSUy2ft5qNU6H3rzSKNFzvv1vMRgO7
38h+Vv2pCRP562h4fs5wD2u/4u9KZa2nYby3Loi08r4/W09I0yDGpcsy0yW8
LlaeBuf1OoGkZRQ8o7zUadByMPUnHdxswaVGoSHeIdKHNPcU++rmnTSszz/p
Tnq2Kjf18y4a6sSkWR4JUufk8aTh5sHrO0k/++I6ZudLg92Tl26k83tvPOgL
poHjvLwrabV7QWGzcTTodYw7kZaM4/y6JoGo58gJlleannajJNIQzavM8mxd
m3XSMRqeefs5km4pl14nlEmDgsH37aQdMt88Uj9Pg6q/yFbS1ptCzLeW0NDV
1riFtDHf4hv7L9Gg2OPLsmSSzrmGyzT8/X57M+lvB9MiNtTQcIg30J61Px50
Wd8HNEivHdlI+pJGNbPwCw35ya7/kd4jPPH7xjANZSmrWdaZ09j3fIQGJ/5X
1qSb7lUFcI7TcDdvK8uvHaqc/GeJ/Iu3WJHmianU0ltCx9CAL510p8fYlU28
dDReUmE5y1JdcfcyOt5+nqCx8uWvXFcgQAfX3RiWDc5f5eMQo2P6TT6VtF/7
laEnSnTUqg2bs/b36g+PLyp02D6uYXkqU/Udmzqd+B2IYznO9Uq3tjYdOVxi
LOeOVTTlGdOhJLEZpNuEK/K9bekIPPDcjLQio9zubxAdd24Km7CunzGqmgym
Y/7AmDFpnzcdAl9D6VgW3c7yBfuRnq59dBhtZrIsSVFxKY2h45PsiBFpEfGr
vltP0BGk+NyQ1a8vq+PKKugIWf9Yn/RZAYuPhVfpmHl0hWVs7KJmVdEhVZnG
csz9Se7YGjpWC25jefaa9oltd+j4gPd6pEfTavMWHtEhvXJBl3Tvf7eubR+h
o0zIU4e0xaYLTvt+0DH7xprl8m1p/7LG6GjqUWM50t3bpucnHSW7/2iTFtsn
8HHLPB0uS3JYdireLWC/zBLLml5psebNZYpbmoAlNtWWsTxbK1zWKWyJeMdo
lnMeNWPjWkvonpFm+eXM6hAbdUuILY7UZM1T9vHbx7QtoWO6meX9fK2L2/Ut
oSGsyLKwVFiRFSxhXfJWg/S2jR2dtM2WsFpHZ7nrfKQqJdwSTC1dddJbXSfo
egcs4Xt8Fcs9Qn47VaMswb5pTo30q8TtaWsSLPFNsJnlPl+NiV+ZlmDbv5Xl
QeWhmqprlnj0PVmV9NeC7sHCekvoh7my/G1Zs8iJFks0GKuzPDp2OmJ3lyV+
JL5WYdV/fbOJ1KQl5D0NWba+/ynh629LXFQRZjmvZ9+jq+xWkOeaVCZtNJ3n
bCxgBak7V1mO1vsYsU3DCh7xWiw/ttzbJGZgBYd4YZYlHLl5PlCsMG33W4l0
4wGlnKBNVgi0uMfyws2w2qQ9Vmih7GL5q3yQr3esFRy91VnuyvZdTUu3wsed
7Czf4WI8kjprBePHLxRJl+x1jWG/ZoUzpRUsp35yUB9osQLGElmO2LL5Q2O3
FdxPe7C8QcOSHj1tBZ/lkizPbb+naMRljSZDTpbLo7B8Vsga7Q3DCqSdzzZM
1spYw6bgGctLHhq9CtexxrJXN1n2E9QtHttqjaN+J1h+6Ka+OyDcGg4uvizH
Xbubkp5tDbNoc5aNFttX1d6yxvlFkixPuQx0v+2zhs4kB8tXq0J+LSxYIzNp
WJ70/ygfRrA=
          "]]}, Annotation[#, "Charting`Private`Tag$89326#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwV13k81E8YB3D8XDkqOULIvUhyJ9d+sNhUKqlISqnYXfeReylKUa5EqeiQ
oktylEpSjoQkUulwJaVyFFGO3+w/9vV+fcczM8/3mfnOKO32d9rLw8XFFUv+
cH6VU2cu5SrctmTQPszMrYhFhaDmUl/vVOo33scNB4gfh9/M1/DOo862uX3m
Jq7TDfTi975FlazczD2zPBYNx9ro416PqEu0BGgfl8XimWn8ve9eL6hnZRqL
6ZRYXDMXZxvdaqVqnL6y9YZ6LEa79uSFFL2kes3T51pIzJYV7B07/4q6JrWQ
+kI1FtnZjl7Dxzupm9a7vzZUjkVjelfgoNcn6h7dE9zZcrE4cirr2Qm9buqR
ua8jb5bEQtubus3gVjf1hX96jDRxkEB6VFBRDzXl/AmnNJlYzNoaVo2c76MK
H3dU3i0VC+knkTY/jn+h9nXOK05cEIv7GSrtx4QHqZf/yo3nzY/Fjt1Ne7SP
DlL3qSW7lYnGIp9b4TAr4Sv1XpYMo1M4Fnp43PA1coh6unxv6h+BWDg8FHAc
8Bqm7p3d9Ttvjg29ud3jUiPD1Ke+t9T9Ztk4prizRcV8hLrEasrOZIaNkN2V
oc5PR6j2g/tkq/+yQRsIeFrWPkrNHepNOjvORu+PD7vCx39RbzdeFYn+xsbr
lOSytFW/qbHMmP08X9loXLFqXmHMb6ppM7sv/gsbJYGZxW/5xqm9uyMTwvrZ
ODDuMGcqNUFd/dJvoeJHNhRnKs7OGE9SQ2JPKHu1siGRu3dEMmqSWrNxQ8nJ
FjYEqeI0nUeT1MRDDM2qJjaG4/yGdthPUWGwnT3dwEYVr5pp9da/1J9yH7O1
H7PhLpLReTB8mtrg4bSbXszGhhvUZWceTFMZClVNwjfJfBx/sO9wzVCV3ns0
119jQzuNrt5/ZIbKv2WjvuYVNqbF50JsT89S7Rt5x1LOsdEsajyP150L8w5X
i788wkbbmkWnWqK5YN7k7m51mI03R3+qnz7LhYHDu94UxrPRz3eFpvOeCyVb
tol6skm8mcVxLm7cKP5+dzo4mA2tn1MT11158GViZvqfGxu62q8PhUXwQO1f
TkO/CxvGzBIJ69M8ePFpvfPTzWxYDzD1O9/wQH7qkIPXejZcP3b5crv8B9U3
y/hMrdk40vKwf/MWXjRMgzGtxkaKSE6w4n5eaBlIBNsqs5HpsJ9n6CQvWjeb
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89326#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 143.67189403162462`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 143.67189403162462`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {143.67189403162462`, 498.99999796326495`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.7876883966658773`*^9, 3.787688417633786*^9}, {3.787689256480048*^9, 
   3.787689267802038*^9}, 3.7876934110155478`*^9, {3.787693901364965*^9, 
   3.787693920499447*^9}, 3.787694140620894*^9, 3.788278148593335*^9},
 CellLabel->
  "Out[639]=",ExpressionUUID->"c998e86c-74f2-4b92-8a54-73bc099e4fdc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJwd1Xk4VG0YBnAJERWyVZRQluz7PveYsXwULbJEJIlIttSMZQYtJNmTJJVW
UnbaiBRSqZAlKQnRgkpFlO+c+WfO9bvOe93neZ7znndW7wza7MPNxcW1mfgh
r3Ipfy/mrSw1X7bp4NycBhvV/MqrAv1SKB+m74j1E65n3Lyk5HeOIijKkrlP
uFEzxJfPr5gSrNl8IoJwc1KbzU/f+xTm/bnLo+psPDY+dPuL73PKqpOMm5Vq
bLSk9YaM+L6jJGTWVyitYyMhO+txhlY/JT06LOGfChuqfpRtOsX9lMF13pod
hEMXpEWGFr6nfGXtmmYR/mepWztx/gMlfnOkY5syG1INEbSvJz5Sui+tNglS
YsO2ZoH9sO845YqoiDVzDRtaczt/SkyMU7pjqUY0wkmynq3yphMUvh1iLUKE
9++8E+74cIISZetbl6fABn04+GFlxzfK0ODepzXybAx87fNi/PxBCRaj3B1e
zUZn8vHKVKNJSs9L1+oCwi0aRgIF0ZOUftsjOnsJl4VklvTw/qSkjL2/OC7L
RuxP2zljiV+UKoc4lYlVbMj+rc79qz9FmaDGjr+SYUMsz2dCPHKKIlVjNZZC
mJ+ylK5+f4ryJmiX7X+Ex2P2ffawnqZ89XUUuSPNRi3PGuM65z8U+98FpzJW
sLFdKL0rjjFLWbOVtlNhGRvPFukL8GznQquHUnHhUjba7ESzW6O4oBi6tWkT
4e5jY2tP53JBB/cWTImyMch7la7+hgvFx7V+UwnP/pWMcXGbh6r7x2yfCLOh
Mjb9q8iVG8vvv2OVLmJDU7XzyEEmN/oeVg7/R1jfv0zM4jQ3wlUern8vxIbF
sL92Vzc3Budt5l9E2PVtb+A8l/lYXrN5zHkh8b5bawa3OvFAlk91+BYfG8lC
OWGyB3jQq3Srk0I40/YA9+eTPChsoGQ94mXjXKO6bMwrHiy+VxH+jIeNqtpz
boWOvHAouuneys3G0M3Ytn+b+XDL9NBY2j8WLFIs66468KOvg0eM/ycLMbYV
BW37+KEh8OayzyQLtbzyGX9P8KPCNeNq/Q8WjKO4dm95yo+ZXq0v+7+zoLPn
ruCcjQA2Ha9e2jzOggJNy9nJYiGkZlRPy3xiYee/c4j1Wohyx997d4yycP72
YpWimIXYIXd6/4URFqQ1v8zOu78QNtZ1S1Z+ZEFc5mr+DRNBnJ7vtmDeIAt8
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
mjoTOEBDW9ZljmeXRKv6DtLgq+jFsf2vyWTXERo6a3uukZ58MLjFfIKGhWUv
rpKG+8O+BVx05M1/dZnTf/Khbzmr6BgY0MrnzCvuvlzmajoU1GYukF4XPrPl
hDwdT3sfcsxyC6tiK9JR5e3KsYKSd+QuDTpeCcafJx1Ub8GrTqHDXnUyjzTf
5Lxl9R50LBcUySU9VZKdPLiDjog/78+Q/hyowcPvTccHq3KOX3x0H7f3pSNk
0onjnN7qR2+CiPy0/BzS6g2BoVMxdFzaaHuatGwMz8iKQ3TYPJbleKnZme2U
I3TsP/k7m/O8qmabo8fo4Fp7heMHhfKrxNLpsJNcwLFTes8TjYt0COzryiJt
4xBM3XKZjm0Pyzg2EVpQfeAqHV92JnMse1Q3v+Y6HbIHrTj+xExh2FXQQZ24
fZIzHy/LNb6P6DjefCOT9FXNUlbeRzqMyh6lk94n/m26epSOusICjnX/aIa/
/ExHbM8JjusaSgJ4JuiI63biuNupxMV/ig5Vx89ppPmji7X1BSxxYk6G41av
8RsOgpZYbMjLcaaVhvKeRZYQyP+SyqlXuHhVrogljATucWx48aYQ93JL/Fm2
nWO/xzeGn6lYIvDK1RTOfG9+9fqoaontd9M4nkxX6+PSsMTQn0iOY9xvtOvo
WKJ+aiPH2eNFdadNLPFgZDaZdLN4UY7Pekvk73TnWHlnof3fQKK+0wYnSO/u
aREZCbFEW5kkx5c2fu5oC7eEEmUqiVMvRdXtWrQlOgvvcCwhfdN3ywlL6N2g
c8zdWRpTUGSJ81v3Hufs5w1ttMwSS1xcuIXj6Iff+dgVlngvZczxVJnOCcd7
lmAYCHA8llJ5eu6JJaL2XE8k3fvf7bKtny0RzjN3jHShY8q/zHFL7FEc5TjC
08e24wfhi+0cLw8XGdg8a4kf+QUcu5zfI7JxkRW+nXLleKpSvKBV3AqLXHQ4
PvWkHhtWWmG9wWKOO38tC7bVsEIlmhJIHxBqXPDYwApnvC5zLC4Xes4aVpBL
Ocyx44aWVvomK5z4a8lx28UINUqYFZJ0OuJJd4j5eahFWkEs5S7HXUe2pqw4
ZIWmMxc5fuOr+e13uhV21YRzPLRuuKKkzAr5bas5/rSoXuLEAyuMh80c5cxn
/AxjT5sV+lS6OJ4q32Qq990K39MzOT7dEf7k5jxrMCoPcGz88/Q2ExFr0E5s
4zhKf4DhqGkNwbS1HMs48/G/p1hD7sJijmsPqpwKdLBGP/fUEdJzt0Irj+6z
RndGK8dtWb7L6KnW2PPuCseX97tHzyuzxoq9hzhmbN70vrbdGmXzd3Fsp2ll
GfXTGiInbTgWaDLuCtO1gY63DMdN2zX2BITZIPW/mcOcehdsLKm8bYP/9vVx
fLMk+PfcnA1yzzdy/D/iVnwm
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89407#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwV13k4VF8YB3CEKIpCkiRFJdn3bb7GDPOTNpQ1KrLNjH1fhmhRSpJI1qJN
CYWKJBTtIS1ahYrIFkKW3/HPzPN53nu/99z3nHufe1bv87Xaz8PFxWVEfub+
5U5O5+fIlBor7gidnVWJwW2BDavYnicpbRfFL7cT14bdKFjvmUsZ2mZmWUvc
oOrvwe9ZTJm/6d/hOOLHx1sYox41FCvh6IO8xE/04+/2ebyi+FtvfM2rHINr
hks5WsVNlICGZKeuTTEY+uiWG1TYTGFJRdfVE3OkBDqG815TuBcnrYgjTk/f
6jFw4h3Foqq5cUopBk9PffTv9vhKCdQtVureGIOEs2lPTqu1U+7MxMQ+JFby
pDhoFLdTsl3zk/KIA+afigwo/EZpE1rYbEs8Q9e8P5jXSRHcvKqkTjEGkvUR
pr9P/KTEpbh/OLIhBlUpa1qPL+ymRLaVP3Qmdt733E3paDfl7aNSmhZxAbfM
YebBHkrn8+F/7etjoIbaxz0RvZQ+C795GsQW1fO3/vAYoPinSTFqFEh9dt+o
xOAA5bedAY4RH5d1ebnGcJByfvGVRBvioH2VwTYPBylyd9wX/ZSPAe2H38Py
1iHKpX2xe+cRd/z+vDds9A9ll8Ce5RJrYvA2KbE8WW+E0vxyb0arHOmHip7g
1egRirr+GvUU4pv+qSVtfKOUTQlPshcQHxi1mNWXGKPkczr6BmRjIDt9O2ta
e5xi9df9YYJMDMRy9g+KR45TprO12rWJBShLaco145Qnng+aOlfGYCDWp9fZ
fIIiOENdqU98n1de/4HtJGW44lD7uxUx2C2U8i4ubIqi80im4bVkDLYXUTZm
3pui5JfbdrOIaVt/c25xTVPUjl4+yUuslMxQ6EqYprgvELZVWRaDqaWzQfSM
GUo2JWRjgHgMXghrC/Lu5kLTGbeOy6IxaNm85OzLKC6cOZltqkL8/mi/QkYW
qefnCpSLxKCL7zJN+RMXrqikXa1aTPKml8XaOXKjSCj3RplwDBT7J8au2/Pg
8KLSX9sFY6Cq9PZQaDgPtkeY/60SiIG2900xagYPRLJ9hOWJqT+81d+950G2
uabxEH8M7L98ZHPbzYNLv+J8f16y3l5Wd+3cxQt+0W0nBWY5SBI6FygbwosJ
2dXGO2Y4SLUI4ek9wwvnVweT0qc5yG1Qlo19w4umMdm/0lMcVNzPdSy04cPB
f4krF0xw8P3GgZYZK368V1Te7jHMwa++3XufBPCD81Lh0uEhDgYV9QdPp/BD
2IYjnz/IwdSlYeENLfyQ8vse+7qfA7Fc1/+sd8zHsFVWvUgvB9ST9AeXtwlg
yR2m8FgHB7EWZVdbfATwRHBVeM83Du7zrTk9fUIAyRe3XG5r50A/isvd+rkA
wrjK1pd84UDDq2rhLEMQleONLzU/cLDWVM12F3UBXByW96Y2cbBvJhcH9i7A
hUejLttfcZB3d5Hi9dgFmCikCgi85EBatW+Ku2YB0thjL5jPOBBfeflCkcFC
OO0ZlOFt4ID/r3Q/r5YQRL8nWflWckC7mfhOxUYIm094hvTc4SCOPfnAIVAI
NwvbVV1uczDT+e50SakQglj/YFTGwd+mFD0nZWHIqk2X1BVx0F0ocOjWukWo
O91e15PLwX6VSWE1YREs9lB84xzLgeXHIxclZUTwVN4hU4DDgeYRcSMuFRFM
nhHNvxbJAe9XVdar7SIQ6byGzyEcXEjyeMpOFcEHtys6v1kcfP3derhwhSjE
nrZZldly0JCxTyZFSRTpNWu/9tpwcIM+WB5uJIoqYcN3K6w44GQv/M5wEQWH
69k7N0vSjy1U058XRLFBiFGeAQ7srxfPrlFcArNdjXwH13EAO6P0hQZLEBRN
DTJcy8F63mfKfzaTuuDYsT5ZDsYdf+yuYy9BdRPfYQ0pDtIWrry3p3QJTvX3
H3IU4uC197GwbN2l0FGkZy4YiMaWDfuHJMzFoHJJS+xyUTQmE4OrPu8Sg7LO
YPaJq9G40n/oUIG7GL6zLv9jXowGb9ml5eqHxXBM/+NqkexoVBp3m2x5JAY2
M/3haGI0FGyYKfGm4qj7fM1c0zMaXDH+GoMUCagcmj4aJhWNG98OTFdsk8Dz
c/FHdolHw5GW0hjtIoGo4UPblESiUSF4y3FhjATunlDZVsMXDVbqSLzCfXJ+
pAcnfjAKbVdDW50Ml0HA5Vp3wsMo3GyNDn6iK4mkDdsl7rhH4coht30d/0ki
WITv8rI9UcjR3rztn4MkfidJXfaxj8Kxs5IbNkVLophLfuM8yyi4Ot36lFwr
iU+RyV8aVaMg1tVtamexHEURf5tfjEci5I/1kp+OUpitWBxmFh8JgyWKxbwx
0vi+ilvf/nAEPP6lZF+0k0XuJZX5B4LD4NvwU6N4ixyiufIEvqWF4JgDv/w0
ay02vW0Wmn4SBGNVobGeoLVoeNoU9ao+CEN8SxrfRq2F94dY8UvVQbArXelV
cnwtpDfvr3MpDYK8gFaR6/W1EAnaJcaXEYQH5a5aT3vX4nLhs85lXkEYE6ml
p3vLw3y/+PRuoSC4Nka6q3kqQFKoxtLSJRBuhgpbx3wVMNpfXwyHQLiXNmlV
hSrgo8fePt2dgfDMlOejH1FATPm5Ps3NgfDxfZVvd0kBG0dC2h10AhGxbM23
mC4FNPPbWOwWCUSKx1PHl3vWQUay87nqowDUzl++g2m/HgL3S1g39ALwI1/Z
om3vevBkRMiqawVACDRTc+/1sO5wfXNXNQB2Yb5aayLXQ7VUX/fNugAMdD9a
/jFrPTzlt2QYSARg5dOADov29Tj2sSns4R9/hB9/HqjosQGiBRJCZaX+UBON
TesJUsQ8oXF6kK4/KgXerW+MUsTuJcPmslr+oHIpVxUcVMSR3V1qr9T8YTPw
8atLqiK+0hTLtTb6I+SFzoa3txRhuPa4kbyMP+4dHaiqG1bErmPKYcd5/cHg
cfmW6bcR1H5aA+u1H5onygPDwzai7dPPa/5NfnAYEuK3jd0Iyxpp7fAXfmC2
VyouSd6I1vHlqsmNfki6LxGUULwR9Wz/A5+r/NAa8ZI/uH8j5pstavlT4Ic9
f4yUtrKU8PkxlzR3uB+El3A1tQYpoW90NmJliB8qVesCHaOV0Hn+xlXDQD+I
+ZhVeSYp4ZSfMyue7YfH3Vst4kuUIFvTSVXf5wfVLy6ed0aUEP+5bOlSSz9w
PTlQIBe9CUUDJulNq/1Q9NOUcfXQJqi5v6dTV5Hx8/P3qSRtQrn9vrAKaT+U
mR7TMMrdBHof9lxa5gfP+yl1trWboKpS+S9f2A9Nt/Lbj/MpI3rY6M36EV+c
z3kk/feEMsbabWqDr/oiy0np3c40ZWjP7ijgv+iLs1KnT5XlKCP1ZtCHzDxf
JKXt4Q8oVsbLZmvV1+m+iEj6N9DXpIwbUSJiwYd9YcVRq+9YqgLJ3t1749x8
weuc7fUyQwX5z7cUX1nji1tJ+h9brFRh/mDfFociH+zLXMRXuUsVFio16TKF
PlhypUP5vIMqPGxtvny/5AO/2mNxvvtU8d0xdGd0ng+URj5sEApQxXb3P+df
nfZBgX1kGP2UKuyDhzmzET5IXXtP/M4rVQwvvPkwYrMPTNWSKbmvVTEj/F9R
BsMHw0ZuXoffqYLdFEKtovtgu61Qtc1XVVg3aXrxwwdCx5zchvpVYbQjyf2e
pg8ODkzdVFykhvdctksvyvggqNJoe7alGmp63Kj2I2yUOzTytG1Xw0Tmy++n
htgYm9xeLrZTDZZjBvYv+tkIN3CTOr5bDa9GBwsse9jg3DvWFeGjhnZrqXjW
FzaO3H8XZpeshsvZpxepPGHjXJ3/+aWtagi947q+KI+Nj/v+WW97rwbbcZTq
57AhPe8Qf+InNYzmHr39NJONHNOzTJ7vahB4lK0+nMZG/sP7WkOjarh270yO
8wk2rjcsfPpymToMmkyUr0WwUfP04vBRR3Xcrcr+y2PLxk3JJv9oF3X0nOGj
ce1ko8B9ctDPVR17mimRs1ZsHOPZNmDLVMdGFYv8edvYsNEf75WPVEfIxxNX
5czZ+HXV4nvtOXX8zksUrtRhQ+zowLuJNnU8nY23oEqxwf9uue3vz+o4msB9
MVySjYm1tLft39SRw1NVdlOCjS8PzrY29qijOtfv94albFwdN2k+M6EOcZW/
aUpCbBh7pj5VW64B+RA+/wMzLHiZ61V72WmAKaN/3bmLhf71yx+VOmnAMGb2
9+UOFgIWTDyf2KOBsPOc8eF2FqJe3Pl01EsDN1a470n6zEKyte7U1QgN5B6Y
Znx4y0KFi47BrywN9NuZDDx8wgJPmNZd728aGDnnmN5WwsIRe/Ham981IMDV
nGRXzIKQwejjyR4NSNzylWwrYkF8puz9sWEN2BVXfvxSyML6g5rjhfM00Vwe
NzpVwMK2ZA2dXnlNuFv1isVlsJB1Ra2c6a2JyYOy3hfjWXjc5vo410cT/wq8
n9nHsTCyIO3j6wBNuOY3H1h8gIXN7Eluw0hN8G44083hsDCpVr9V6Lgm6t9a
hLHDWbCvsum+XqSJatmAsARfFiRehq7oH9REWM22FUVOLFBnryrLjWqiRXJT
zlFHFnxUP5nsmtBEV3jxFg8HFhpSyCuCWws1k+2bFOxYCLYVLE9aogXt45ea
S61ZaG0/t1VFUwstGZl5sxYsnPpTfcAvVAtHv0bFsvVJXkvyXqdILWjMPj7M
0WPBstTVhBGjBQHxvMBkXRb4fQW5ZY9o4bjBwekKbTIfv2xiX6Vp4ZCMbuUi
DRbcv/VylCu0UJxnItW9kQXDV8uj+ka0UL2g9JmhDAvLb/Q5vh/XgjKjT9Br
JQtjx2sMHk5p4cboJ7E0aRZKLfb/y+TVxnRC24lhKRYUGkoiNotp43rPir9l
y1gQrTYPL9TQRnWP6oyzKAs/CoNDPAO0wRzIf0XlY2HXypkvV0K04dC5NCiU
l4VHJw+b90RoY4o1+vv6PBYKgtIlveO1cfLhHWcpHhb2Gd+tZKZqw3DFkPTs
DBNfmqdmfCq04b28aMfAOBNvxuOPBE9q48IqarPbbyZoTKHB8hltpIe4HbvZ
x0TZ51S7MR4diJ6VmeUiTqm7uCF0oQ5as+0l834xsf1447MwaR0YMn+M/PjJ
xPNVC0WijHXwo073RloHEw/NUs7GxemAITTNF/6eie/uVS8iDuvAwpUp8/Md
E/xHungCj+lAf3Fkw05iRqM22zVFBwH5FvWab0me+UcT2gUdrGdhz8RrJl4z
1vby1engFefU9axXTHRYVBgd5dZFSqL/iHkjE/OYXwMO8OkiO7FlsqGBibWJ
AlfCBXURG2sTa0bs/sxhibeoLjIDa/jNHzHxa/PsD4vVumgv3PpnSz0Tw5aM
ZCETXVDkEr8G1DDBve1Dx8lYXbT0tn0Wv8PE4/s71wQd1AWbmyV96TYTycrN
rnYJuripuKxRm1h20eMu2WRd7P4s6GJfwQRelP8ozdVFU8ibE/llTMRuPvXr
9X1dnP8qcmpzKRNcDMbwsmldCK3ef+RnIcm/Xa8+xaWHn8ZnEg4SJ6+jBLbz
6oH7dXrPamLZ+dojV4T0MPDm2pPdV0l+w5oxPWk9tF8/ON52meTTZiccDfRg
8TX/YWcByTep4M4L18NzrbFb+rlMONB+Pn0frYcXW70yPuaQ+TWXTBWN0wOr
+mtHFLHn1giF+GN6kH9Dz3uQzUSzo/Fm90w9fD7AXWmZxcSFkIZUpWo9uDET
RUMzyHq5/nbdXS59tEWPpommMpFTPH9oiFcfQYWShvdPMzF+U7dSUVAfJqKL
9JjE1++es8wS1cfiozx6DSlMiDc6+8fI6aOQZ5l57Ckmfnz7UUmnkboKzZL3
JBMJy/5uaTmij+V2dln/HWMi9fHjzrpEfQQuNPXlI84NPxd+6ySpuxgfqj3K
RMVHo4up6foo7vcK1yf+nntwatdlUu8silRJYIK6fsm1jw36GKu9WSJ/mIkp
3U0C3/kMcO3QagWTOCYEfs1kvxE0QH1J1zde4qWZTRoNwgbY37Sg7fEBJhSn
A10uixvg2fr0sB3E9rWVFV7yBnj0xSpkfyy5/n+M/f00A9hfLNE7y2HCz8G1
7m+8AWSfUPasi2RiUe6vdsMEAxxRn7z0O4L0o9N/9sBxA7jwOWwsI/7JijUU
OmOAJC+hPhNi55jsCtlLBliQYWe2J5wJy4J3hf89NkDptP+6K6FMrO/ffDpT
yBCblkT+3BfERIP669J2EUP47ZD3ViV2C3Vokhc3xK+3zXIzgaRfXF7CJSsN
ERnwn9Y5Yomlh488VDZE/0r7960BTPDqPoj8vd0QTpv2f7f2Z+LbAU03yhlD
WLoZ54f6MKEgsSjJL8MQXz4NMiyJvQt/3j6fbYgj8arSq4lHWs4t5L1kiNuU
HItnbNLPtdy3HlcY4t6tNXWriZUbXnBbvTdEfaLdn7dMJiIWeOS6rTDCZfWe
VXu9mKjJwZMzq4xgLTQqY0DMqyH1p2GNEezX/aOLE59wfGG2QckIyYctFz71
ZCLvukb/b0Mj7Cja46NF3LiVyyjU2QhBaTIBSz2YEDud8eHoeSPE8Ck797ox
seDN0uaAi0YI8ZmweE7MtSyp0fGqEY6vpu8qIv59Lq5sU6kRHnX3NPoSN1xg
JjU/MIJyEsTGXJkIu2lEXd5uBMFnX3QEiD83f7t6RcYY0x9vd5jsZaJ1qVPe
KTljHJHS8lQgfrrzbVqEgjGMtG4JLCSuaHsab6lsjCwdxrnWPeT5/nZr96CR
MVb/G5zyJKYOHRLV3W2MfXdkrqa5MHFJRDG8MdMYt8tW9fM6k/79sB/nzTNG
mJNY2q/dTNyuOhpKLTBG4YyMQxPxY/ee4OrrxugXndLKIv5170rArWpj1CVz
9LSIN3mtY+V+NUbfu6s7WU7k+a9d6xK6hoKRYwdX9zswYZhu86VsHQUdbafE
3hE/Yh3cPbyRgqY+NdkHxG+XdTmyNSloU66OTSH+y863c6VTkC0j66ZLrC8l
Z7XNg4LkU5k5CfZM1Aasoq+7RkF7RZqOvh0Tk6MDydLFFJzL9XBdR6wZ/uCT
6C0Kqkz+nhcjvhKzN2iqkoLMOwttyYccko/n5zc/peB5tmTuReI9l9bxRP2i
IK7IIF2ceLYv3aVbDLC0i7vGs4uJLOVYvk4JQOboB6HhnUzo+nle+ywJtGbU
cb4RB/zR/dsiDZzo5Ul9QPxjoi2pei3wjJYQF0P8kl/6foomccCjvVzEObJ5
0kY2gGuXfaWwDXl+j6k93rQLyHozYDdrzUTMn7pAGTvg2rYzfEPEexq+P511
BBghbQmtxHKsjeF1rsCu8iatLOJLtyvemAcCqXrPVyoT39j6IskqBTjzkvuJ
oxUTMnec9U1TgcRHHYu3EZ9cPfhdIw3INtJ2pRL7jSwxEj8H6JznU9lArH7O
rvfdecCsccr+7w6yvr53mu8uBU5LcP85Q1wdNcnl2UTyVyz7+nE7E2PFPwbj
WoDB7W+vvCJW7Wxpz24FrD2OxdQTF/x37cHr90CKYLb1NeJjEk6xlG9AWddM
aiTxrpLqWYlhwPifhb8M8UBn7MyjpSaIqCzXZG8j76Nl7P52cRM83/syfh/x
Pgv7L/+WmYDvvvEXW+K3JWr31aRNYEGZKKMS34vuiM5ea0L2P2e7JbfNve9p
00FaJljPm+LcuJWJ1ZvnT62xNUHtmtXaSsSab0xbpOxNoCTrGbGG2Mwl9oqo
owm+qNs0ShF7B07YzDqbQDf1X4QgcVlmb9EHdxMkeFxm/NxCju975XIqxARZ
u4JCCoi9T5ytnzljgpbDvZ1riaOWvckYTTfBjKTtppXESedF/foyTDC/04Mj
Tnyr/Jj0h2wTOKyx1+EnnvocFVx+0QSaP7LndVuS+VLeu45VboK4Kv/Z68Rl
rzYktrWaIEbyirUhcfKa2ouTb01QtilqSJOYGWr3YEWbCWjbTNI3EcutOjK6
+7MJ1GwjJ2Xm8ny6XDq+m8D5fYUMD7G3cK5m75gJ0vVevH2ymXwPbBb7MiVJ
xTv/Xy+diadyro2vXEFFaME/Bzvid8PUpZSVVOwtnfm9gzjpnD/jwGoqOi5U
racT/+t5eZNPkQpGh97gRuK3CUePLDKg4mjNxQeTFkwcb5hRld1NRZzvIp1s
Yvj/UFvpQsVIU/NwOvHIipfqUnupeML17VYKsZN/tqbYfipEJV7QE4g3SRvq
CrCpoMnSrgQSv/QPpwxGUfEteGDfZmKRlSNbHmRR4d8tfnzmP/K92Phxa3UO
FQIvtv6cIA4LqN9WmUdFRbWG+Shxe2PKjrICKh7294v1EZcGqO28cp0K35pL
P9uIrR77OCXfo+J4xvT+CuLTgT3eez5RwbH0uhRALGUW4W/9hQqFBY0XfIgv
SC4MM2unIva8VL438c1qpUNKXaQ+dbp4H3HTfL/c8V4qlO66/rUiXpQ19jr5
HxV/RKUomsQJD+cZ1UqZInCBRuoEg9xPeqppmbQpBLcMzB8jTveSt7gsY4pF
rI0xw8SXFpnbnpAzhUeveFgv8SO7Y/72iqaIzt91+jMxz2+RS0N6pvA+l8Wq
I44Sl1ksZ28K4b5fKUnEL0oFHSiOptC8bqeUSCyzdbTAabcpmqW9nhwhrjn8
XD99rymUrVwXHZjLG49wF/I2RVH7zvpA4iMf3lWPRZjiosLkG3vilNxTrGdZ
puhRDTq4nrjTIPp2dw4Zf5NYojyx5ntPHv7zprCV70yVI34jgrO4aIrfSlOl
0sSScf315UWmWPdfg6gocY7b5hV5900xzRlwmzRn4uoGvqdB7aYI3WBo+oq4
RdrkH7vDFEt+lL95Tjy1OFrJo8sUZ7MzvZ8Sbx0bSbLvNkWw6/nMR8QjdV3W
xoOmWO5gK3WPGE4PP8/nouGlcnDCVeL3SfFD51bR0GVduewwMU9cjVzqahpS
H+74E0+8Mfif9Yk1NFTxCTcfIOY4BlbErKPhwOT3lGjitetdI91UaPja2aES
TOxbS+VTptCg/dzghRsx/wj38lpnGtRsao/QicdLziZ17aEhPj000pS4l63C
K+BKw+SH/f4mxE0/nQa2etDACm13NSI+9/H2o0++NEifE3DVIlauZweMx9Kg
v1/gsTzxrpS2Zyr5NNB2WqwUIGZs8zOxvkiDcUycNT+xgdD82yGXaRhVKUzk
JZY9rHmh+hoNH5/VcHMT/wo/Gba5jAb3pc95J83I/e2ly3s8ouFbRKFbH/Fl
1VJOzk8a/qikR7cQ+4gPTdzuocGNrjjaRKw5qRrc3EtDcZezzyviB/UlTN5B
Gkx7Lu5/Tvx+V4md9zgNNvKRHg3EAtHF6tqCdDShvqKS2PNJ0Y8XinREKOiH
FRAr3/i996cSHSpb62XziUdSNn3mUqHjztDdp+eJY52KXmto0PE6tEcul/js
wPUHGQZ0TIkodGUQPxa/fm6/JR1fMhuvnCTesK9w6zSbDq3jT1Sj5urZ+iXD
vnTwLLSRjCR2b3sq2u1Ph27rCFcEccH23taWYDpyVge/CSWWpSg5Xomm43Kh
dWIgsYT0DQ/rE3RIJORtYBLzvC2NvXqdjhNilA2OxOdFqR05N+hYMy9VzYEY
W1pMU0vo+Nf9Rd+eOPrhMH9MGR2yHVbbbc3m9jcaJ2zu0fE1JuOwNXH/yfKM
2Wd0hEs0r7Ik/vjf3Zs7e+lw8w+aMSKmbiuwC/5Nh2W3veicC21OzqQOkLwq
Y3lD4giX/Ratf+g4asyzXZ9YKli0w2qKDkmqdak2sV2el+h2YTPYeqtdUCF+
O7bcz0LFDFEvCrTkiI2neCW81cxw2DLYfTXxJe7BqqMaZpDgkz8rSxwi1DD/
iY4Z3PfJzMgQi8sF5JrDDIKJzq0riG22PH1J22GGxgDqVXHilvyITZRAMwwL
OvULEi/hqrirH2yGhMod9DlbOw3RtUPNEBcxlCVA3Crm6bwp0gx6fkpb5xO/
O7Tz5Ip4M3xZF32Hl/iTh+rQ3xQzrKkYvjZLJ/uzjT/KSm6aQbS2RXCMWCFh
tcn1MjNM/nsSNErs3uX04nKFGcLkbNtHiLuzXn/PqTRDySPVu3+IfwnXSpyo
M4OYW5P/EHH/QGaYV4sZqmnaM33E47d2GMoNkzx6R0wXsZCu9sulI2ZwqRGZ
7SSWvSe1h2+MjD/wPmfOjIed8d0TZnh05kxMB3FGa/CzG9zmSOaXP9JOrD+a
4WAgao4nVQ5Fn4ijtDvCbFTNUVBTafWGOLmyYYGZujlSM9rbW4kLjK9l6Wia
o6Y2xHfOz82CHkjpmuOM7fCJ18QrbfkFvlHM8VdsRVMz8f1QxXT2NnOsKXvr
+ZJ49k5A+WEfczz2E+9pJP7EfzPxgp85fMuHIudcaTO0936AOcLyqYvnHDTo
u2gsxBzNe6HTMNevdWyP/THm2HIz6/hD4pY0j+W0ZHOseMu0rCW+GOQUzX3T
HE5WriuriOPqMq1XlplD2bK/upJ4j8jHDXoV5ig+/dV5zlLX7d/6VZrDz/rP
+bvESZ27VNrrzNGR+FrpDnGY1Y5v91+bgzdZYmc58WZVM3rUqDlCV5b0FRNz
vXnDHfSXXI+rIWfOFeH77zMnzDF5e8OOOcvVH9RxnDaHKKet4gbx5M76Dfp8
DDhatRwqIi6MxKJxMQYWH+hWu0Ys2Kj/LlCTAebaCw8uzfWP+fQ0U5uBiVOd
kXMOEnHY7qrLQH6Gl86c2+3Dn1gZMvB3G7X4IvGdvttVajQGKs1kLhQQey7R
yhuwJudfN0u9QNy4W8WLGciA0K2iKznES1w9q7KDGbglMek2Z2fP88JNoQzI
iKWsnvNYwNKbmlEM+CTkZ2YTr034Ozl9kAFlIdPTWcSxN2uOJ6cxIKKomHxu
bj3N315SfpeBI41W99OIDwsd5emuYqD1gn/8nJtF62yk7jPwWamFMWdPac0J
Th0DA5q2rWeI09UkqYxnDNQzvfpTiUcc219/+MTAqQ3+yqeJsXe5gvBXBjqk
jv1NIU50twqjfGNgo0P7gznL+T+ULvjOQHihqc2cdxy+sp/dz0Bh9+foU8RZ
id9u5w4y4JvXxphzd7LUgpZhBp4Hi4jNOTbz+A3tvwys3Kt8LXlufec94vKa
YGD8l1jonJddmrHK/MeAQYSW6Zz3XdO5+GKagQ+PTy6e840Sv7+zsww0Jq/5
dJL4f3hN8KA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89407#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 218.17381102510828`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 218.17381102510828`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {218.17381102510828`, 498.9999994908163}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.7876883966658773`*^9, 3.787688417633786*^9}, {3.787689256480048*^9, 
   3.787689267802038*^9}, 3.7876934110155478`*^9, {3.787693901364965*^9, 
   3.787693920499447*^9}, 3.787694140620894*^9, 3.788278148731627*^9},
 CellLabel->
  "Out[640]=",ExpressionUUID->"db5097c0-edd2-46e5-9cbf-0d8078fe76d3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89488#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwVV3c41u8XRgjha++VTfbez+HlJfMVSahk78xIZspKyFZCRiSVXYSQleyV
0UASQsjO+L2/fz6f61znPut+zjnX85y1u3HBkYiAgOAp/vP/P2/SUWEuV6UG
f+wQDSHBOnpDJsLt6ZKEGnRNVH9rrKPWoFdFwi55qDB3D5cQto46pXycSV1e
o51l+pGjk3XUnTCst+38Hk0/+Bb/68wm+qgSVb/iPIB8LDkfqupvoRdq9GHy
rwdRhyjPh8n0LbQx7ZDnXzaEOCbCM6zntlAYG9ncZv4ICuZ9bMcUto0yM42d
/zz4jGZXvN68b9lBPQ+nfRadv6OBb7OGTQH7KDYr42Oq9AySuuKlwTy0j8Rc
kJXs6xnkSq+wHid+gHxPP7ztWzaLnr3hkupeOkDHOnLN6/k/EGnM9cH/vA8R
y4dgzOqDX4hV36pM+s0JepfCN5pwZhG5tlIxb9ARwFW7XgexuEXET7WC2dYn
gCJCrmj3u0tIDmcsSdFEANLQ2r0U/Bs9r/YlLHpOCPpNp40XnP8gtr32psxn
p0D6xG6baf0PqvR0N/b6cwoSeK7186mto96C6wSqysTgb9cQYN6+jr6ZnfC0
DxCD9oJ3e+3oBiqk4GrfJCOFudWv14O2/yIHJ9rfHa/IYDzxfm2y8haqG/PL
yCYjhx5JZfLnoVuIm7Gq7bE9OVT5pFVMkmyjwxztC6qcFBC5rX+iwrSDulgO
NS7mnQGeozc5Rwp76BltVFXUHDUw5DquM97eQzeGyYL5TP8DMkSvLfF+D7Vh
nrDItf4HfyK8fl/V3UdEv+5TfL1AA83EAiotlw6QiLijmQfQwhXKlM93gg7R
YMlgU6smPeBeonOPGw/Ry6OP8pX36EHbeDWsmuAILXdgXMN76EEsWU9wPvYI
yXEzJrRZMMAh/Ym/TvYxsuf4eEc8mBH6qBTIia8QgOj3lNura8wwbECX1R9C
AI/LL+qHq7HARNyaYHYOXj9y98x+PAvMk5RoS3zBn4vxZt5LUVY4PGKOsLQm
hPZgQrqrAWwgura/U36ZCAY+NDLtKXOClNj4vcBbRPDUx8pWOJMTFNyqGLSy
iWD8zjNP521O0Fpwk/k8QQToEuMYey0XXP427UloeQqEkspIhnl4ILa/af6i
BTE4FRY713WfhUTKR348N4mBpaY92YaAF9L0bxL9TicGnSa627lKvJDXKcET
MUYMHy431hyU8UJdc551mTkJyPL0PFPK5IOfryKHjy+QwsXArtnFRAHQStJp
KTEhA4vkI6H+U6IQoV/zfNiLDNZ2dXuHTUShmYQv9egBGUwpLd5KyREFlRAC
J7NeMritWDiFVToHsq7vzpzokUPsnC9DXpAY8GOkL1loUYAHoU7QBKck2B3n
QeR1CmC8SS10GCAJ+fXUouURFGBaLta12C8JHFIrh4TvKeAPbdBakqYUMHKW
FLxUxfdNTKdv/IEUkO5yrBHLU8LZb+eTOsJlQLvq/mdJc0rY3XuYjqpk4I7n
QYuVHyXgDHBlZ3/KwPGPz6kVlZSQWk9nxGUoC7uDKco2ElRQxa2T9Y9LDhbL
yO5VC1FDMuVJLUzIg6PkAZU0FQ3MiPeThWYqg+F0TDELFw0EZ79rYfuiDHIx
jOoEkjSw8VD5qfBZFSD+LuUxgKOBdgMBoYflKlCQ6NzjmUYDCudG9oO7VeH7
6mh0GTst9Dm18RTTa8Dl8tcnfKJ0kFE5kKp5UxOMRBw3mHQZINveu5YjHQsH
9wPefcX3pUvEuaWL77BQunbvXpETA2DLv5eFzWKBuOYZq0w0AxTAJ75scV1o
0FjUNOpgAPc66oHudl0QNHdPicIwwiQ7l1/3qh6M1t220TdjBLor52L16c5D
JGuCIK09IxyTMqYXKZyHL9/KG3LvMML7mriSqbDzkOq6Nlffyggqf3OFBaj0
gSDcR3YdMYHBWHfqKrcBvJqNPKozYQJuL3pXpGkA1topXaHXmIA64oT1gp0B
1JFXW58JZ4LzlVylNYUG4JG2FSXYzAQrr86V6PEZwuTzwFEbNWa4y9X0MZbB
CKIpY3P5DJlhkHKV30DaCORuZLksWzNDjE/RUb2RESTL1R8G3mYG2p32vqx7
RoB9f8Cf2sAMRcMPGTU2jKBqNDTgoxILNF7AqGPfGEPpPQe7ufMsUNs8Zqs5
aAy5CgYm/6xYILb2b3T3ojHEZ7GIiIeyQJlKVu1NFhOwt6n+ktzKAm/PUY4p
+5qAFdWjj8+HWcBFJLnwdowJ4Joj6tp+sAD9okm3Vo4JqPEYJ2+RsIKcCDXv
1XYTYJhfxFjqs4LED7Mm69M4oEgfkPKxZoV/Qazi5DQ4IMDWccZ7sIK18HuW
QBYcrJRE7b5LZAVRzq/xqcI4mLN0mx/NY4WDRaFiTSkcTJCbDq1WsMLqxzCf
14o46HDnesE9wgqN48MzH3Vw0MhBkqU0j9cv8TjfNMRBVd/vu6bbrBCvT+cw
dwEHuZL1V6OY2aCiLSJ27yoO0mbyDHKE2SC51Ti1wAEH8Q+jlWqV2SCl3/Lb
GTcc3PxrRvfLmg2eMwb7cPjjwKNI5eTEgw1WKlMWPwThwO7i2RWWMDbohneb
oqE4sCQlm5ROYoPRd7dLTCNxYPxmrUM/nw1KOWy4lO7hQNtlrMq+kg0mbea9
vsXiQIW1MS+kjQ0Cr7+o0E7AgVRPQUL6CBuQXf1A4p6EA6HbcbdezbPBr43C
YtMUHHCJeTt1bbNB57JWz14aDhi+WpjNkLLDBaaMl7aZeH4T1WGfmR1UtVLj
4rLx/CJ+cToRdpBRk8rye4yDnT8UbOdU2GFhyI6e+wme7/wNUm0DdiAd4pFP
yMXzbTrx18aGHRoV1pXe5eH5Jno/E+DJDps3T9zL83HQX13clxjGDnRS/wna
PsVBu0NCQ0kSOwxjdpvH8XIDo19JSz7ef2pSIk0BDio7L6dNVrIDCVHFChVe
Lg2EyM02dpi/ISU9gMfnCgt5nRllB8X3i9XmeDltksqa/yc7HNFX9ubi48XH
b+mq7+Dl1YDJl/h8IlSn5SxOc8DWLXu9O/h8b660nr3BwgFWdhtxHPh6PJ6U
UseKcMBz00zqUHy9dsZJ//JVOMBysxdbhOfD8iRgsd6AA76vkRem4PkyrrAZ
G7bhgLcbHal66fjzuY5p++3JAdbFQXGdeL5V6URfE4dzQKe36jZlMr5+QquP
fUkc0PWMOl70AQ5sN+J+ZORzgApbaDx9PA7uDi4xi7RxgKrK8vvzUThgamGV
2RzmADGh7tXMcBw8f33e8N0PDrg4fBJUfRvvL/F5hBEJJzDPq2Sb++H9hU0+
YmLiBFM1ZuFpLxxsepLXfhfkhLgBCxppfD8yG7ku+ehxgknNKoORLR5/RuRC
xn1OcG0qJb2oj8cfWHpcy+EE5YXUIEdtfD7LsdHCLzmB0OxX6nkNfPyPiw0N
/ZxwlePmbqI0Hh9TyvedlgsehA+5cDHh8YET6qW8XFBgP/ZrmhqfvzOZpY8s
F1SIbmf54OdXFeuScOoiF7BQkNSYrJvAXWLhbaEsvP0o8/e81ybAtHXpv41S
LjC5EXOuOdcESn/EiDTUcwHHIyWmjAcm0Nf264rhNBdUet1zDnTD4yNLOr25
uEHfxMqe56wJPD8SzKov4oaK4/v0VFHG4Pwv5UmxJQ9o5E1KC501gjTjlQ+3
bHng8ZnOdxpnjKDlqc6ykQsPvJF4kqO4bQgsensKO4E8UHy6o3Cw2xC6064M
YjN5wIpA+k6dlyGISAifWhzjgZFhzvNHtQbw27bJRdTsLDyO4A0NVtSHG52/
ZF8b8YK3aYIYg7AutEC5u5gFL0jtPRN/SaULNO+8C59f5QXpM5Psxn+xUPF6
n67oBi/spGT6PG/GwmbWmc2sh7zQvUUxO3QRCzfdJSvujPFCY4Y+rU60DoTQ
BIpZXOGDT8mUIrSbGOiNV3UYceQDq42NpiuTGOAkIcjBefGBSkdoRWMLBpr3
Y88YhPMBa0/IzaokDBD8eLSMnvIBydX2ozsSGIiqbS4V+ckHKeYR/83e0IJ4
K1KBIw9+uEqDc4oh0gQNKcqdJX9+2F7z/DK/CrBBQtc1HsIPp2uUjy9OAlhW
crpWJPADjUSVm18FgACZ/Ev7cn7AxZGvP74G0FJrL9/zmx/QiSjmUhSCHZpW
nUw3AXheKN/SLqIOZQudTHd9BSBURGk4kkQdrjT2/vIOFgA7CzZS51k1aHee
iNOPFwCFYZ63z7PV4GHzn76j5wJQWkxt9B+lGoh5cFk4LAlA07lmM+M9FbDv
uu0k7SII6zYGD7nXlMBBTdB454Yg2Jc5ZtgOKIFT5aD8u0BBAO+Avx0VSuDy
WIBEJ0YQmoQ0TI78lMDrxkCh5TNBeJGx0cp+qAjBzHyz4fOCIGtd0kBArwgp
zj3W/bZCIN6e8L7QSh7SvvhjUl2EwNk4oVAF5CHdlPucpbcQ1KRxGW0KyEOW
qv/BbLgQpIuxBnzYkIPc/7iyt3OFwHjAt3opXg7K3viMc3wVAqYdliORD7LQ
eprV1P2yMPTEigln6cvAQqGE/uR1Yfg2duzJIyMDlKCN0XUTBhKb2Ps9rDJg
GXRDnu+2MPziOl8atSQNfxY7WKdzhIGULmb2brw0cPb4zunPCIOUEYt/3rAU
3Ero9RN1FgH8LpyW2ZLA7885j6wbIiBBJRvI/kkC2tt3HUmDRIAm++Mr9QIJ
oDnitZyLFYEjjHOduKkElHjeUntUJgIwSdddXSkOY8aCJBRrIvCr4DQ/U6gY
SNNGZCz5i8J/R5004qqi0ED2WbgrRBQ6+f7tE7OLghaBxLuiu6KwrdxHe/qf
CJj/mf5+LU0U0qtUtmLficDNPkWR8WpRIMsPSA/VEIHGuD/v2jZFYeeD5siB
gTDoEV2bfex9Dlg/e4qMRAnC0H6t362gc/A6PqUhDn/uVhuUpJcizkHr3MSW
vZEguM80iNIlnwNfk4rSO8yCkNjM5B/7+hzUtw8v2r8UgNHgftKAtXNQmXel
OOE7P9j+VRcz9hADEu/+cCUbPqCiIxgc9RcDRKNoyobhgwapNj9rfJ2L+hJe
3KJ8wOCFfeeSKAYCFttNKXv4uV001o+qEIMsGW52lkz83H+75vJ2SwyUnbio
fabOAsHHyCLeUHFI4+8oI73FAy9/YfSe3xMHQY+Czxv2+D1DSroimSgOXwi5
jA+MeaAGEy+rnicOq7ghVzsBHnBpTmm71CoOdzkKZBhLuGGwunAmgUQC6jzj
dkXduOBpbgfH7gMJMJIc2dxl5oAcG7HPFzMkwJ8axy24zQ5ZbKkPa3IlgJsR
czZqmB0SM2xJfV9LwEf3ncTuB+wQnPjvz8qgBFCsyd679f97QZj0hzl6SWCd
LFtWIWAD4qtPXPuzJaF3KFT9Dj0LnLAT84sXSILGYiQF9Q4zHEy6fbtfJgm/
RAqnWyaYYf2iktn5d5JAxKT+7FEuM3wxGlFr/yIJ110HN1nEmGEql5js639S
ILT1VYfWmAmqE1Wmhy9IQeOmTu+dcgawe0xN0mAhBYIfF24ppDMAXemcxFMr
KSgkf3OHNIwBvFvj79ywk4KfD6XI/pkwgNjWlAilrxSoXJmqkd6mh6LLt4N0
HkoBXRR5WZ02PZ73Rsa3A1JwIFE1IrpLCxjpZJQ3IgWbPMLv+H/Qwqa6g2v0
ZymIvHKmXGGAFnCXKJvMv0vByqd98YISWqCMt3HYWJOCNoZMo7TLtHD3z2GV
KLU04ATlxj620oB/gzruiaE0POQUcrmk8x/UWnURTeKk4bSxhuY693+wc4Cr
ZbgoDUdV4Qz1B9RwS9WBLeGKNDTbmSRPVlBDWGP8fLCXNPw6ExpkzE0NMc2f
gyyTpUGMJoloiJgKHrX5PKUflQaVzCls9DoFTNv9MzOZkAY95RsJhYMUwHHq
Hun9L9KQG/maf6mCAnIxWe5EP6XBUobmxooPBRS2N8tvbEtDEu6qZd82OZR3
nunpZ5aBtAfXNbuJyeF9T/FmnLUM5LJHXVXXOA1VLIM+oddkoGCjTLef/zQU
OR2se9vLgBfhZlvImdMQT2Ty55K7DFzmfjIjPUkK5ip7vwVuy0BpQkHfXgAp
LD/X/9n6SAZIVzAsUzUkwBD35/P+pAwAjRPFFpYYSD+zXlr9KgOG3FR7m1LE
sM+vPT4zKwONowriZ9iJ4VtL1mjXkgxIfKdYjf5zCp7vaQ6l78sA1+leKM0+
BRouaT3SrLJQqMHwNXCTCFx1lZtcLWVBtr/telgtIawJs3ZU2sjCA8twibF8
QvCl2O/dt5UFd4yao04CIYT0vf0S5yoLAxeiY33sCSHZTOnwebAsNBGSrG7R
EULdNUXV5RxZmJ+Vv3r/JgEQBcnXu83KAtk17xcqucco5jJja9VPWaAaGH/Y
GXyMKFW3uw+WZOGAPCkx9NIxYjyumYjflIUnegqL7rTHSPiu3F7ZKTlYaxFZ
wsQcIZNkWcXfAnLg3R94VBF8iHJKpWvd3eRgSN1JnCH8AHVP2nfneclBduHN
38LXD9AWRcb0iK8cJCQm79piDpCB5wGh2m05OOoqxKqQHaAD6Q/GlAlycJD2
eDIhdR9dfme+WP5SDnYmJDLvV+whpv5A9rV1OXDpZyEcINpFWifPJXi35UCq
9S7m3+IO8pL6ommxLwc565mVOgM7qDMFv3II5UEUdypYLmcHBVwir02kk4ca
TtYnAYo7aHTmkbGknDw49G/vOPpto4d/myK9A+VBKdvp7RmCLeQ1nHzd5rY8
iLAujSr8/osMK+019cLlIVu/yzto/C8ivUFOyBMjDzIvDd5rvPyLQpbNIwYy
5OHwm9P8qPVf5DT7O0yiTh4whqFMtE2bSG2ANWRlSx7e99cbn03aQKyvVqwn
9uTBKCkgdSVkA+0kvFdtP5SH+PdfL39y20CV+o7/HhMrwLyxKsMH7AYS7KwI
NmBQgD3duamsk3VE26R7q0xWAbSwWgU9/utooSzgpouvAlQd2Wt5Tq4hC87j
b6U3FYCGJl/6Z90a6kiK1l0KVoBj85SVu2lrqMg/k8UtSgEuDPBRqeLWkJ1G
fYN7mgK4bbWthnxcRd+GDo+96hSg309+ROLDChrbi4oJOFCA4T3fzxTDy0jb
nXK99lgBApRLP/PVLKOar2mWO0SKcJ81ivlaxjJKaSsWCTyjCHTrmTWq1ssI
l9D1KYhDEUxDNfdjF5ZQL/cZmhANRRA2rTDHnVpC7diUrDt3FCF+kzws0vwX
+un0ri84WhHKDzA5Rmq/EGnMPJFfvCLU2C35yfL/QnpdCp72KYrw5hbTF4Ot
BdSrO62pXaAIquNWLuXpC2hEj/83SZsitK8VG9J//Ynm9OvU4wiVwPCeeG5z
6Dw65f7dN5JECWJURtsTXOYR/32y0lvkStBJW2fqYzaPnD5Z0bnRKgHR6kel
UJF5tGxwsqB/Vgl0O+JuPhn/gTYN9ZIpNZWgpnzbfFnuByI0mZpLilACA93r
p1gI51B380U+/7tKMDW26zm3NouSJYbsLWPx8RnP5bz/Mot4qLvneZLx9qsX
/1S+nUXQV7tQmacEBeUCsv4+syjC4OHySLMS0KXvNV1dmEEEenqbzEdKkPH4
yC2t4TvqfvNB5pBAGdYtm1Dyo+8oWQj5zRArw85dgsXy4O+I57TCVimlMoQ5
dZ/TU/2O8BeZHWUOZUi6fn6VqPkbitA+2bdWVYarFvyNHh+/IgLNOsL8W8pA
Ven6Wmx3Gllp/+qZCFWGBekJpqcT06hGlyWN9o4y0HRirBQbppGLcbBgVLwy
CClHz3aHTqMhaw0Dp8fKIN4yv3ibdBoV3OxME2tShu0T9zRCrimkXT4uVE+g
An3pb57EO0yg3NenNzaIVeArkXDx3/MTaK9KqUGUXAUGzxrRBEtOoPL6R4Y5
tCqwO4V58O3gM2LsuuoTzqsChoTdd4hSP6OF2YUGHW0VKAiVDMzuHkexzLtG
wzEqsIEtkhTRG0Np3d0/2u6rwCtnFYoEmTGUd+vRreokFdgZmGQh4RxDddPq
xWmZKsASGRKkvDmKfubdPbQoUYGSoqz+0iejSEuY7sV0pwoMLTpC4t4IOlQS
J/tJogpL25/6JpqGEdny8ZMxclVQJMmS+1w2jOgfD8p2UqnCjkUky1LmMBI9
8rtWwqgKu94bJLq+w+hya0Odq4AqrJ2XVF0SGkZ15/Uc17RVwSx18HxtxhDy
trJv241ShZhCZYmFyEFEnbc8oxarChZxWMXuG4Oo/IfPSWSCKmjmmeCarwyi
Xx4RapTpqgDOO1YLyoPoaviTOp5nqhA0V/ATuzCADIs+l53vVgVbn3NXQof7
kfCaQepj/LvjnHe+bWdnL+qUGamcoVEDPYdWU9WSXuQQaDUowKgGX2gi+EZi
elEegStVBacaBPGy9bid70VM9NEx7RJq0EzzqFe+/xMiVmq5vYpTg+gMjUmW
bz1oNlLOAaWrAdY6iImB6SMSZKJO9Ma/e2I68s5z/OtGbmW/3jx9ogacq+4V
mjPdaGv40RniZ2rA5uif86OsG5HxE1Z316mBcNJIdIRmN5Lo7CO8MKEGgRGK
rqf8u1AwhXOeA7s6FGkG3bm02oHe58LHdG51SLJfmu4Z60DEsmx/O/nUwWDW
ovxScwd6YN2HFRFTh9PBK9CU1IHyy2XXVtXUgfmnC0+tbAfqMiZQD7yqDquz
/Lkooh0xpGZPxT1Vh+YS4lMU5z4gijH6Id9idXCazRmdZP6ACJgTu6yfq8P0
Xt5OI/EHtProTo14pTrEEo9+b/zWhjoL3BOHWtQhy8lb5mlqGwqqUtdinVEH
K7rrcr8J2tDXodnnpVwa0DD7YoVgqQWN0tvkP+TVgJCnPVeZJlpQz8XxjGBB
DTDZ6R1V62pBdZM9UYYSGsDapRLTWNyCkmerr6yrawDu6x+ee/YtSGvjHq3S
FQ2IF4ujsGx/j57RiN7qeqwB2G/Mwk3jTUhi4fIecb4GDBxyTzrUNaE37+IC
tYo0oNf7WYdkRhPqdloKaCrXAKokTJWERRNabiz1rW7SAH1Os8jez41I3FXI
I++7BnCys6s6zb5DNa381wL5ELyLtL7JQtWA1DLNv9UIIbhv9Njv+3o96vC4
e2XzHALpMGGejtF6NM48b+0ph+CUI9nB75x6tOtZaGmvg0B9P/6wUKIeqbDx
XjBxRnApqLbw6aW3qNWXW0foBYK3s9rEe8116GD7TzLHawS6rHEW+yV1SO5W
yxfaagRt7UZ7tA/rUGn4df/DBgT9xS8GYu3rUHJCYeFQDwK50ZML8eR1yPaZ
EFHIMoIqQrXx7su16GQl89oiA4DEn1GFdIoalCMRQfKDCeB58t0i851qpOTt
8uIrC8Br5UtZwnPVyPev0u4wB8DUdEcrVUM1WtifTGziBxjZcv3V41aN+kk5
mlPkAChZpqaOB6pQLk8+h7o5wG60fENLaSWijpfuFrcA6DjrNo3JrEThf9v8
uCwBBh2/Wk3cq0S2nT97TqwBcj9uSMnbVyJej3O32uzx/rj/2DZyVaJnb+rG
dP3w9vv85JtZFeiVcV/ihRQAO4VHU+SyrxHX26sqmDSApSyWQUGG1yjp7PpP
2QyAW0JFXnbbr5D3Fp064yOAYnlXKfm3r5DMI8vfn58C1FFbxumgV6ju5w/d
K5UAhMFSz3YvvERNIQcELoMA4Q5d9sNJL9DO64X1O8MAyeFy6iq+L5DUj+GZ
J6MAd/4xL7eav0BF51+0jEzg/b/JUpVie4HimWwi0CyAxovvoveelSGLiqYT
pk2AM0M3i/+2P0d/fkQcd9BrQtF4jsMxcykSZvZcm2HUBILNG+5nj0uQnf7l
b/+YNUH+l7Gq7XwJGq+Qbpbm0ATzWuEOqcoS1Bg6F/qEXxPSVZjc2AxL8Pte
+8hfXhMS6s+h3ehn6KzB6UO+S5oQ8d9nPVqaYiQ3hhlmu6wJ90yD7+8fFCHs
tYhSWmtNsHB4s7rzswi5+e2bn1zVhOdega1SjUWo5vHvl1NOmuBqKxqc64rH
rwxce3hTE1bPKAzhuguR24OsD8fpmsDL8YYjOq0AhTCPZW9nasIUOc/U78gC
lPiU1nslG5+vZY+qw40CVF0bzzH1RBOasLdyEvQL0OHXkIDaYk3g/y5UUU9Y
gJIkrgt51GrCX0eLFwF+T1HNgMj9yVFNmHQuqTm0z0fJfK3FB+OacP7LOQa5
C/nIPdCyhX0Sz18/QVcY5CNe7pjtK181YX2AZcCIMx8lec1fm/upCXf8Rsjy
X+chN6o8ud87eD5bnP4V5eciHgOGb4csWkAaPKGd8iQHHea+2ONk14Kn9wWs
Y8Jy0OdNLXrEqQW3IzLEcq/loMRHPnqRZ7UgVN3bVYo3B/1b6q8iEdWCVyIT
gj9KH6Px2LgYalUtaFBGx7aNj1BC57EUzxUtqGGPEh86yELgsyDNeU0LFqc8
HaJms9AWe78M23Ut8KnG6pl0ZyEbnydyDI54vQV1uWxGFhLnUFMi89QCxi3S
/XOyWajf5xZaD9GCC32plh98MhEN55ZRS44W5MdZVM8QZKD2rmnjplwtMNz4
fSlzOR0F+X4wacjXAs/km9kOo+lopivFtKZIC2K6uDO1StNRpa/0xdJyLbho
VbFDbpqOLnR72SQ3asE8hxpT1bM0lOq35Gb7RQsCfki/+3Q9FbFhg33MvmnB
SizN1wTjVFTAciYIO6MFB0L3eK+rpqKqJrF7YvNaEH/nVJ8WYyoaPO2dt/db
C1J22FIWP6Yg6pydkeR/WvBd85fbS4UUFNt+Sr2VDQPvJxtXsjkfIprMNEwN
BwayZ5qjH1M+RJmuAvolXBhY4SMkfvUvGT2j1r30gBcDq77nnUmmklGHZbzP
ZVEMHL45Jg/JTEZEqzTPNpQxkE5RGhvMmIxCGLn+472MASX+3xHpKomor5Lc
ClljoP8SyWVytkTEZbxdZHMFAwbFjar5+w/Q++helczrGFhUTn2oUP8AEe0F
O1G6YSDgcDSFUOUBipn63LQTjIG6cNz9Dc0ElJL30ONTDgZ8tTpNNdzi0Q/V
0DeLuRhQ6LIn6zeKR3ITLkSkTzHAI+hxKUQ6Ho3RQBYUY8CuuVFLbj8OsdxZ
+1D7EgMUHpbLVPFxKNfBgD2/GQMWly9cMaqMRc9FSHr8ZzDQ4sg4xMcYg4Y5
NP95zmEgk1d9feMoGh3+FyrmPI+BnYicS58XopHxzlbi5UV8fU+mnv56G422
2ubNNNYxsNBr0cZ+NRqBTfvX0wTaoIgEz74vv4cmEqM2HnFrw5TjdPtlq7uI
6M573rSz2lCxfcNvQecuOhfwz+wBnzaQ/Rh8FSN9F4VZ+9WFC2nDgsNH/9Pk
dxG/sP1tB0lt2Izg+Lr/NgrdaNUikUDaoBVWXpnFEYVItwhZW69qQ3j8Eahs
RqK9iqzEeVttuNtePlHxLRL99pQkJrPXhthmi3q1T5Fo8JfNH2NnbRDXL9pO
LYpEj6bfdHy5oQ2m/M4N6paRSOKDp+9ehDbkioRQun2IQBYpk58kC7WB8eFJ
Mo9pONIz8dY0K9aGgyI3AXLJcKRKefrNzRJtID2tP8JEFY54ouUKml5oQ6/O
wWT+xzC0fCspyKBGG8zOt9u4a4ehsOs6As4d2vBorTPxLYSiEqnKsNxf2mD/
yFxTyOw28mLc2H+zpA0/ReoZ/8rfRnIHUgFDv7WhKmCK/xvLbdTyocKdeF0b
/lI53KD9HowmLCos3fa0YWiUjG3JIxiRhb6WUSDXgfbLOkso8RZy+fhyoU9U
B+bc1LPKFwKRxKvV67/EdOCXY8bts32BaCtF/CuBpA54dCW+qqwORBE2L0dk
ZXVAaPTrfb7IQJT1p7wlW1UHuA4Dvp/nDETdjOWPHA3x+LVvfTFWN5GIXZnx
kacO0Ncm3KNY9EfdT1QqNm/oAHmiIkZmxB85TfbQLvrogMaD4S6vZn9UhPs9
OhygA9mXFMcF0v0RDxKzLg3VAZdE3FQcxh8xcbxyNnugA54MjgwsRX6IaLwy
4nm5DqwQPL3U5ueLntJqzeW+0gGpas10m+u+CIyGMWkVOsAe4itGbuKLQts3
ScNrdKBk/z+ebFFf/PtG9oF5ow6cV6YUTpnzQWtJtdknn3SAOziDdfKiD5o+
X1918bcO1DGEBWmc90ZaJkWWAas6sMfP8a9Q0RuVmScdp/3RAZIgvhgOQW8U
fM1Rf/SvDmz057phT3kjtgDauQuHOrAlp262E3IDWea70uKosGC6u1zz0tsL
je+weutLYoGS1mkoy9cDaRwSM7lJY4HMz+TapJkHeka4/i5OFgsUMYKSqvIe
6CZl5+mPiligMWsntttzR4y8vnm6gIVem94spQh3ZG7U069tigXriafLS+lu
aLgwWBz5YYHobDqf14QLoiOoq1cJwAJ5SIKi9XsXZGazoaMQiAWSybNPrj9z
QaMMLlfFb2Oh4GRtq97fBX2+dzGJPQoLTH0PjtLpXNAXZ6mN3RQs0N3fHJ+/
4Ix+nluoqajCgh/Dmz6Fn45IMPasZnkNFr4yVghyDTgip3mbvpI6LHykoetn
r3dEizkjP3Mb8P5msC8uP3BEy1StTA/asOBAE8vwVcERrf15HOQ6jIVR0ktz
qw8c0F61qRrvJha+je+OlhrYI0olhX76LSxcCfd4/FDJHvE0stmS7GBBvlrc
6IGAPdJr/xG1uI8F+8eJQk0ndih7NODTK0JdmLuTVXZYY4dUtrOtVGl1QcJS
PWKZ1w6FKMwFmUvpguSH/6xPzlxHyQ2dFFgZXWAsM60++88WFWm8yFGU04U3
NdaN5su2qBfr38KmpAurectPV7ptEeclUrJZpAuC9fNEc9G2qDlQNNPTRBce
mwxZj5HYopO3vrXRXrowXPDg0wzXVfSFtOp+gbcuON/xFEk8voIazDeuN/vi
9XSqkle/XUH+6zeod27qwvoxZYpj7hW0KOTp7BiuCzr/JeCoeK6g4QxnVu1k
XTi7Lwn5Ijao2N8mlLBKF1q+OA2vmVuhO22PzThrdEFquTigXMkK2dJMiyjX
6YKD2E5QLIcVYiu/PO7doAunLsRyPJ6/jBJ/WEjOtOmCilwxCN28jIIumM42
j+hC96IptjnXEhlIYXVCtnXBnpmLnYTkEiIYGyP039WFtNa9iJ1VC1R3y7HZ
fV8XtuVyT47HLRDvh7uK1ke6YBF78Y/5cwt0cPGDiAqJHsxd6pGiM7FAZbeB
eo9BD8YMvY+bcy8i8i6Vz35yepDJ92lS19gcNbv3pLor6EGSwOfmDWVz5E9j
hbNX0oPdQOqj1wLmaObyrY8X1PSAg/uMuOuRGXq78uadtLYejIof/f300gy5
0Mnn/zHTg1gW4i1NOjPUdUXS1d1PD5S6UsO8l0wRnb3LuycBekB1V4fSfcwU
XXV5SjUYqAdn7bmJQ1pN0Y4vfZVciB68DRDvm8k2RfyxuwdHd/WgzX2GoNrA
FEVUvU9IztCDF6lUg/bVOKRyGldRW68HzwxCR1P5TVA0ZRzR4js9YIvyHvlA
aIKGaNvM2Zr1YLrKooXtuzFy4ZDbD2vD2191bVJ7ZIwypVm09D7pgfLT4jpD
OmO0ZT0zMvVFD+JyneWDyI0QXGcVpPqOz/+0TeKpJUN03+lCEJrVg+6dPZXq
bkPE69POUfRTD/b7shfDYg2RaXSpo+eaHhgzBZz+QG6Icu7Pvslb1wPRGy9u
eCwboMVkNorhTT1gYnL8pvTJAEU8TnilsKsHq5UDwioPDFBvfgeB674elFsq
Vnp5GSDmZ8cXHv/TA9XKpOwOEwNk90KxuO9ID4IY5N5qSBugVxXeuycneqA+
Hf5jks4A/Q9Eq/M3
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89488#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 3.011240827812657*^-7}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {3.011240827812657*^-7, 66.53226055165541}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.7876883966658773`*^9, 3.787688417633786*^9}, {3.787689256480048*^9, 
   3.787689267802038*^9}, 3.7876934110155478`*^9, {3.787693901364965*^9, 
   3.787693920499447*^9}, 3.787694140620894*^9, 3.788278148871449*^9},
 CellLabel->
  "Out[641]=",ExpressionUUID->"74b5585b-eff1-4e47-9456-84c9b3ea393f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89569#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
hA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89569#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.5203665055340135`*^-7}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {2.5203665055340135`*^-7, 13.702575999832714`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.7876883966658773`*^9, 3.787688417633786*^9}, {3.787689256480048*^9, 
   3.787689267802038*^9}, 3.7876934110155478`*^9, {3.787693901364965*^9, 
   3.787693920499447*^9}, 3.787694140620894*^9, 3.788278149003783*^9},
 CellLabel->
  "Out[642]=",ExpressionUUID->"178b58b5-f1a9-4994-8c17-f8d6c7df3382"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_Fast_low_time_\
series.csv\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"s11", "[", "t", "]"}], "+", 
          RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
        RowBox[{"qTar", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"S1", "[", "t", "]"}], "/.", 
        RowBox[{"qFlux", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i11", "[", "t", "]"}], "+", 
          RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", 
        RowBox[{"qTar", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"I1", "[", "t", "]"}], "/.", 
        RowBox[{"qFlux", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "60", ",", ".25"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7876875432462473`*^9, 3.787687627699267*^9}, {
   3.787687785537833*^9, 3.787687785823353*^9}, {3.78768782166111*^9, 
   3.787687835912408*^9}, 3.787694132924213*^9},
 CellLabel->
  "In[643]:=",ExpressionUUID->"71247468-de47-478b-b47d-34fb7e53e6d2"],

Cell[BoxData["\<\"/Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_\
Fast_low_time_series.csv\"\>"], "Output",
 CellChangeTimes->{{3.7876875700962667`*^9, 3.7876875961552896`*^9}, 
   3.7876876343466787`*^9, 3.787687834011088*^9, 3.787688454251216*^9, 
   3.787689306428423*^9, {3.787693341759214*^9, 3.7876933638038692`*^9}, 
   3.787693414097124*^9, 3.78769414783399*^9, 3.788278149063216*^9},
 CellLabel->
  "Out[643]=",ExpressionUUID->"b4d9804d-1baf-4ac5-bb08-f85a5b0c8cac"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(Lower Left) Low Freq Travel; High L2 \[CapitalBeta]", "Title",
 CellChangeTimes->{{3.787685997797535*^9, 3.7876860072755613`*^9}, {
  3.787686699045342*^9, 3.787686710308111*^9}, {3.7876876483100977`*^9, 
  3.787687650245266*^9}, {3.787687850761251*^9, 3.787687852639708*^9}, {
  3.787688169029744*^9, 
  3.7876881733201513`*^9}},ExpressionUUID->"fb92fe85-7aa4-4db8-a357-\
7dcaa76bc50a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"poppars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "500."}], ",", 
     RowBox[{"n2", "\[Rule]", "500."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sirpars", "=", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", "\[Rule]", "1."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"High", " ", "Frequency", " ", "Travel"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tarpars", "=", "    ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]1", "\[Rule]", 
      RowBox[{"1", "/", "100"}]}], ",", " ", 
     RowBox[{"\[Tau]12", " ", "\[Rule]", 
      RowBox[{"10", "/", "100"}]}], ",", 
     RowBox[{"\[Phi]2", "\[Rule]", 
      RowBox[{"1", "/", "100"}]}], ",", 
     RowBox[{"\[Tau]21", " ", "\[Rule]", 
      RowBox[{"10", "/", "100"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.78768671657576*^9, 3.787686722340773*^9}, {
   3.787688206403298*^9, 3.7876882113532953`*^9}, 3.78768920185503*^9},
 CellLabel->
  "In[644]:=",ExpressionUUID->"4eeec78d-3001-4722-a4f0-3c63999a6bc5"],

Cell[CellGroupData[{

Cell["\<\
First : solve for residual population size as a function of \[Beta]\
\>", "Subtitle",
 CellChangeTimes->{{3.787686741572324*^9, 3.78768677338752*^9}, {
  3.7876869165364122`*^9, 
  3.7876869197295103`*^9}},ExpressionUUID->"94b010f4-b989-4879-a73f-\
601423b4717b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datSlowHigh", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qFlux", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qTar", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s11", "[", "t", "]"}], "+", 
            RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
          RowBox[{"qTar", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"S1", "[", "t", "]"}], "/.", 
          RowBox[{"qFlux", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7876867580867558`*^9, 3.787686759312018*^9}, {
  3.787686933451592*^9, 3.787686944511117*^9}, {3.7876869934541273`*^9, 
  3.7876869970670443`*^9}, {3.787687091133718*^9, 3.78768709866328*^9}, {
  3.787687129226465*^9, 3.787687129363596*^9}, {3.787687664954625*^9, 
  3.7876877163817873`*^9}, {3.7876881796255217`*^9, 3.7876881857276173`*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"6a047d3f-ca29-4f8d-b327-f4ef160a596d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Residual", " ", "population", " ", "size"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"datSlowHigh", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"datSlowHigh", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.787687167102415*^9, 3.787687175399469*^9}, {
  3.787687718849916*^9, 3.787687720193314*^9}, {3.7876881916793127`*^9, 
  3.7876881930395803`*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"fe4609c1-d012-44af-835f-816bbc3a3800"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
NwkG+D+ZXrMq
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw11HlczPkfB/A5mils1hFyVo6UjVhLyvL+oKY7TfcxaqaZ+U6rkBwpRyKr
LR0UObO6KClHW61biTYkdBNNJd33ffmp33s+/8xj5jPz+bzfr+d7vmpuu6zE
DBqNtpxOo429ytZ8zvW+8FAJOaiUaij1C4TMuyc9vwTJ3kdBZKmSx/xACcla
cKKJmxUDnffvXzP2l+3Hwxyt7AdCPwm5eGFsJcG0P38XeuyTfT8V/C5cJnwv
CWnmjn1yB2wc0gY3ech+nw5tE6LWTqEkZGJpnNeGiZnwYufx6Hy+7Lx/4YTc
5ydezhKiyQvP7tF4COVfGFsZdrLzH8Pcs2o1RywlJP7Hr0vjnsJck2HlOhPZ
fc8gUno0RMdAQlaPrxwYLXD94A2y+59D9GjKyWhdCcnp0fhxQy78NHvtxoTV
snpeQqLdhr8uLZcQq/EL8+BPXdMh36Wy+v6DZLp0EVGTEKnf2IH5sJhTFdEy
R1bva1iQa1oQoCQhu8fK83oDec4calhRVn8BaPKnSXnyEvJ/jUJoOTk1N5Ym
66cQeh1yz70ZoIjR+AXvwG5FYdmnTgr7ewdxX3onFTZRZOw2Xvh7aP1pUVpi
LYX9foAaVQr4lRQZb6f0A3gojugMF1PYfxHcK7GZ5ldAEZWxchYUQ/ZyW075
CwrzKIbtkVuNZz+hiIQaWyXw9OrNcN1MCvMphVp+cYhuGkXGTlNKLQWnBSGp
ytcpzKsMwrSbqJIYivSOHddTBt+S/BZ6n6Mwv3I4HKtm3hRKkY3jB1YAXyuI
u+kEhXlWwOrUpPN7DlFkvLwTH+G3OybBAXsozPcT/Cc4ELZ9O0XevB5bn+BA
cAl7hYDCvCvh9su1jq/sKTJjvMDPcOhVaP0mCwrz/wzPZ5XOPK1PkfHjeF+g
NUzTIEuPQo8qoOZWfshYKeunCrpuX1l4Sp1CnyqwmftXhM48WX9VMOLMPZQ1
VeYlhT3LefqT5WX9SiHMu46zbliMflKYaaVZvaZDjP1Xw42rR/ey68ToWQ1F
tyN5SRVizKMapkj9B+a/FaNvDajSWTeFOWLMpwb2Rd5755spRu8a0PAZKnC9
Kca8amFjwDfWjKti9K+FLVOOVZw/I8b8auHm2XN3G0+IcR6+wr1/XvRM8BVj
nl/BxuS5Yq+HGOfjK/QahVKpLmLMtw6UfZN2/soV47zUQXznH9EBW8SYdx20
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
XKlOUzZADwXiF99efkvOgPwP9Uyh8Q==
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.}, {0, 476.67502855640305`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.787687152838627*^9, 3.7876876736193542`*^9, 3.787687720716815*^9, {
   3.787688193410653*^9, 3.787688215571024*^9}, 3.787689314642743*^9, 
   3.787692975508367*^9, 3.787693070382483*^9, 3.7876931631408167`*^9, 
   3.787693313285631*^9, 3.78769341641404*^9, 3.787693484049498*^9, 
   3.7882781531366577`*^9},
 CellLabel->
  "Out[648]=",ExpressionUUID->"254d5dbb-caae-495f-a548-d48813925c9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_Slow_high.csv\>\
\"", ",", "datSlowHigh"}], "]"}]], "Input",
 CellChangeTimes->{{3.787687015313569*^9, 3.787687051835745*^9}, {
  3.787687108391959*^9, 3.787687141828972*^9}, {3.787687732983377*^9, 
  3.7876877379029837`*^9}, {3.787688247980888*^9, 3.787688250185858*^9}, {
  3.787693477793352*^9, 3.787693479965478*^9}},
 CellLabel->
  "In[649]:=",ExpressionUUID->"640ded0e-ca92-4138-9a4c-9a435134d197"],

Cell[BoxData["\<\"/Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_\
Slow_high.csv\"\>"], "Output",
 CellChangeTimes->{{3.787687018033574*^9, 3.787687052130486*^9}, 
   3.787687145202959*^9, 3.787687738266717*^9, 3.787688250757394*^9, 
   3.787689334634123*^9, 3.787692977091077*^9, 3.7876930724356337`*^9, 
   3.787693165596755*^9, 3.7876933133152037`*^9, 3.787693416432406*^9, 
   3.7876934841316853`*^9, 3.78827815316216*^9},
 CellLabel->
  "Out[649]=",ExpressionUUID->"c1fe4973-3373-4768-9ba7-223b6119e04c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second : show one archetypal set of curves", "Subtitle",
 CellChangeTimes->{{3.787686754179069*^9, 3.7876867574938498`*^9}, {
  3.7876869256702967`*^9, 
  3.7876869303956423`*^9}},ExpressionUUID->"d4357ac3-6d10-45f7-b156-\
5cf06e671b4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFlux", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
        RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qTar", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
        RowBox[{"\[Beta]2", "\[Rule]", "2.5"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7876872854250183`*^9, 3.7876873904335823`*^9}, {
  3.787687450398038*^9, 3.787687456758687*^9}, {3.787687751643998*^9, 
  3.787687753544582*^9}, {3.787688257902524*^9, 3.78768834430929*^9}, {
  3.787688465252029*^9, 3.787688468084983*^9}},
 CellLabel->
  "In[650]:=",ExpressionUUID->"e16b264c-cd77-4c05-95c0-2606e6298766"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"s11", "[", "t", "]"}], "+", 
        RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"S1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s22", "[", "t", "]"}], "+", 
         RowBox[{"s21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
      RowBox[{
       RowBox[{"S2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i11", "[", "t", "]"}], "+", 
        RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"I1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i22", "[", "t", "]"}], "+", 
        RowBox[{"i21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"I2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.787687768491724*^9, 3.7876877788680477`*^9}, {
  3.787694286612702*^9, 3.78769428694659*^9}},
 CellLabel->
  "In[653]:=",ExpressionUUID->"3b9b40e3-2abf-4b3f-a174-a4e2f39794be"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$111469#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$111469#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 115.08691970724146`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 115.08691970724146`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {115.08691970724146`, 498.99999694489185`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.787687756817855*^9, 3.787687779325828*^9}, {3.787688263194685*^9, 
   3.787688285813486*^9}, {3.787688317966546*^9, 3.787688345596579*^9}, 
   3.787688469649768*^9, 3.787689339272832*^9, 3.7876929796214867`*^9, 
   3.787693313442197*^9, 3.7876934165407267`*^9, {3.7876942740595913`*^9, 
   3.7876942874434757`*^9}, 3.7882781533252077`*^9},
 CellLabel->
  "Out[653]=",ExpressionUUID->"a74135be-f73b-47ae-9840-12af0457c8cc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
yBV+15d9607o9OKiK3G+l/0/FDPW0w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$111550#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
9Kjz3uQzU7ANhHmRfmW+P7tj3JR4L+w8QHrCok73GKMZLvBO5pBeEfAm7DCL
GZhL3p8nLZnBdiWa3Qzz3q8KSfs8ofL4rzVDLkfZZdKfLZcnLcTM8DOksZb0
DyuzTE59M3w2EewjzWj7auJUohkmD1oynyLfP807JSKSzVD3fP1K0pkKz7yc
08wwdHuCnbQoV+c70Uwz6LrR1pBGd+1kdZEZSlLn1pFOtDz9ub/ZDI+np7eS
Nmvk3HKn1QypGbZKpLm3pAXkt5tBk+mqCuniVQlT3j1mKH9qu530/UeBM79H
zNCu5wDSDGZmPwT/mSGBy86eXt/tByqLDOa48drJgV7fZkr4GLM59PWdd9Lr
W7nt1xVOczSzWe6m19cu8UdT2Bz7FH940OszWp5z0TbHdLdDMP35+nWMxdHm
kHj7JI001ejD46E4cyz27UknfctUKHttkjmmOH5lkPaziZE+km4O7qzVp0g/
c9Gz9LlgDvevfGdJl0S2Z8s3mWPDTEQx6cXoWde9LeZwOt57kbRTnMzmwjZz
XD4qU0p6VXJ6/Zoecxw71X2JdPhpm9Efo8T4H18qSRtde7G5nsECXIvRt0gX
3lj5/TuzBa64XKgl/femRoMcuwWcBevrSF+rP2+Vv9YCcyWf7pDm73ALTRC3
gBGHSBPpyfHJBmMjCzy6NPyQns97weR4Mwtcb3vYRvr8RzPr21YWeH3vajtp
m6+Vb2R2WoDXMLyT9O3FIGZOHwtMJX98QjpNcNa6L9UC5n8C+khnd3a+bc2w
QF6yVD/poujz0TWnLKCgNkJ33bDupexcCyjNmjwn/b4oedGp3ALHOJmHSBvI
8FwdbrfAqQjJEfr8L9+i67EFbAXv0707vfbF3R4L7BrePUo6ZMqZqfCFBXQ6
Ut/Q56sq2u0xaQEXhe5xev4aW9nes1iCX2vpPWm2z0sFz9ktYe4bO0ma90Kv
avtqS8SfnqNb7l+4ezm/JaZff/tAn6+loW6flCVGbPs/0es3N9s7Y2QJpsu+
06Rb59ctjJpZwrr0Od3dV79kPrWyxPkCgxnS71afulvlaAmNY+u+0ufre84b
7m2JFJ3Gb/T6qV6ts0cs4cPb85M0V9HnMZ00S1RVq/6i7+fb0OXDxy1xXySP
7g+BiTqcZy2hFOD6m7RbQkGd6GVLONx7+Ye0VdlgpXmnJQpp5+ZIf/7o9uhk
lyVoTFN0p22d/NDfa4mfb3TnST+o+yXp9tISwYff0K31aG1R2GdL5LiuXyQt
M2N55gKnFcpigpZIt6v0V49xW+HOYC3d3gepvVL8Vjh1eJHuIoZ9q6s2WiGj
MXWZtADv0dSHCla42XmWIZMws8b9Q9N2VrhvmslEuiTW9LzKTivwhXbRjZae
Owd3W2HLh5UrSB+yGPnN6GmF8vpYun/Q5oMFwq3QM+vKTHr8sJo35awVXg8t
sZCWFuA6GXLOCtpfFFhJ+1d+uH2xwArDdm50/+o7z8F82Qpjso10s0ky1nTW
WSHqafBK0grt3Yw7hqyQ293ORvrOTOLOW2NW4G4SYietL6hWIfDJCpuk99Ht
6HfebnjOCn+8WVaRjlnlW+S9wRpnz27hoK9Xdf3PdglrXLcPpfuES7eJrLw1
aKm1dBdfU52Z1rFGhLsmJ+kOGwbdg27WONOqsJq03cGazJc+1rC29KP7VZHP
O+1ga5y3LqZ75ltXBkOiNWSGObhI85059+rYRWto6wzSzSB4ssOlwhoXK5nX
kJ4+n3Rra7U11jsr091eEnDy2X1rGISk0R11U9dg3Zg19p/dyk3avkFauOmr
NYJLDtEt17rmj8eyNRquttM98my84somG2ypcVhLuu7l4yNWCjawqz5Ld+Z4
jes3XRvcuzpAt8H3lLUarjZY+cKch/Rlbrnojgs20O4T5iXd6fPpQNM1G5iq
2dP9+e6VsJomG6ikHaF7677NgUVvbFDOMkF3CP/lvRmMtjhvocFH+laLpPtB
CVus2nWU7tn9pc5exrYYF+qmW2u9+A5bX1vY/eXiJ90SJmK8+aotaoOS6fa4
vJkp9rMtHN+P0b08lev+kc8OCx+3CpDuYRVuzlKzw6P6ELoLRYuFdR3tYLtU
Qfd1m+6TO7LsILGKUZB0U+w8g1+vHQyz9On++jZxqY3XHgJeMXSLWa5clNhl
j7bUarr9T+Q9WDprj9/cY3Tfeiqb8XLAHh+PswqRFrXkG10U2oHVgRJ0H29f
UhJ13YENXxTo5t74y/p+/g6o7pSm+0z4J3+P1zvwZOt6utMertBtWe+AC6eF
6I7l37RGfLcD3J020p1VdDrwSb4DGGyk6K6QZXkcMeYA4QNb6B46eeT7eRFH
cJj/36y/GNe1uDli2FWMbqesl08USx2h2ctDd7lSdXzhB0es+ryKbr9H/012
y+1E1sWVdMt6Vtr8278Tup3/Xx/Ti+rEims7kRT8fw+b19/c+WUnjo4y0/3i
z7oQC0UnvPq1TM+nrzRmKyXcCR2xc3T/rbHXEf/hBCP/GbqX74TVHg3aBeqj
d3RbKpkYx/7eBbfLw3R3uCruCwh3RoDlAN1aK+2qauud0Xall+7rVSGzy8vO
2Lq7m+7/AeLNZxI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$111550#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 56.53197481595219}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 56.53197481595219}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {56.53197481595219, 498.9999949081339}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.787687756817855*^9, 3.787687779325828*^9}, {3.787688263194685*^9, 
   3.787688285813486*^9}, {3.787688317966546*^9, 3.787688345596579*^9}, 
   3.787688469649768*^9, 3.787689339272832*^9, 3.7876929796214867`*^9, 
   3.787693313442197*^9, 3.7876934165407267`*^9, {3.7876942740595913`*^9, 
   3.7876942874434757`*^9}, 3.788278153438305*^9},
 CellLabel->
  "Out[654]=",ExpressionUUID->"14a2159a-8bf3-4de5-8427-25fe26f80996"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
+R/Yt0W+mwcHJPCnmuj0xfzA/g8YQcG9
          "]]}, 
        Annotation[#, "Charting`Private`Tag$111631#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
XsogdgPsfx87z6o=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$111631#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.2624235508045061`*^-8}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {1.2624235508045061`*^-8, 52.19792731900382}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.787687756817855*^9, 3.787687779325828*^9}, {3.787688263194685*^9, 
   3.787688285813486*^9}, {3.787688317966546*^9, 3.787688345596579*^9}, 
   3.787688469649768*^9, 3.787689339272832*^9, 3.7876929796214867`*^9, 
   3.787693313442197*^9, 3.7876934165407267`*^9, {3.7876942740595913`*^9, 
   3.7876942874434757`*^9}, 3.788278153562958*^9},
 CellLabel->
  "Out[655]=",ExpressionUUID->"e51f31a4-6752-4e02-8617-2510a7ceb448"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
3l5aiMdel7nv/PuHh0/u3NlR7+Ox/wHF/cbg
          "]]}, 
        Annotation[#, "Charting`Private`Tag$111712#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
xRppgv0PZyGfEw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$111712#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.376374321385332*^-8}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {2.376374321385332*^-8, 113.43445311046614`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.787687756817855*^9, 3.787687779325828*^9}, {3.787688263194685*^9, 
   3.787688285813486*^9}, {3.787688317966546*^9, 3.787688345596579*^9}, 
   3.787688469649768*^9, 3.787689339272832*^9, 3.7876929796214867`*^9, 
   3.787693313442197*^9, 3.7876934165407267`*^9, {3.7876942740595913`*^9, 
   3.7876942874434757`*^9}, 3.7882781537001*^9},
 CellLabel->
  "Out[656]=",ExpressionUUID->"1b540646-b828-4fa3-82ef-e6dd679561da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_Slow_high_time_\
series.csv\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"s11", "[", "t", "]"}], "+", 
          RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
        RowBox[{"qTar", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"S1", "[", "t", "]"}], "/.", 
        RowBox[{"qFlux", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i11", "[", "t", "]"}], "+", 
          RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", 
        RowBox[{"qTar", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"I1", "[", "t", "]"}], "/.", 
        RowBox[{"qFlux", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "60", ",", ".25"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7876875432462473`*^9, 3.787687627699267*^9}, {
  3.787687785537833*^9, 3.787687785823353*^9}, {3.78768782166111*^9, 
  3.787687835912408*^9}, {3.787693380478286*^9, 3.787693381987926*^9}, {
  3.787694318779479*^9, 3.787694322876648*^9}},
 CellLabel->
  "In[657]:=",ExpressionUUID->"89bc794e-12be-4f4b-96ce-88f307ca718f"],

Cell[BoxData["\<\"/Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_\
Slow_high_time_series.csv\"\>"], "Output",
 CellChangeTimes->{3.787693313612005*^9, 3.787693416686492*^9, 
  3.787694326439739*^9, 3.7882781537589006`*^9},
 CellLabel->
  "Out[657]=",ExpressionUUID->"3c1c2a2b-ffeb-4713-970e-ba89395059e7"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(Lower Right) Low Freq Travel; Low L2 \[CapitalBeta]", "Title",
 CellChangeTimes->{{3.787685997797535*^9, 3.7876860072755613`*^9}, {
  3.787686699045342*^9, 3.787686710308111*^9}, {3.7876876483100977`*^9, 
  3.787687650245266*^9}, {3.787687850761251*^9, 3.787687859468637*^9}, {
  3.787688477749496*^9, 
  3.7876884781361856`*^9}},ExpressionUUID->"6e8613c9-9edb-4a97-aa51-\
989f4f1cfc68"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"poppars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "500."}], ",", 
     RowBox[{"n2", "\[Rule]", "500."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sirpars", "=", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", "\[Rule]", "1."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"High", " ", "Frequency", " ", "Travel"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tarpars", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]1", "\[Rule]", 
      RowBox[{"1", "/", "100"}]}], ",", " ", 
     RowBox[{"\[Tau]12", " ", "\[Rule]", 
      RowBox[{"10", "/", "100"}]}], ",", 
     RowBox[{"\[Phi]2", "\[Rule]", 
      RowBox[{"1", "/", "100"}]}], ",", 
     RowBox[{"\[Tau]21", " ", "\[Rule]", 
      RowBox[{"10", "/", "100"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.78768671657576*^9, 3.787686722340773*^9}, {
  3.7876884806597843`*^9, 3.787688486278829*^9}, {3.787689190028816*^9, 
  3.787689194733506*^9}},
 CellLabel->
  "In[658]:=",ExpressionUUID->"14347345-349e-455d-9d38-15a77e4c8fe6"],

Cell[CellGroupData[{

Cell["\<\
First : solve for residual population size as a function of \[Beta]\
\>", "Subtitle",
 CellChangeTimes->{{3.787686741572324*^9, 3.78768677338752*^9}, {
  3.7876869165364122`*^9, 
  3.7876869197295103`*^9}},ExpressionUUID->"5bc2963e-84a1-49d5-b14d-\
1997e8d4bf77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datFastLow", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qFlux", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qTar", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n1", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"n2", "-", "1"}]}], ",", 
                   RowBox[{
                    RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], 
                  "}"}]}], "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}],
             "/.", "tarpars"}], "/.", "fluxpars"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
            RowBox[{"\[Beta]2", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s11", "[", "t", "]"}], "+", 
            RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
          RowBox[{"qTar", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"S1", "[", "t", "]"}], "/.", 
          RowBox[{"qFlux", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"t", "\[Rule]", "10000"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7876867580867558`*^9, 3.787686759312018*^9}, {
  3.787686933451592*^9, 3.787686944511117*^9}, {3.7876869934541273`*^9, 
  3.7876869970670443`*^9}, {3.787687091133718*^9, 3.78768709866328*^9}, {
  3.787687129226465*^9, 3.787687129363596*^9}, {3.787687664954625*^9, 
  3.7876877163817873`*^9}},
 CellLabel->
  "In[661]:=",ExpressionUUID->"bbd28f52-af2f-43d0-b520-809745f7316a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Residual", " ", "population", " ", "size"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"datFastLow", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"datFastLow", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.787687167102415*^9, 3.787687175399469*^9}, {
  3.787687718849916*^9, 3.787687720193314*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"052a6474-c3fc-4116-b1e3-460118fd8951"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
GAZS9rl3zhtP9BiGRqvkrOX7PdFjGIpauzpSlD3x83IYYgVEjsv3QI9haAiv
fnHwpAd6DEOPnUqKwNADPUZAOUUs9DLNAz1GoGzWrvikQnf0GIGe2ORZDwLd
0WMEzDMG4yRWu6PHCNiOn4tPaeKixwjURcc1alzhosco1AVlHGe4cdFjFA6b
QAZ/KRc9RkHeVOBSxndDj1F41HtB4V26G3qMwqjGUFIF1w09RqGxXmZr3Qo3
9BiFkk9rp9W3uqLHGJwd96v5fNsVPcZAvs+qqDTYFT3G4OrswuabGq7oMQbX
N/2RuY/lih5jEKSV67y0dCd6jMGB6t9P3zq1Ez3GYXOmWre06070GAfxvTGK
9qt3osc41C1+q1QjcEGPcRhqkNLLOOKCHuPA/l39LnOFC3qMg/THyNs9T53R
YwKO5Hhn+rk6o8cErGjwU3GnO6PHBMw7Fz2j6vIO9JiAGKdh1Qe6O9BjAn71
0vxLrNUJPSbAt1Cs/NFxJ/SgkZVNjr3vfnPCeWhEVutn1qav29GHRsxzMi/0
xm/H+Wgk8mHX1WHV7ehFIzpa3Ce6fEcyNa4njURYerDe/+GIfjQide5MdrKG
I34+0EjaXr5UYpsDetJIcsXxh7kXHLAPGln3T6rahJkD+tII7dV8nUCmA/ZD
I6kx+Xn0Qnv0phGVifLAm7vtsS86if49LdlHzh796cQxdlRTrc4O+6MT1ZBH
eTNT7HAf6OSniYlpxzY77JNOaDJjB96K2eF+0Mm/f/t/vllii/3SCStAwIyJ
scV9oZPYqp+5JsQW+6aTD7pW+ZwJG9wfOtm2Q3I057EN9k8netnHorWibXCf
6KSnQ9wqj9igB4PIHNK/wGbaoAeDDPzgn1F7bo0ewjzambzliDV6MIgq7VDn
UjNr9GCQ9lebl5RLWuP+MUiAw5NrFrVW6MEg9oEBy89ftkIPBilX7VfL8bVC
Dwaxe5CXFqtqhR4Mcq46Vm7hmCV6MMjXAt9LgS8s0YNBNi9jjx1IskQPBiko
tVU1crZEDya5oWlr/ELREj2YpO12+vb+AQv0YJJj9+USKkos0INJ2lVK2C4n
LdCDScRHpaSSuRbowSRzbjAY/qoW6MEkCd6HFNqZFujBJFmWOwXilebowSTX
MtL+Lc0yRw8mMe8c0FIMN0cPJnFzzK5YamKOHkziEPdc7vYSc/RgkcSioMzM
JjP0YJHuBJP5c/40Qw8WMQlfvODyZjP0YJGjY/vWbmvahh4sklt6cUDi5Db0
YBHtyADZti3b0INFOkz/CakUmKIHi0SeGSx9fckUPVjEw+6WzEsLU/RgkXZJ
G7NXTFP0YBG6VWrc63wT9GCR++Zr+S98TdCDRZb7+J58tMQEPUTI/PQPzVcr
jdFDhOierF5/8KgxeoiQxENefGMdY/QQIXOML3DHR43QQ4TUjUTonc43Qg8R
MvgkdOmcQCP0ECGlC7XP+K82Qg8RokUP5mY1G6KHCFGXUNYryDREDxGS1fBN
4iLXED1EiC+PdcNO1hA9RMhi2vMhfr0BerBJa/Gjsd8uG6AHm+xqyHtsyzVA
DzbR/GBtqSlvgB5sws0eqmlq0kcPNkm9ueOw1U199GCTjGD3pKg9+ujBJo1Z
tVu56/XRg002sEzEGMN66MEm5/3MOHZFeujBJvKcdddcDuuhB5vkrjp/RsZM
Dz3YRFJSaXPMXD30YJOEa74yp/m66MEh5roGL2xu6KIHh1w9+vXbwyBd9OCQ
g7sMJF+ALnpwyCYVT/HgX3TRg0PmZRckFFfroAeHHKhS3JZ7RQc9OMSyplFh
014d9OCQW+n3pzsRHfTgkKqOI5elZ+qgB4fM2NXY4flFGz04RNFHvcEoRxs9
OGRUzj28iKeNHqIk5n7UXyVm2uR/jouYQQ==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
4ZL/ATuXhSA=
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.}, {0, 498.98410560820594`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.787687152838627*^9, 3.7876876736193542`*^9, 3.787687720716815*^9, 
   3.787688494975453*^9, 3.787688562178344*^9, 3.787689207944354*^9, {
   3.78768934792148*^9, 3.787689364789432*^9}, 3.78769294862181*^9, 
   3.7876929888018503`*^9, 3.787693283295787*^9, 3.787693418848712*^9, 
   3.788278156380662*^9},
 CellLabel->
  "Out[662]=",ExpressionUUID->"48766309-136a-407a-b977-6676564c79fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_Slow_low.csv\>\
\"", ",", "datFastLow"}], "]"}]], "Input",
 CellChangeTimes->{{3.787687015313569*^9, 3.787687051835745*^9}, {
  3.787687108391959*^9, 3.787687141828972*^9}, {3.787687732983377*^9, 
  3.7876877379029837`*^9}, {3.787692950847999*^9, 3.78769295184296*^9}},
 CellLabel->
  "In[663]:=",ExpressionUUID->"5c0ab757-ecd3-4bc3-b4f0-6742647af699"],

Cell[BoxData["\<\"/Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_\
Slow_low.csv\"\>"], "Output",
 CellChangeTimes->{{3.787687018033574*^9, 3.787687052130486*^9}, 
   3.787687145202959*^9, 3.787687738266717*^9, 3.787689210535613*^9, 
   3.787689365569413*^9, 3.787692954237587*^9, 3.787692994609791*^9, 
   3.787693283349043*^9, 3.787693418869751*^9, 3.788278156400268*^9},
 CellLabel->
  "Out[663]=",ExpressionUUID->"1716ccdc-c675-4e0f-bcca-2e40035ecf73"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second : show one archetypal set of curves", "Subtitle",
 CellChangeTimes->{{3.787686754179069*^9, 3.7876867574938498`*^9}, {
  3.7876869256702967`*^9, 
  3.7876869303956423`*^9}},ExpressionUUID->"718f96ac-1bba-4611-8633-\
48e07cfdfd16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFlux", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirFlux", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"S1", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"S2", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"I2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"R2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
        RowBox[{"\[Beta]2", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"stvec", ",", "itvec", ",", "rtvec"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qTar", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"sirTar", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"s11", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n1", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"s22", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"n2", "-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"s21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"i11", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"i22", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"i21", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"r11", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r12", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r22", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"r21", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
            "}"}], "]"}], "/.", "poppars"}], "/.", "sirpars"}], "/.", 
        "tarpars"}], "/.", "fluxpars"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[Rule]", "i"}], ",", 
        RowBox[{"\[Beta]2", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "TarVars", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7876872854250183`*^9, 3.7876873904335823`*^9}, {
  3.787687450398038*^9, 3.787687456758687*^9}, {3.787687751643998*^9, 
  3.787687753544582*^9}, {3.787688569576003*^9, 3.78768857135161*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"51c3c755-24c5-4de7-9da0-bdc5a4e0d29b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"s11", "[", "t", "]"}], "+", 
        RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"S1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s22", "[", "t", "]"}], "+", 
         RowBox[{"s21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
      RowBox[{
       RowBox[{"S2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i11", "[", "t", "]"}], "+", 
        RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"I1", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 1\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i22", "[", "t", "]"}], "+", 
        RowBox[{"i21", "[", "t", "]"}]}], ")"}], "/.", "qTar"}], ",", 
     RowBox[{
      RowBox[{"I2", "[", "t", "]"}], "/.", "qFlux"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Location 2\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TaR\>\"", ",", "\"\<Flux\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.787687768491724*^9, 3.7876877788680477`*^9}, {
  3.787694374525769*^9, 3.787694374980248*^9}},
 CellLabel->
  "In[667]:=",ExpressionUUID->"8d99b8d8-3ace-4645-8186-40b0a14caa18"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$133611#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$133611#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 112.85644253591184`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 112.85644253591184`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {112.85644253591184`, 498.9999959265163}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.787687756817855*^9, 3.787687779325828*^9}, 3.787688575512231*^9, 
   3.787689213185861*^9, 3.78768936848316*^9, 3.787692960128334*^9, 
   3.7876929981690807`*^9, 3.787693283490337*^9, 3.78769341897966*^9, 
   3.787694375395056*^9, 3.7876948272725897`*^9, 3.788278156615136*^9},
 CellLabel->
  "Out[667]=",ExpressionUUID->"a364bf01-e35f-4010-ae93-cd16375ad3f0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxF1nc41W8bAHCErCRbSVZWsvc697EjRFaiJNllb+ccJAmpkGSVn1GkyCpE
UQkhocgmiZSisjLe53u4rvefc67P9ez7fsZXwMnb4hwVBQUFI/rB/gWvrefl
8DVqBf03t7EpTYIndOIHzrvdwflKpTc1IjeGPMoXcyvFlaVruMcgN8v4utK6
PceVBmoYMSG3JHYb/nV9hwPP980HpUjQqnax5rvrKI5uTIAmXJIEDzTYiIql
Y7hmo/4wQ+T5Qec7AcXjuAKYJXAiE/fSTSzc/Yyj+/qDo/IQCW7dMnX9efUr
Lq35/dwfCRK03Rj0nXb9iZucNd4bJ06CuPS01hTZXzgRXa/ik8iSbjg7+dJf
uMxdgq7SyH47b4T7Fc/j6l4rG/eJkWBDT6Hh193fODqK5UVRZO6XYTo/ri7h
TK91SzWLkKAuWag3kXEZ9/A7K8Nt5FNO7c6SV5ZxFHlqKZ7I+ZR8sZ4xKzhq
75kru5FlobFlJuwfLuLoh1/mB0lgVL/TdMp1EyfdrybyRAiVbzr95fyFXP5Z
Kxw5kf90p5AGBTSMGAtoIQc41QZavqKA+5GRa88FSaA75fOqqpcSxq670pUL
kEDlMh93JzcVFMjmeXogS4q1e07ZU8HsvbxNfmQ2D1E2ri9UcGcs7GwcPwkm
fgyfCfm7Ax6xdhZpHiDBx6SEquuq1KBTJib4hQ/FT1qVvohADUkaFazxyOW+
qWWfaGhgRILx79v9JChk1aZeOEIDF4u5KtyQMyp+2jAk0YDecFEkFXLUX6NN
NU5aGNLuGZDkRfNPW7Y4bkcLmQ3XpOv3kcBNubDQM4cWpFQFhIyQj4VSmmaJ
7IRHPje8T+wlAf/6k6x1JTpIfb5hasRNAvacc784wukgKuuc0TMuEtDh2HSl
ntNBljrPnDjyz8gLs6cM6CGtp/DBEgdanwAvLjiBHoxXWGNskD82tSZfe0cP
CZwFUeXsJGigPqj2woYBvA2rXE6wofUVdF/tz2SAMyXejAWsaH36keO/Rhng
9ttis9k9JEiKG4wTcGOEiTRxWVcWEjgwJfdFhzBB4YDyE+5daP4PcYcynzEB
14DiU0UmlB/TH8QKil1Ab8prcZQR5eO6ochk3C64+WD3x3P0JFhj2wzQu80M
JaTwQX0aEvyqLGlxGGYGV81/ToepSTBpZccbJLAbQkeeZTPtIMHbW1UvC4t2
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
8vn2fijzWdrctAWxr1v+HzasYAg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$133692#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwl1Xc81f8XB3DZSd+UXZIkIXtl35e9954tWffasrlGIkpoLyolSikhKZLK
Cu0hKSoqZCcj+X0+9/eP+3g+7nmf93kf5/2+G3eFOuxhZmJiukL8IT/FDy8W
F4o+1HO6OPpvSYGOO5zSG4IDiigHcuotHxJ+GHvjklRABcVSIWJ/GuFmxXB/
9oAHlINKU+mshFsPvjT77f+MQuEufMkqT8f4Pu7vsVdfUN6dG334SI6OpEcV
0n/Ov6IUaPxbm0b4OGZuTB16Rxlr0mv5K0tHm1b63RH/z5R3OnyyP7bScU2H
N1mtoo9ixcmee57wRI9vUdTVforJVupzV8LJazm/TJ7/Sun/HlfRJEPHiRM2
/mOHvlOiraq6M6Xp+KR+Pkv+wA9KRN+CoRphibcTZcH7flJurtdc6JOi4ybf
sZHh+GFKddYNZhXC7fk94T/8xygfz5iYPpCkI+vk8bYjSuMUjk11w16EZQMo
HioV45RwKTet2c10RHDkJ0RcnaBM/6eavIXwP2PVhvHzU5QhmUuyfpvouMDf
a5MnOk2pm+y4PipOh9FAxmeFs9MU8TO2G6MI5+x7xxR64jfFht0vfu9GOoQe
xRv+OvSHMvvo+mbbDXTcK9j0+uCKWUriWpGA+6J0+Ozq8JU9MEup3N/btpnw
pWWi+6n75ihJOyKjR0ToUMLD1p/xC5Rtv/8omayl4/WqIPcDswuUDnZnmXxh
OmI/rxmSiv5L0amttnonREdDsu+KgPBFivC6PTlOgnRY1HPYDPovUZwTWYRX
8RH5lnb9FhhfoghSpDJFeOk4KLa9a5MOE9hZ6ZPia+iI2lW31+kxE25vmZgX
5iHONxj2uPr1MrhMfNhybQUdGpmiQl1CzLhYodobz0X0T6qDOujFjI++wwP6
y+ngDdrCKzjAjMudbizV7HR8+dW7M/Y3C2JM6tqlltHxNjenOk+TFY8XTMPK
l5LRrqC5vCyJFbZuj6M2/0tGZfjRm91sbFAei9g3M5+M1N8WS1oC7OBAyQT3
dDKijs86OHqwI05C/5HKZDICtpWUUAvZ4dD79Kr1eDLs4pbZnJXkgGGkXrr7
SDLEFu+cXVTnRDPXVfvWr8ngK9wzzp/ACb8jxkPJ/cngpPAayT/gRNUGiYXN
n5MxlhIy7GO6HMdyX4gafUhGA+tmrUZXLkjIqrvXPCPqu/zy0PszXOj6+rh4
sCMZJSYp/eOfuXAs5XcMa3sycrN6sjYGrAAf53UpjsfJ8OYueJcWy42rQ6JZ
6+8Q9V2nbD1znxunh+79vnE7GUY2v5JvM63E2NS9WzI3kyGbZyb5LWslqLsO
BH4uTcZf3qUo41P/4ep48YDSqWSMV5W3evf+B9fj3IPLjyXjm7OHSPTGVVi6
NNvampeMpyeqH5WUrULsiq+xc5nJ6FypvpzVmwfbIzbbrt2bjJeWa052JfJA
cbPMnYiwZLw/MCp56iwPvPVqt1VSiXxsV4zkP/LA0lxsw8BOYv9FwRQ3z9V4
WBrUx2OdDGad6f82JazGbFVC0ElTon/xz8/9Or0aStwjTqwGyeCdybqX9mE1
nGZ8FjPVkyEzOjdT7r4GeSfODKmJJkNR9m1GTNwabOU5ceOdYDLUgyr5DE6t
QVhqtq/n6mQYDAYpv3u/Bk/T+Q9wsCbD/VNP8DI3Xggpd+YMf09CVlf9N2cX
Pri+nF1xqywJudynI8Wi+cBVumPR+UISjlpEMw8f44PUB/Oi7pNJKGqWF0t5
wwceu0dnEjOTUNNQ5HnViR9HTpb5KexOwsCN1Jf/HARQvv6egRFfEoZGvHe2
RQig7bsG9/PlSRiX0Ro/UiCAV6rtl7SWEvG3ZHKl9EsBfD4Z2Fr+MxF8RbvN
He0F0Ry4vmR5fSIMDhs3XrEVgnLBBpFu70SkWFSVvQwRQvR2Hq8y+0Q0sG06
snhICJx55pnexonQSmTyc+wQgpFR65pI2USoBN5bsWQmjGfW/dnecwmQMFRy
dTFYi4ObjvUdzE0A+x+RUVY1EYh96/xVWhaPPQrzK5VWiuF+z7pAqcZYWPVk
XhYSFcOGx3w8ARWxUM3k12VSEIPoAT7Za4WxYP2sSHtmJ4Zb8avf6ybF4mKu
f3vwUTHkeb88f1ErFp9/vd5/dd1G1JrdM3teEwP38oqlTTLikO4/Xki9Ew24
6Z5YoS2OZVmeqj+vREOK9an8lKU4bN2fzu89GY1Zz0HvpmBxHKnPmamPi8bx
Fevv77glDjWXQNmVutF4FZQde05jE9zqNXKfNe+FtfSeCQFTCTxViHnx8HsU
5nP23ut1kUByacSUfU8USkczMi75ScA3KT1jsisKrFUlwsr7JWCQP867pyYK
dXo/9K2fSKD07wFVnv1RkHSiFqQbboZwH8tLulQUmOjhKuMUSbRZR+y9EReJ
G/2pizW2kgg4EctkGRoJT6OClqTtkpBR+pj+xzcSNctve66gS0Lh+grjFLtI
0I5Op0s2SMJHZ4e3rVQkustiXnvpbIHeup0X3n+IQOXrpL1tGlLQY1E/q2QZ
gdIM311fzKXQHTm3eVE/AoXqlrYLHlLoNFMw7daIQPZJIWm5JClssSiYa5KM
wG6v2x/zHkph8cWJeneWCPB9+2HoZiGNDGktv9QH4eA69kwx3FMaUayf1lnd
CQeTSc36bJo0vIp/s0tWhGPkSvqfe7nE9587N3EUheMJVfTahlfSyPvtw5JI
D0f0lOOa754yiMOrBhHDcNCIKV6iyaCrsN7iuXY4djlvHBFKloHue/+SfNVw
2NwZfWJxXgbhNcVRupLh2JJwIO7GNxko86VxbOMKx3vmB317g7dCNqFxrvB1
GLTXyFSw0mXR1Ls97HpEGLqWebR1HpZFluWh1dzBYdgxceDr8fOy2O0XGL/X
Pwz7nv8UlG6SxTuOAbcALyI+tyzFmk0OrOnhBh0mRPwKaYfjOXIoieSZS1wf
hsl5N9r2s3JgK9DJoQsR64ey9ktdl0OTwb8nObxhKGv7UVfXJQexrSLjjcuJ
+MzSTZ9Xy0O1yHOvxq9Q7GOV+r3lpDwsLWbMeS6FQmDaddVEqTwEJTe0a50J
RenXTOm6u/K45ZOfE10Qis6m795WPfLgDRFw2phKxKdeaQ4TVcCW3R1F2B6K
skXJk3cvKaB2XdjJHNFQ+C8UnLvspghFLbnIrNIQHLUZeRS3QxHpUawbhS6G
oPGC8ZB1gCLYVj6ouX0mBEJms+ozMYpIdRsw+e9wCFqPej83OaGIU5z0RzbR
IZCWl2L58UYRj784Zg2bhGB4R32AjKMSum3kClaOB0OoSuDwPw8l4t6w6E0P
BcOII6z65S4l5N+jh38bCMbZ6+LMCRFKiP9ctbW/JxhW85lnnuYrIRxmohat
wbh+xKGL9lwJxfzz+U8vBiO0+btKhbUyMuKYF0R9gtGIcqqsizKGt9nPNroH
g+deWHGZjzJK8mK+UJ2DcbNibs2lUGWYvGrb9tEqGJMnV0yezFfGo7MfODfr
BCOaqnAz7Y0yys/Sw8xEgtE8MPV9qVcZnGm+puFCwRDcUbshaVAZvFbxTBf5
glHrpH845o8y7rzc0712ZTDmdB1DaMIqGPLQjwn4R0MiT4ysi7cKzEzbjP2+
0NCRre37ao8KPN2Sxdg/07CejemsXYgKBP+eHCvvoaFhLmuFJV0FO3duV171
hgamr6eHKBdUwBVr3C7RSkN6dUOp9IAKEiu5L2ZV0JDtwb55kaaKgV7fkg9p
NOgpcs/8jFLFilP+PLQUGibY1rS8TVSFoOAzBeZkGtxurQ+8eVAVkdYPgnTi
aNjMqXZ9d7kq7jjv6f4eSkNj9W619mFVcOhkS/P60BCVE8h+Z0oVtkNfeoY9
adiyM/Rd8YIqelk877e604jfr4S4pBVqeKL4+HuuMw2euwvqFbeqQft9HZeV
NQ0zPA+NTwSpYdV8UG+aLg1XB5sF9kWo4eI10dentWnwvt/xPSxeDb9K7FNq
NGl47P/+gEW2Gl4fW/o4q0ZDfsNY52KZGtDu8qVUngZZmqiL7081fH1aJX9T
jIbdLQl+SgHq2Js58UaegwZfHUmbmVB1nDD3lq9lo8Hv1nO1ezHqkF076GjE
SkPAmc1sxpnq2Ci4OOG7jIaQ0GfFbiXq8HjFMtK8QEW84KZ++jd15LiK+S2f
oCLxYGer0Yg6OhR0FOvHqEhaFntz+bQ6opkuxESOUpEy3EE/wrINcllT1O/D
VOx/EC16RXwbbNYnB40MUlHg3+7ZtWMbqPSSRr9eKo5+jDI8ErAN6vzxuvhI
xTH7DVvdwrbhg9aO8XU9VJzUjprvp29D1MX+793vqShcJXrqd+E2yH6UvBr6
moqrd8LfivRuQ2DTwo9/T6l4yCFsT3XXgHXgZGv+fSoGi+Utundq4NIR60/H
71HBDSND0yAN7M/0Zyqso8ItNlRtU4IGNEfvu1fWUjH244lwz1kNONdb/5ys
omJ9e8QXiz4N8L8XmX52nQoDv6ye2h8aSNuj/GOqnIoA5sLXkhMaqKNOlgoT
rtJqa2Zm1oRFAHdq0FUqLK9tuFa3SRN2Zd2bNl6hIu5gR6SMvybkGsu2fD5P
nEfqC+1kqCamvEPVRQk/fvxnD3usJuzjbLp9iqjgWRR3+5KliaPXD3V9O0fF
leA4ndNXNRFy6NUGljNUvLGRZOMa1USR0mTx/mNUKK1OOf4zSgt3hqxTjuZQ
Ucf5TqolUQsR20NFuQgbMMnfu7RPC38avzxNyabCaazn8/ajWnhWbGUVfoCK
6M5t0m9va0G21vyaTyYV9w+M3Wua1EJp/k+ZwHQqjFNNbM7Pa0Hi1J5no2lU
dMWe60ti1sbqOV7fvYQ/+1uyaa7Rhmf+U5eMVCqYTa7YVChpw6OTSeEmnQoz
5u39Z8K0cUEuR0wxkYoXc9WRcbHakLz2b+pRAhUeE9zsrinaSDk1ccaNMLWv
TmZNnjb4m27u2hdPRW6DQFRWhTY612YWDcRS8Tq+i33vqDY023WSO/dSsWNK
V9aGpoP6lT2HpMKoWLmG6fnrKB18eFo80xFK9EOxKdIzSQfiFvfFIwjzhZjc
C8glvi/QbGgIoaL1h41F+k0dHFD8+WZHMBWKn7YH1E7rEPe9W7kliIrevxu5
KYs6MPH2548hnL3uW8UTNl1w7B27uIXwN7eAPy8FdFFzy+tudiAxv6/C9v/S
0IX7tivlbgFUMLWlXhJP0gXtz6bENX5UXP9uaFaWoQu9J4VBHXuI87Ozjyjk
6qJDt2F0P+Eqw2wV3SJd5Px4XrnoS8xbQ0GT60NdOK/U5pzcTcXz28V9B9n0
YDI31j+9k4oLhU9E/hzSw/0JywxPHyrOesm+cz6uh1duEz8lCZ9ceyS/qlAP
YZ4C9ZPeRD+P72CPqNCD3AeVazmE43MXxkae6+H4tc2HmryocEhWevSFl4LP
nSvLDD2psNY5maQvQsHCxicH+Qmbzf/bdl6Cgr52zxffPajQi+4o91ajwMv8
c9whwltD/I+/d6HA2gHKve5UsPqcC+w6RcERb48zh9yoWFrHKiF3kQKfhjil
PYTnu4M+5VylwHsxQUSX8LizhqP5PQpe1+4a/eVKxUfrVzqPP1JQvMUt1JHw
h0JWzt5VwMEffI5yLlTcztXqeekAlM17QMiJil1n/mOrcwHUWVmtFhypWFP6
Rf6CB6Cgk5H3iXDYw+y00F1AaIB302XCstMfpLkjAPvlqfXqhC+5J8Qa5wPG
6Z8rdzlQ4ehne1H2GOHBTGFzwsyRmzp4TwGsnXGVCoR3HHy64ct54MdiXdyi
PRUiD9a1JN8EXN5qOJ4hfFTiPn/tMyDgos+nz3ZUGCrlUYpeAc2NPTpthCd1
fQP3vwMyWttaKgnbuXLXO30GKvjLd+4nzJ3t5TsxCpgrRZxVILxv7G+lzH/6
CG4yGzhgS0VUna7dOSt9qIQunfC0oaLao4W5204fj0KTqWaEZ+btqvmc9XEr
6q2/GuE4bd+1B731weR5qXsV4eT72d/iQ/RRUHzlZLM1FZkN72Ld8oj4xzp6
2oRbfXZuPXpUH5a8B2NlCHMtDfU+O6mPN7yFb4UJH6T8MzC9oA89jva/s1ZU
5DVKrFSv1EetBevPWsKnm8Iv8L7WJ+ZqkIVCuGfXgqPte6LeaSU3RcIiLBns
OR/1se5X+9ONhAsNT1KZB/TBHfZsFRvh4scNahO/9THw9h5LpyUV5c0r2rsE
DTA07bVnF+EH7ZcnD3gaYNptOOSCBRWVQs/Dk7YbYLY5dvo44Ut+8+Nhuw2w
R2ck9yDhbGbbMVeqAcr6PiyLJeykNTu8OcEAn9/J99gSHiqzGHh42gDNMx80
WAh//BPlW11oADfLprk5cyqeGRd9Lb1ogN3r1neOE67qn+o/fNUAZgGnrn4i
TBc+98m7zgBz1hd17hHmOzD2bq7bAKebo87FEGZ/J+z6q9cAY1drokIJz0kY
ve3rN8AKZX0vf8KfGk++bvlpAC3+m56uhMtm9V8cmzPA5JUoIQ3CegFH25WE
DZE23Rj814yKQFPN+kA3Q6j8Ubp/mPColPCTW16GYBe69SGLcATXXMfcDkM0
VKzkTCOc2Fn78UCgIdZ9/5YbRTjPUeNvWbwhrEcqzT0I12zfpj101hCH+Za7
SxHW1hc0VL5giI1vuFzFCTeK/7GIv2yI+UL2XSKE2wZqPLhuGGK7aVohD+GP
VPV4mQeGWHm3+MacKXFfYtXuBvUb4k2eN18X4Ux3/oeVA4a4InrkTSthbu3f
rfM/DfEkSOTiI8L8/6reZ08agku7y+suYal9qrNXWYxw9dZWl8uEbfNUtg1v
NoLIlWojOuGzpUrV1CAjtM/tjNYi3Nq9u7UoxAgn/sQcUCc8zXW851WEEXxG
vlxSJmwZPL9MJ8EIrlah0zKE55Ue2XAfNILKraPT6wi733P6UX7dCEfmEoKW
TIj7NrJ/oe+WERbzF+cXCN9cf/c//hoj2Iw+LZglzJmyXi2pwQhnAte8nyBc
azSYav3MCJnXCu98IyzQFbNudNwI13NK6p8SNlgqkxf/bYS1anP3WgmHKH7U
d5kzgqXqzcYnhJsLiCd/mTG6LPl6HxDe67q8OneNMbxPq++oIvy677SNgqox
WnJu7isknD9VnxoWY4zqowcnosl8L/N2eiUYI3Eo9WkUYatbu/XN6MYwqawr
iyDMHrp8mVgmEe/+JiKEcOKQU8qz48YocWpW9yPs1z+cLF9jDBsuWrILYaPG
Bp+1dcb49+jRSSfCG4vy9dgbjLFw/XONA+GPXtv+9T4xxjN1k382hO3fpyUd
emOMFMHFWlPCOs+EE0emjbFOve6dJmHhGyOe72eNEdg/IqNBeObgA+3Hf40R
whKZqk74lsWehTOsJmCW2q6hQliy+Wa8JZ8JNrgsdsgSXl1vGndVxQS7qQ9y
xAgPXt0bHRBhgi/2a9S5CLus//epNNoEjtvannISfnJ4v+nPeBPMDub4chC+
FHVCKCjdBEYvhItYCe/Su1tHPWoCbs7CbUvGxP178fdfSI0JzAV+jU8TtjHK
8K+oM0ELS2DVFOH6mpXPxxpMMDV8KH6S8NkzohfCWkwgXnn3v3HCHntgGPHe
BFs55pyHCb+ZTc/cO2+CYPXjnl8IG1G5x6v/meD+OR7TfsJVvUfdZphN0Tfz
SbWPcEHTZemYFaZ49XuX4CfCdgdbnsaKmGJfQOyfbsIdG1bwJOqZYsA+b8NL
wo9NCk6mpZmCM2Jg/BHhAb97nfH7TdEU0raVNHvmN+bIbFMY/dQIaCJs1qIe
vLvAFIWfbgw0kvlMe/SNLpqiKqFksp7wKzOJYbYmU1zhMHCoJTwdYC3274kp
fldmXLpjTL5n0c4zbaZYNSs5W0PYpa31weALU5S8jS6uJvzBPPhoS78pgo8v
LL9N+ItFje6BZWZ4WWzMd4MwC/VzRCqbGZZWiCZcJyyRw1kat9wMyi9kvpYT
9nvqsSZotRlWzL+ruUZ4yHJp0GKjGbzi9GhlhCetzPK49c3Q1iG98jLhZbYf
vhxOMYPniwXBc4RbG5w3Re0zw71Gp+KzhPPkX+x2yzKDztQRBdJi/7V+E8sz
w5cH9RZnCKOzevBWEbHeMifnFOEUy/yhVw1m+J6fqXac7Nc97q21TWYYrgjv
OkaYZ2sW9WyzGRpttgSQPs9FH/HtMkPt7Oi5o4Qb22ijv3uJ9buerDlCmMnM
bFJw0QwJtZpieWR9dx4p/2Uyh7fl5ieHyfq2UCL7WM0hwv44iLQYh/p0Kbc5
pFfw1+aS9TVvmtEUMcc+vy8eh8j6jJbmPLXNcWeVUGM2mV+/Ztn5OHO0n/Bi
2k/On9H39vdJ5ggsptzOIOfLVOjo6jRzdLxu9iMdYBMvmZ5tjizL+8/2EX7h
qWfpd8Ycp9+Kl6UTvhjdfFS23hyTzl2xqYT/xv3x3vPQHG9Gd6iRdkmS2lL4
xByP5PdNphDm2pd9d1WXOa60xISQjsy3+TT5yRws7hM0Ojnv5W+33GWywKE3
69OTCBdWcExMsFogTkbajPRspUadzHILPJerXEm6/O5pq7OrLRCRpnk6kTB/
i084XdwC1CnmuwmEB/sH64yNLOAQeZ07nnCW4B/rl5kWeOz+hC2G8NHW1q9N
ORZYNL3dE024KO503O3DFjDk/32LdE2P7uWjJyxw+Wf4dtIDRfv+ulyxwP4m
SsNewgZSa671NFvgV3xJdhR5/7u/oqOd2L8mew9p9+zqt/e7LHDL8C5Ih424
MRe+tYD++OSfSHK/m0XuOwYtoPahJZD0Xw05zgE2S0wmRXhEEOYc+nfuzXJL
CD+r0iTNe+a5SvNKS6T7agiTllmM3H6F3xJeqcu6w8n9HtbVBG62RGNmrifp
GnOzPaNGltg1spUWRu7vsbvpT7olWH3VakMI/1c01KeTZYlIi9NnSZd/DV9K
PWiJ/S+0Ukl/p6XocB8j8g3LWpL2oZ+rESuxRFpMa38wYatL766at1pit0S0
MOmhHz5tuR2WiGLzWUY6S27w+6vnlnigEP+TRvhRzbSET7clJLKt60hrta0u
ihiyhGqSow9pqVHLI2e4rWDVEV1BJdys/OpWH48VzrkFnybtG+PxfDO/FS74
5meQLmIKXHlzvRXSjuzwIi3Auz/zsbwVeiJWc5Nm1WhM+GVnhdDAkMggwv2p
qr6UY1bQHi3cHkhYUuC/3LBTVgib67clHXT1+50L56xwzccEpKdfnl7BWmKF
ZZoRG0lzSiy73VpjhSlN24EAwvLNncsc3lth9uVgBOlIjytb0z9aYXP1xj2k
a0dTnKv6rHBxNs6VtL6gapnATyu4X07VIe0UcNquZ84KqRcHOUjHc/kX+a6z
xuP8Z8X+hB8Uou3YBmtkPGg6QZpVZe1U8yZrqHk8yyF9yLPTRFrWGp46qlGk
z5erjP7SsUZe/hYT0i02TLoxPtYQ7cse9SPf4yOnPhy4YI3i1X9sSXO94X0R
cZnIf9bTlDSTYG6LZ5k1zKRe6JH+dTqtSu6WNZaXjsqRbr5IzX3RaI2k22Pc
pGMrdQ2E+6xRt2Oicw/hkOk7GszfrLHk6tpM2lddWWH4uzVWhXY0kLavkxSp
H7NGedbXCtIyTatmdixZ45peUwHp3hf9ZaWiNrD2kvIk/ZrX63y+uA3u34tw
It3u/PZ4vKQNaNR2a9I13e3pVvI2uGV6AaTz+m97j+va4ELrT0nSBhMZqzW8
baB4vuu3L+ESHpm4ljM2MHhvc5a0/KD7LOt5G4gyFx8nfefegRiDSzYw9GfJ
J93q93NvfbkNNuz9kUF66H5pxO16G5icQRhpucAttKLPNtjMs9qUdI2e6/DH
rzaYUhYxIK3Hlxm09ocNGv4o6ZK2eTAYcGzcBqr8SSqkw/hL9uQss8XynYfF
SFc9lNges8kWhaYFf3cT1jnh9Klqiy2uD+vOkn5C2+c9udUWu39OTpF+K/jN
M1jVFteKYodJ/wkudtttbAuBu+MfSGutFXew9bdFydXUe6QfRmww3nLNFvvK
rqSRnv89lidSYYsTjfl00qpxjR9X37YFF1daIulS+s6ov3W24GPdG00672Bx
8Yt2W/w1Kg4ivaNkC3PikC1+Jwg4kT4tPWsdPmoLh7U+9qRfl7ee8pu0hZLc
NRvSZrcDleznbbE/09mctFCfsyIvmx3mxn7qkV4aObH9B58d1M5wbiV9Vj6F
7auAHXZXX5QirREWcK1XyA5nivQlSUdMafx5KWKHLw2HNpIenOvOrZewg7eM
jxDpLnaRhgJVO7Q/fMdOulDsvIiukx1Kt48P7iLfv2ylVjkXOwxeERkgTZ9q
ihR1syPm0+or6R3NA+1LnnbYvFjzmbQ4bWtc0247PJ2sfk+65E7NG9NIO6hw
uDwlLbDRLFVjrx1W3qltI52Z3S0rHWOHngLRVtIB3n/TuRKIeiunHpOWYTFQ
7kyzwynBRw2kb9h05joU2KFw+0QladFaHy3Do3ZwlNh3i/ThjeMDKsftIHRH
+CbpsOk1uvyn7SAjb32dtPJpt+F3F+yw6/HrK6RrBr6aet8i+nln1znS9Ynz
TAHP7fD9snM26ZmKwfG0l3bo1RQ7QFrx68u+c6/t8Hz3r0zSl8yvNb56b4fh
nYczSGcLeKVQ+u3wcMdECmmXm/VLApN2OOkhGUs672vZmNK0Heg8gjGk2wSO
f7aasYMHM1c0aZ2kkAdp83b4cWomktFPiw30UWZ7BJ8cCiU99jXl3xNeewg9
0AogLSUYPNrHbw+pcmt/0rss3D8tCNrDdP8uP9Jvbyo1KInYo3JZgS/p+0lf
ks5J2MOAn3PnLsbvvdFilJo9rhTbepDeaMnxd5OrPeYzJWxIq74xfLnW3R6y
YwnWpE22p5Su9rTHm3uvrUgHRc45LfnYQyU225J01Znh6x/87JG/gd2cET/y
bHt+tD0KdbSNSLtFc6tnxdojMuiKIWM9kzk3Pd4eNq18DB/ma6qlJdujln1K
n/R7narVZvuJ/RTrKYz4Qycf/Ttmj1HrDG3SiYJvTv0+YQ/DYWaGcy+sDhs5
ZY+t6alapG9XZ4t8OGcPt2OpmqT/9iburb5sj6KBg9sY+8nv3EKrtsddq04V
Rv3PpHO6X9tjz/dpWcb/a9PDy/Nv7ZHHtJ9haoxb47pue7zgEmJYfEPmb+9e
e3D/1NvKyBfybfuXAXu8PXBCmlHvyiLV4Rl7cJhFSDL6sVPdlnvOHiLOqxne
WN0ZKLdgDw25W5sZ5/X6Wxi6ZA92tSkJ0sbl7sunORzguSNlE2kxS75Pf4Uc
wEepF2Ocp/Da7Pp1DhjkD2D43aQBL2W9A1aW8jKcezrcLHWjAxxmaRtIL/zs
qmSTccBhUSlRxnxkHcj8T9sBAYoP1pE+2PxPUczbAV6f9giSRvig0vrtDrgY
K83w9Lou5bU7HWB78JcAaa/wc6p8exwwtTaGYTkRHQ3OYAfw3D7MT7orPI4y
nuiAP2xveUmniezEr2Qivv08w+otZvpDKQ549I/KcKGIkOG3fQ5QqGBhOLSl
xuT9QQfEC2usIc2zftq68awDmEyqeEg/bumxqS90wNcDGQzHRjyyrTvvgAE5
V4b7Wgrsqy454FjBwirStyKUnEvLHTBZZcawQ2uIV959B9w5PLWS9JHIn0E7
PjpAhJ6xgvRak/hwx08O8OjfyfBFoRWxJn0OuH9Ij+HKetkM2W8OCGua5SL9
nCOsaHbYAcgOY/i/szOv8hYcUM0ZvJz08ZDMD+mLDnjZZM3wen2h/uglB0jX
yzMsO6g56sXiiOVhE5ykLRWTOKVXOEKjPo7hrMcsug/XOiIj6BgH6ROBmy2u
iDoiO9OH4ZL/TF0PiTvCIUGK4Sdu2eHuMo5we9XATpr5F0/JhKYjQuum2Rj3
h190lbi7I5z/S2VlvKc2vy95eTviwDF7hh/s79A6sdMRHp3iDDPPxvtxBznC
uqiFhfF+f3hXPxPvCMvotQxL8VY4KtEdUcQywUy63XL/T2q6I7hNWxnmrlfl
789xhOjXWIYLivJpT8864jzfl2WM9+Z9ADP7BUdo/qln+A0PTuKyI5r3nmZY
KG30UfV1R1zVdGa40Ndy3fkGRwikvmAiXSbN1h7V54hY5S9LOwnbzEznuv9w
xPGIGwxPN31z1Bt3hAolkWF4Pe7lYHLC2SoRhgelqi6OcDiBw3jsH+mDv4v9
X6xyQrnjI4bf56ZPnN7ghIG6UIaTPSNr6FucILRgyrCE1O4EXwUnNGdtZDj0
oQGbPMUJzzzfL5Jmn14m/NDHCd45jgw//+41ZuPvBCsvZYZP99x58jHUCZv1
1zAs/yg4YjbFCXrWb/6Sbrq6aQNfgRNmq88y7FLQ/VSh2AmC0gEMD8UdjrWs
coKZ4zaGk3cab/Z/4gTV/uUMX1G8lVz43QmDH+4sMM7jctMtaNYJN8yOMMyZ
VKGsvtwZ3A/CGNYovsHNvJawuB3DAW3XBztlnBEYrsRwK3/56T1WztB4MzdP
WnrXVZvFYGfED7UxLCByw9/xkDNOXChmmPntrZSycmfsrU9mePRw9amlp86g
FXow3GN+t9J52Bnho9sYfjsjHGah4ILWzuk50i+L4+UokS6Yt21ieGDrYNXN
ShcEy5QyPHvbXkd80gX/Lp5jOFH9S6yToisuyx1ieKk2onp/iCsyW+MZvhzl
lbSs0hXbxagMWyqaGCf+doXgVz+Gl7dovYtUdYNfNY3hFm+FQGqkG2KSgxnW
4rC7WX3XDQUr/r/+xs2wP0tLbshwDWT4f9N3vX4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$133692#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 218.168209744407}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 218.168209744407}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {218.168209744407, 498.9999989816346}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.787687756817855*^9, 3.787687779325828*^9}, 3.787688575512231*^9, 
   3.787689213185861*^9, 3.78768936848316*^9, 3.787692960128334*^9, 
   3.7876929981690807`*^9, 3.787693283490337*^9, 3.78769341897966*^9, 
   3.787694375395056*^9, 3.7876948272725897`*^9, 3.788278156794067*^9},
 CellLabel->
  "Out[668]=",ExpressionUUID->"7845120b-a208-4fb7-ae67-c713e81e4dec"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
Sl+7W9b5Y8UlnttHR9rgQCdRQvjYH/sfFSMZRA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$133773#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwVV3c41u8XRgjha++VTfbez+HlJfMVSahk78xIZspKyFZCRiSVXYSQleyV
0UASQsjO+L2/fz6f61znPut+zjnX85y1u3HBkYiAgOAp/vP/P2/SUWEuV6UG
f+wQDSHBOnpDJsLt6ZKEGnRNVH9rrKPWoFdFwi55qDB3D5cQto46pXycSV1e
o51l+pGjk3XUnTCst+38Hk0/+Bb/68wm+qgSVb/iPIB8LDkfqupvoRdq9GHy
rwdRhyjPh8n0LbQx7ZDnXzaEOCbCM6zntlAYG9ncZv4ICuZ9bMcUto0yM42d
/zz4jGZXvN68b9lBPQ+nfRadv6OBb7OGTQH7KDYr42Oq9AySuuKlwTy0j8Rc
kJXs6xnkSq+wHid+gHxPP7ztWzaLnr3hkupeOkDHOnLN6/k/EGnM9cH/vA8R
y4dgzOqDX4hV36pM+s0JepfCN5pwZhG5tlIxb9ARwFW7XgexuEXET7WC2dYn
gCJCrmj3u0tIDmcsSdFEANLQ2r0U/Bs9r/YlLHpOCPpNp40XnP8gtr32psxn
p0D6xG6baf0PqvR0N/b6cwoSeK7186mto96C6wSqysTgb9cQYN6+jr6ZnfC0
DxCD9oJ3e+3oBiqk4GrfJCOFudWv14O2/yIHJ9rfHa/IYDzxfm2y8haqG/PL
yCYjhx5JZfLnoVuIm7Gq7bE9OVT5pFVMkmyjwxztC6qcFBC5rX+iwrSDulgO
NS7mnQGeozc5Rwp76BltVFXUHDUw5DquM97eQzeGyYL5TP8DMkSvLfF+D7Vh
nrDItf4HfyK8fl/V3UdEv+5TfL1AA83EAiotlw6QiLijmQfQwhXKlM93gg7R
YMlgU6smPeBeonOPGw/Ry6OP8pX36EHbeDWsmuAILXdgXMN76EEsWU9wPvYI
yXEzJrRZMMAh/Ym/TvYxsuf4eEc8mBH6qBTIia8QgOj3lNura8wwbECX1R9C
AI/LL+qHq7HARNyaYHYOXj9y98x+PAvMk5RoS3zBn4vxZt5LUVY4PGKOsLQm
hPZgQrqrAWwgura/U36ZCAY+NDLtKXOClNj4vcBbRPDUx8pWOJMTFNyqGLSy
iWD8zjNP521O0Fpwk/k8QQToEuMYey0XXP427UloeQqEkspIhnl4ILa/af6i
BTE4FRY713WfhUTKR348N4mBpaY92YaAF9L0bxL9TicGnSa627lKvJDXKcET
MUYMHy431hyU8UJdc551mTkJyPL0PFPK5IOfryKHjy+QwsXArtnFRAHQStJp
KTEhA4vkI6H+U6IQoV/zfNiLDNZ2dXuHTUShmYQv9egBGUwpLd5KyREFlRAC
J7NeMritWDiFVToHsq7vzpzokUPsnC9DXpAY8GOkL1loUYAHoU7QBKck2B3n
QeR1CmC8SS10GCAJ+fXUouURFGBaLta12C8JHFIrh4TvKeAPbdBakqYUMHKW
FLxUxfdNTKdv/IEUkO5yrBHLU8LZb+eTOsJlQLvq/mdJc0rY3XuYjqpk4I7n
QYuVHyXgDHBlZ3/KwPGPz6kVlZSQWk9nxGUoC7uDKco2ElRQxa2T9Y9LDhbL
yO5VC1FDMuVJLUzIg6PkAZU0FQ3MiPeThWYqg+F0TDELFw0EZ79rYfuiDHIx
jOoEkjSw8VD5qfBZFSD+LuUxgKOBdgMBoYflKlCQ6NzjmUYDCudG9oO7VeH7
6mh0GTst9Dm18RTTa8Dl8tcnfKJ0kFE5kKp5UxOMRBw3mHQZINveu5YjHQsH
9wPefcX3pUvEuaWL77BQunbvXpETA2DLv5eFzWKBuOYZq0w0AxTAJ75scV1o
0FjUNOpgAPc66oHudl0QNHdPicIwwiQ7l1/3qh6M1t220TdjBLor52L16c5D
JGuCIK09IxyTMqYXKZyHL9/KG3LvMML7mriSqbDzkOq6Nlffyggqf3OFBaj0
gSDcR3YdMYHBWHfqKrcBvJqNPKozYQJuL3pXpGkA1topXaHXmIA64oT1gp0B
1JFXW58JZ4LzlVylNYUG4JG2FSXYzAQrr86V6PEZwuTzwFEbNWa4y9X0MZbB
CKIpY3P5DJlhkHKV30DaCORuZLksWzNDjE/RUb2RESTL1R8G3mYG2p32vqx7
RoB9f8Cf2sAMRcMPGTU2jKBqNDTgoxILNF7AqGPfGEPpPQe7ufMsUNs8Zqs5
aAy5CgYm/6xYILb2b3T3ojHEZ7GIiIeyQJlKVu1NFhOwt6n+ktzKAm/PUY4p
+5qAFdWjj8+HWcBFJLnwdowJ4Joj6tp+sAD9okm3Vo4JqPEYJ2+RsIKcCDXv
1XYTYJhfxFjqs4LED7Mm69M4oEgfkPKxZoV/Qazi5DQ4IMDWccZ7sIK18HuW
QBYcrJRE7b5LZAVRzq/xqcI4mLN0mx/NY4WDRaFiTSkcTJCbDq1WsMLqxzCf
14o46HDnesE9wgqN48MzH3Vw0MhBkqU0j9cv8TjfNMRBVd/vu6bbrBCvT+cw
dwEHuZL1V6OY2aCiLSJ27yoO0mbyDHKE2SC51Ti1wAEH8Q+jlWqV2SCl3/Lb
GTcc3PxrRvfLmg2eMwb7cPjjwKNI5eTEgw1WKlMWPwThwO7i2RWWMDbohneb
oqE4sCQlm5ROYoPRd7dLTCNxYPxmrUM/nw1KOWy4lO7hQNtlrMq+kg0mbea9
vsXiQIW1MS+kjQ0Cr7+o0E7AgVRPQUL6CBuQXf1A4p6EA6HbcbdezbPBr43C
YtMUHHCJeTt1bbNB57JWz14aDhi+WpjNkLLDBaaMl7aZeH4T1WGfmR1UtVLj
4rLx/CJ+cToRdpBRk8rye4yDnT8UbOdU2GFhyI6e+wme7/wNUm0DdiAd4pFP
yMXzbTrx18aGHRoV1pXe5eH5Jno/E+DJDps3T9zL83HQX13clxjGDnRS/wna
PsVBu0NCQ0kSOwxjdpvH8XIDo19JSz7ef2pSIk0BDio7L6dNVrIDCVHFChVe
Lg2EyM02dpi/ISU9gMfnCgt5nRllB8X3i9XmeDltksqa/yc7HNFX9ubi48XH
b+mq7+Dl1YDJl/h8IlSn5SxOc8DWLXu9O/h8b660nr3BwgFWdhtxHPh6PJ6U
UseKcMBz00zqUHy9dsZJ//JVOMBysxdbhOfD8iRgsd6AA76vkRem4PkyrrAZ
G7bhgLcbHal66fjzuY5p++3JAdbFQXGdeL5V6URfE4dzQKe36jZlMr5+QquP
fUkc0PWMOl70AQ5sN+J+ZORzgApbaDx9PA7uDi4xi7RxgKrK8vvzUThgamGV
2RzmADGh7tXMcBw8f33e8N0PDrg4fBJUfRvvL/F5hBEJJzDPq2Sb++H9hU0+
YmLiBFM1ZuFpLxxsepLXfhfkhLgBCxppfD8yG7ku+ehxgknNKoORLR5/RuRC
xn1OcG0qJb2oj8cfWHpcy+EE5YXUIEdtfD7LsdHCLzmB0OxX6nkNfPyPiw0N
/ZxwlePmbqI0Hh9TyvedlgsehA+5cDHh8YET6qW8XFBgP/ZrmhqfvzOZpY8s
F1SIbmf54OdXFeuScOoiF7BQkNSYrJvAXWLhbaEsvP0o8/e81ybAtHXpv41S
LjC5EXOuOdcESn/EiDTUcwHHIyWmjAcm0Nf264rhNBdUet1zDnTD4yNLOr25
uEHfxMqe56wJPD8SzKov4oaK4/v0VFHG4Pwv5UmxJQ9o5E1KC501gjTjlQ+3
bHng8ZnOdxpnjKDlqc6ykQsPvJF4kqO4bQgsensKO4E8UHy6o3Cw2xC6064M
YjN5wIpA+k6dlyGISAifWhzjgZFhzvNHtQbw27bJRdTsLDyO4A0NVtSHG52/
ZF8b8YK3aYIYg7AutEC5u5gFL0jtPRN/SaULNO+8C59f5QXpM5Psxn+xUPF6
n67oBi/spGT6PG/GwmbWmc2sh7zQvUUxO3QRCzfdJSvujPFCY4Y+rU60DoTQ
BIpZXOGDT8mUIrSbGOiNV3UYceQDq42NpiuTGOAkIcjBefGBSkdoRWMLBpr3
Y88YhPMBa0/IzaokDBD8eLSMnvIBydX2ozsSGIiqbS4V+ckHKeYR/83e0IJ4
K1KBIw9+uEqDc4oh0gQNKcqdJX9+2F7z/DK/CrBBQtc1HsIPp2uUjy9OAlhW
crpWJPADjUSVm18FgACZ/Ev7cn7AxZGvP74G0FJrL9/zmx/QiSjmUhSCHZpW
nUw3AXheKN/SLqIOZQudTHd9BSBURGk4kkQdrjT2/vIOFgA7CzZS51k1aHee
iNOPFwCFYZ63z7PV4GHzn76j5wJQWkxt9B+lGoh5cFk4LAlA07lmM+M9FbDv
uu0k7SII6zYGD7nXlMBBTdB454Yg2Jc5ZtgOKIFT5aD8u0BBAO+Avx0VSuDy
WIBEJ0YQmoQ0TI78lMDrxkCh5TNBeJGx0cp+qAjBzHyz4fOCIGtd0kBArwgp
zj3W/bZCIN6e8L7QSh7SvvhjUl2EwNk4oVAF5CHdlPucpbcQ1KRxGW0KyEOW
qv/BbLgQpIuxBnzYkIPc/7iyt3OFwHjAt3opXg7K3viMc3wVAqYdliORD7LQ
eprV1P2yMPTEigln6cvAQqGE/uR1Yfg2duzJIyMDlKCN0XUTBhKb2Ps9rDJg
GXRDnu+2MPziOl8atSQNfxY7WKdzhIGULmb2brw0cPb4zunPCIOUEYt/3rAU
3Ero9RN1FgH8LpyW2ZLA7885j6wbIiBBJRvI/kkC2tt3HUmDRIAm++Mr9QIJ
oDnitZyLFYEjjHOduKkElHjeUntUJgIwSdddXSkOY8aCJBRrIvCr4DQ/U6gY
SNNGZCz5i8J/R5004qqi0ED2WbgrRBQ6+f7tE7OLghaBxLuiu6KwrdxHe/qf
CJj/mf5+LU0U0qtUtmLficDNPkWR8WpRIMsPSA/VEIHGuD/v2jZFYeeD5siB
gTDoEV2bfex9Dlg/e4qMRAnC0H6t362gc/A6PqUhDn/uVhuUpJcizkHr3MSW
vZEguM80iNIlnwNfk4rSO8yCkNjM5B/7+hzUtw8v2r8UgNHgftKAtXNQmXel
OOE7P9j+VRcz9hADEu/+cCUbPqCiIxgc9RcDRKNoyobhgwapNj9rfJ2L+hJe
3KJ8wOCFfeeSKAYCFttNKXv4uV001o+qEIMsGW52lkz83H+75vJ2SwyUnbio
fabOAsHHyCLeUHFI4+8oI73FAy9/YfSe3xMHQY+Czxv2+D1DSroimSgOXwi5
jA+MeaAGEy+rnicOq7ghVzsBHnBpTmm71CoOdzkKZBhLuGGwunAmgUQC6jzj
dkXduOBpbgfH7gMJMJIc2dxl5oAcG7HPFzMkwJ8axy24zQ5ZbKkPa3IlgJsR
czZqmB0SM2xJfV9LwEf3ncTuB+wQnPjvz8qgBFCsyd679f97QZj0hzl6SWCd
LFtWIWAD4qtPXPuzJaF3KFT9Dj0LnLAT84sXSILGYiQF9Q4zHEy6fbtfJgm/
RAqnWyaYYf2iktn5d5JAxKT+7FEuM3wxGlFr/yIJ110HN1nEmGEql5js639S
ILT1VYfWmAmqE1Wmhy9IQeOmTu+dcgawe0xN0mAhBYIfF24ppDMAXemcxFMr
KSgkf3OHNIwBvFvj79ywk4KfD6XI/pkwgNjWlAilrxSoXJmqkd6mh6LLt4N0
HkoBXRR5WZ02PZ73Rsa3A1JwIFE1IrpLCxjpZJQ3IgWbPMLv+H/Qwqa6g2v0
ZymIvHKmXGGAFnCXKJvMv0vByqd98YISWqCMt3HYWJOCNoZMo7TLtHD3z2GV
KLU04ATlxj620oB/gzruiaE0POQUcrmk8x/UWnURTeKk4bSxhuY693+wc4Cr
ZbgoDUdV4Qz1B9RwS9WBLeGKNDTbmSRPVlBDWGP8fLCXNPw6ExpkzE0NMc2f
gyyTpUGMJoloiJgKHrX5PKUflQaVzCls9DoFTNv9MzOZkAY95RsJhYMUwHHq
Hun9L9KQG/maf6mCAnIxWe5EP6XBUobmxooPBRS2N8tvbEtDEu6qZd82OZR3
nunpZ5aBtAfXNbuJyeF9T/FmnLUM5LJHXVXXOA1VLIM+oddkoGCjTLef/zQU
OR2se9vLgBfhZlvImdMQT2Ty55K7DFzmfjIjPUkK5ip7vwVuy0BpQkHfXgAp
LD/X/9n6SAZIVzAsUzUkwBD35/P+pAwAjRPFFpYYSD+zXlr9KgOG3FR7m1LE
sM+vPT4zKwONowriZ9iJ4VtL1mjXkgxIfKdYjf5zCp7vaQ6l78sA1+leKM0+
BRouaT3SrLJQqMHwNXCTCFx1lZtcLWVBtr/telgtIawJs3ZU2sjCA8twibF8
QvCl2O/dt5UFd4yao04CIYT0vf0S5yoLAxeiY33sCSHZTOnwebAsNBGSrG7R
EULdNUXV5RxZmJ+Vv3r/JgEQBcnXu83KAtk17xcqucco5jJja9VPWaAaGH/Y
GXyMKFW3uw+WZOGAPCkx9NIxYjyumYjflIUnegqL7rTHSPiu3F7ZKTlYaxFZ
wsQcIZNkWcXfAnLg3R94VBF8iHJKpWvd3eRgSN1JnCH8AHVP2nfneclBduHN
38LXD9AWRcb0iK8cJCQm79piDpCB5wGh2m05OOoqxKqQHaAD6Q/GlAlycJD2
eDIhdR9dfme+WP5SDnYmJDLvV+whpv5A9rV1OXDpZyEcINpFWifPJXi35UCq
9S7m3+IO8pL6ommxLwc565mVOgM7qDMFv3II5UEUdypYLmcHBVwir02kk4ca
TtYnAYo7aHTmkbGknDw49G/vOPpto4d/myK9A+VBKdvp7RmCLeQ1nHzd5rY8
iLAujSr8/osMK+019cLlIVu/yzto/C8ivUFOyBMjDzIvDd5rvPyLQpbNIwYy
5OHwm9P8qPVf5DT7O0yiTh4whqFMtE2bSG2ANWRlSx7e99cbn03aQKyvVqwn
9uTBKCkgdSVkA+0kvFdtP5SH+PdfL39y20CV+o7/HhMrwLyxKsMH7AYS7KwI
NmBQgD3duamsk3VE26R7q0xWAbSwWgU9/utooSzgpouvAlQd2Wt5Tq4hC87j
b6U3FYCGJl/6Z90a6kiK1l0KVoBj85SVu2lrqMg/k8UtSgEuDPBRqeLWkJ1G
fYN7mgK4bbWthnxcRd+GDo+96hSg309+ROLDChrbi4oJOFCA4T3fzxTDy0jb
nXK99lgBApRLP/PVLKOar2mWO0SKcJ81ivlaxjJKaSsWCTyjCHTrmTWq1ssI
l9D1KYhDEUxDNfdjF5ZQL/cZmhANRRA2rTDHnVpC7diUrDt3FCF+kzws0vwX
+un0ri84WhHKDzA5Rmq/EGnMPJFfvCLU2C35yfL/QnpdCp72KYrw5hbTF4Ot
BdSrO62pXaAIquNWLuXpC2hEj/83SZsitK8VG9J//Ynm9OvU4wiVwPCeeG5z
6Dw65f7dN5JECWJURtsTXOYR/32y0lvkStBJW2fqYzaPnD5Z0bnRKgHR6kel
UJF5tGxwsqB/Vgl0O+JuPhn/gTYN9ZIpNZWgpnzbfFnuByI0mZpLilACA93r
p1gI51B380U+/7tKMDW26zm3NouSJYbsLWPx8RnP5bz/Mot4qLvneZLx9qsX
/1S+nUXQV7tQmacEBeUCsv4+syjC4OHySLMS0KXvNV1dmEEEenqbzEdKkPH4
yC2t4TvqfvNB5pBAGdYtm1Dyo+8oWQj5zRArw85dgsXy4O+I57TCVimlMoQ5
dZ/TU/2O8BeZHWUOZUi6fn6VqPkbitA+2bdWVYarFvyNHh+/IgLNOsL8W8pA
Ven6Wmx3Gllp/+qZCFWGBekJpqcT06hGlyWN9o4y0HRirBQbppGLcbBgVLwy
CClHz3aHTqMhaw0Dp8fKIN4yv3ibdBoV3OxME2tShu0T9zRCrimkXT4uVE+g
An3pb57EO0yg3NenNzaIVeArkXDx3/MTaK9KqUGUXAUGzxrRBEtOoPL6R4Y5
tCqwO4V58O3gM2LsuuoTzqsChoTdd4hSP6OF2YUGHW0VKAiVDMzuHkexzLtG
wzEqsIEtkhTRG0Np3d0/2u6rwCtnFYoEmTGUd+vRreokFdgZmGQh4RxDddPq
xWmZKsASGRKkvDmKfubdPbQoUYGSoqz+0iejSEuY7sV0pwoMLTpC4t4IOlQS
J/tJogpL25/6JpqGEdny8ZMxclVQJMmS+1w2jOgfD8p2UqnCjkUky1LmMBI9
8rtWwqgKu94bJLq+w+hya0Odq4AqrJ2XVF0SGkZ15/Uc17RVwSx18HxtxhDy
trJv241ShZhCZYmFyEFEnbc8oxarChZxWMXuG4Oo/IfPSWSCKmjmmeCarwyi
Xx4RapTpqgDOO1YLyoPoaviTOp5nqhA0V/ATuzCADIs+l53vVgVbn3NXQof7
kfCaQepj/LvjnHe+bWdnL+qUGamcoVEDPYdWU9WSXuQQaDUowKgGX2gi+EZi
elEegStVBacaBPGy9bid70VM9NEx7RJq0EzzqFe+/xMiVmq5vYpTg+gMjUmW
bz1oNlLOAaWrAdY6iImB6SMSZKJO9Ma/e2I68s5z/OtGbmW/3jx9ogacq+4V
mjPdaGv40RniZ2rA5uif86OsG5HxE1Z316mBcNJIdIRmN5Lo7CO8MKEGgRGK
rqf8u1AwhXOeA7s6FGkG3bm02oHe58LHdG51SLJfmu4Z60DEsmx/O/nUwWDW
ovxScwd6YN2HFRFTh9PBK9CU1IHyy2XXVtXUgfmnC0+tbAfqMiZQD7yqDquz
/Lkooh0xpGZPxT1Vh+YS4lMU5z4gijH6Id9idXCazRmdZP6ACJgTu6yfq8P0
Xt5OI/EHtProTo14pTrEEo9+b/zWhjoL3BOHWtQhy8lb5mlqGwqqUtdinVEH
K7rrcr8J2tDXodnnpVwa0DD7YoVgqQWN0tvkP+TVgJCnPVeZJlpQz8XxjGBB
DTDZ6R1V62pBdZM9UYYSGsDapRLTWNyCkmerr6yrawDu6x+ee/YtSGvjHq3S
FQ2IF4ujsGx/j57RiN7qeqwB2G/Mwk3jTUhi4fIecb4GDBxyTzrUNaE37+IC
tYo0oNf7WYdkRhPqdloKaCrXAKokTJWERRNabiz1rW7SAH1Os8jez41I3FXI
I++7BnCys6s6zb5DNa381wL5ELyLtL7JQtWA1DLNv9UIIbhv9Njv+3o96vC4
e2XzHALpMGGejtF6NM48b+0ph+CUI9nB75x6tOtZaGmvg0B9P/6wUKIeqbDx
XjBxRnApqLbw6aW3qNWXW0foBYK3s9rEe8116GD7TzLHawS6rHEW+yV1SO5W
yxfaagRt7UZ7tA/rUGn4df/DBgT9xS8GYu3rUHJCYeFQDwK50ZML8eR1yPaZ
EFHIMoIqQrXx7su16GQl89oiA4DEn1GFdIoalCMRQfKDCeB58t0i851qpOTt
8uIrC8Br5UtZwnPVyPev0u4wB8DUdEcrVUM1WtifTGziBxjZcv3V41aN+kk5
mlPkAChZpqaOB6pQLk8+h7o5wG60fENLaSWijpfuFrcA6DjrNo3JrEThf9v8
uCwBBh2/Wk3cq0S2nT97TqwBcj9uSMnbVyJej3O32uzx/rj/2DZyVaJnb+rG
dP3w9vv85JtZFeiVcV/ihRQAO4VHU+SyrxHX26sqmDSApSyWQUGG1yjp7PpP
2QyAW0JFXnbbr5D3Fp064yOAYnlXKfm3r5DMI8vfn58C1FFbxumgV6ju5w/d
K5UAhMFSz3YvvERNIQcELoMA4Q5d9sNJL9DO64X1O8MAyeFy6iq+L5DUj+GZ
J6MAd/4xL7eav0BF51+0jEzg/b/JUpVie4HimWwi0CyAxovvoveelSGLiqYT
pk2AM0M3i/+2P0d/fkQcd9BrQtF4jsMxcykSZvZcm2HUBILNG+5nj0uQnf7l
b/+YNUH+l7Gq7XwJGq+Qbpbm0ATzWuEOqcoS1Bg6F/qEXxPSVZjc2AxL8Pte
+8hfXhMS6s+h3ehn6KzB6UO+S5oQ8d9nPVqaYiQ3hhlmu6wJ90yD7+8fFCHs
tYhSWmtNsHB4s7rzswi5+e2bn1zVhOdega1SjUWo5vHvl1NOmuBqKxqc64rH
rwxce3hTE1bPKAzhuguR24OsD8fpmsDL8YYjOq0AhTCPZW9nasIUOc/U78gC
lPiU1nslG5+vZY+qw40CVF0bzzH1RBOasLdyEvQL0OHXkIDaYk3g/y5UUU9Y
gJIkrgt51GrCX0eLFwF+T1HNgMj9yVFNmHQuqTm0z0fJfK3FB+OacP7LOQa5
C/nIPdCyhX0Sz18/QVcY5CNe7pjtK181YX2AZcCIMx8lec1fm/upCXf8Rsjy
X+chN6o8ud87eD5bnP4V5eciHgOGb4csWkAaPKGd8iQHHea+2ONk14Kn9wWs
Y8Jy0OdNLXrEqQW3IzLEcq/loMRHPnqRZ7UgVN3bVYo3B/1b6q8iEdWCVyIT
gj9KH6Px2LgYalUtaFBGx7aNj1BC57EUzxUtqGGPEh86yELgsyDNeU0LFqc8
HaJms9AWe78M23Ut8KnG6pl0ZyEbnydyDI54vQV1uWxGFhLnUFMi89QCxi3S
/XOyWajf5xZaD9GCC32plh98MhEN55ZRS44W5MdZVM8QZKD2rmnjplwtMNz4
fSlzOR0F+X4wacjXAs/km9kOo+lopivFtKZIC2K6uDO1StNRpa/0xdJyLbho
VbFDbpqOLnR72SQ3asE8hxpT1bM0lOq35Gb7RQsCfki/+3Q9FbFhg33MvmnB
SizN1wTjVFTAciYIO6MFB0L3eK+rpqKqJrF7YvNaEH/nVJ8WYyoaPO2dt/db
C1J22FIWP6Yg6pydkeR/WvBd85fbS4UUFNt+Sr2VDQPvJxtXsjkfIprMNEwN
BwayZ5qjH1M+RJmuAvolXBhY4SMkfvUvGT2j1r30gBcDq77nnUmmklGHZbzP
ZVEMHL45Jg/JTEZEqzTPNpQxkE5RGhvMmIxCGLn+472MASX+3xHpKomor5Lc
ClljoP8SyWVytkTEZbxdZHMFAwbFjar5+w/Q++helczrGFhUTn2oUP8AEe0F
O1G6YSDgcDSFUOUBipn63LQTjIG6cNz9Dc0ElJL30ONTDgZ8tTpNNdzi0Q/V
0DeLuRhQ6LIn6zeKR3ITLkSkTzHAI+hxKUQ6Ho3RQBYUY8CuuVFLbj8OsdxZ
+1D7EgMUHpbLVPFxKNfBgD2/GQMWly9cMaqMRc9FSHr8ZzDQ4sg4xMcYg4Y5
NP95zmEgk1d9feMoGh3+FyrmPI+BnYicS58XopHxzlbi5UV8fU+mnv56G422
2ubNNNYxsNBr0cZ+NRqBTfvX0wTaoIgEz74vv4cmEqM2HnFrw5TjdPtlq7uI
6M573rSz2lCxfcNvQecuOhfwz+wBnzaQ/Rh8FSN9F4VZ+9WFC2nDgsNH/9Pk
dxG/sP1tB0lt2Izg+Lr/NgrdaNUikUDaoBVWXpnFEYVItwhZW69qQ3j8Eahs
RqK9iqzEeVttuNtePlHxLRL99pQkJrPXhthmi3q1T5Fo8JfNH2NnbRDXL9pO
LYpEj6bfdHy5oQ2m/M4N6paRSOKDp+9ehDbkioRQun2IQBYpk58kC7WB8eFJ
Mo9pONIz8dY0K9aGgyI3AXLJcKRKefrNzRJtID2tP8JEFY54ouUKml5oQ6/O
wWT+xzC0fCspyKBGG8zOt9u4a4ehsOs6As4d2vBorTPxLYSiEqnKsNxf2mD/
yFxTyOw28mLc2H+zpA0/ReoZ/8rfRnIHUgFDv7WhKmCK/xvLbdTyocKdeF0b
/lI53KD9HowmLCos3fa0YWiUjG3JIxiRhb6WUSDXgfbLOkso8RZy+fhyoU9U
B+bc1LPKFwKRxKvV67/EdOCXY8bts32BaCtF/CuBpA54dCW+qqwORBE2L0dk
ZXVAaPTrfb7IQJT1p7wlW1UHuA4Dvp/nDETdjOWPHA3x+LVvfTFWN5GIXZnx
kacO0Ncm3KNY9EfdT1QqNm/oAHmiIkZmxB85TfbQLvrogMaD4S6vZn9UhPs9
OhygA9mXFMcF0v0RDxKzLg3VAZdE3FQcxh8xcbxyNnugA54MjgwsRX6IaLwy
4nm5DqwQPL3U5ueLntJqzeW+0gGpas10m+u+CIyGMWkVOsAe4itGbuKLQts3
ScNrdKBk/z+ebFFf/PtG9oF5ow6cV6YUTpnzQWtJtdknn3SAOziDdfKiD5o+
X1918bcO1DGEBWmc90ZaJkWWAas6sMfP8a9Q0RuVmScdp/3RAZIgvhgOQW8U
fM1Rf/SvDmz057phT3kjtgDauQuHOrAlp262E3IDWea70uKosGC6u1zz0tsL
je+weutLYoGS1mkoy9cDaRwSM7lJY4HMz+TapJkHeka4/i5OFgsUMYKSqvIe
6CZl5+mPiligMWsntttzR4y8vnm6gIVem94spQh3ZG7U069tigXriafLS+lu
aLgwWBz5YYHobDqf14QLoiOoq1cJwAJ5SIKi9XsXZGazoaMQiAWSybNPrj9z
QaMMLlfFb2Oh4GRtq97fBX2+dzGJPQoLTH0PjtLpXNAXZ6mN3RQs0N3fHJ+/
4Ix+nluoqajCgh/Dmz6Fn45IMPasZnkNFr4yVghyDTgip3mbvpI6LHykoetn
r3dEizkjP3Mb8P5msC8uP3BEy1StTA/asOBAE8vwVcERrf15HOQ6jIVR0ktz
qw8c0F61qRrvJha+je+OlhrYI0olhX76LSxcCfd4/FDJHvE0stmS7GBBvlrc
6IGAPdJr/xG1uI8F+8eJQk0ndih7NODTK0JdmLuTVXZYY4dUtrOtVGl1QcJS
PWKZ1w6FKMwFmUvpguSH/6xPzlxHyQ2dFFgZXWAsM60++88WFWm8yFGU04U3
NdaN5su2qBfr38KmpAurectPV7ptEeclUrJZpAuC9fNEc9G2qDlQNNPTRBce
mwxZj5HYopO3vrXRXrowXPDg0wzXVfSFtOp+gbcuON/xFEk8voIazDeuN/vi
9XSqkle/XUH+6zeod27qwvoxZYpj7hW0KOTp7BiuCzr/JeCoeK6g4QxnVu1k
XTi7Lwn5Ijao2N8mlLBKF1q+OA2vmVuhO22PzThrdEFquTigXMkK2dJMiyjX
6YKD2E5QLIcVYiu/PO7doAunLsRyPJ6/jBJ/WEjOtOmCilwxCN28jIIumM42
j+hC96IptjnXEhlIYXVCtnXBnpmLnYTkEiIYGyP039WFtNa9iJ1VC1R3y7HZ
fV8XtuVyT47HLRDvh7uK1ke6YBF78Y/5cwt0cPGDiAqJHsxd6pGiM7FAZbeB
eo9BD8YMvY+bcy8i8i6Vz35yepDJ92lS19gcNbv3pLor6EGSwOfmDWVz5E9j
hbNX0oPdQOqj1wLmaObyrY8X1PSAg/uMuOuRGXq78uadtLYejIof/f300gy5
0Mnn/zHTg1gW4i1NOjPUdUXS1d1PD5S6UsO8l0wRnb3LuycBekB1V4fSfcwU
XXV5SjUYqAdn7bmJQ1pN0Y4vfZVciB68DRDvm8k2RfyxuwdHd/WgzX2GoNrA
FEVUvU9IztCDF6lUg/bVOKRyGldRW68HzwxCR1P5TVA0ZRzR4js9YIvyHvlA
aIKGaNvM2Zr1YLrKooXtuzFy4ZDbD2vD2191bVJ7ZIwypVm09D7pgfLT4jpD
OmO0ZT0zMvVFD+JyneWDyI0QXGcVpPqOz/+0TeKpJUN03+lCEJrVg+6dPZXq
bkPE69POUfRTD/b7shfDYg2RaXSpo+eaHhgzBZz+QG6Icu7Pvslb1wPRGy9u
eCwboMVkNorhTT1gYnL8pvTJAEU8TnilsKsHq5UDwioPDFBvfgeB674elFsq
Vnp5GSDmZ8cXHv/TA9XKpOwOEwNk90KxuO9ID4IY5N5qSBugVxXeuycneqA+
Hf5jks4A/Q9Eq/M3
          "]]}, 
        Annotation[#, "Charting`Private`Tag$133773#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 8.406651024011439*^-8}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 1\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {8.406651024011439*^-8, 73.56226917547372}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.787687756817855*^9, 3.787687779325828*^9}, 3.787688575512231*^9, 
   3.787689213185861*^9, 3.78768936848316*^9, 3.787692960128334*^9, 
   3.7876929981690807`*^9, 3.787693283490337*^9, 3.78769341897966*^9, 
   3.787694375395056*^9, 3.7876948272725897`*^9, 3.78827815693115*^9},
 CellLabel->
  "Out[669]=",ExpressionUUID->"f6ab7bd3-2d36-4b2a-b75e-2d4f695ffd5b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$133854#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
hA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$133854#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 5.821678577792621*^-8}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Location 2\"", TraditionalForm], 
     PlotRange -> {{0, 50}, {5.821678577792621*^-8, 13.307927979765005`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TaR\"", "\"Flux\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.787687297143797*^9, {3.787687352909663*^9, 3.7876873591427383`*^9}, 
   3.787687391709013*^9, {3.787687452070429*^9, 3.787687457921651*^9}, {
   3.787687756817855*^9, 3.787687779325828*^9}, 3.787688575512231*^9, 
   3.787689213185861*^9, 3.78768936848316*^9, 3.787692960128334*^9, 
   3.7876929981690807`*^9, 3.787693283490337*^9, 3.78769341897966*^9, 
   3.787694375395056*^9, 3.7876948272725897`*^9, 3.788278157119676*^9},
 CellLabel->
  "Out[670]=",ExpressionUUID->"2a156869-bf7e-46a8-9c05-dc8ea0418f10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_Slow_low_time_\
series.csv\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"s11", "[", "t", "]"}], "+", 
          RowBox[{"s12", "[", "t", "]"}]}], ")"}], "/.", 
        RowBox[{"qTar", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"S1", "[", "t", "]"}], "/.", 
        RowBox[{"qFlux", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i11", "[", "t", "]"}], "+", 
          RowBox[{"i12", "[", "t", "]"}]}], ")"}], "/.", 
        RowBox[{"qTar", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"I1", "[", "t", "]"}], "/.", 
        RowBox[{"qFlux", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "60", ",", ".25"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7876875432462473`*^9, 3.787687627699267*^9}, {
   3.787687785537833*^9, 3.787687785823353*^9}, {3.78768782166111*^9, 
   3.787687835912408*^9}, {3.787692963672227*^9, 3.78769296469772*^9}, 
   3.7876943631302023`*^9},
 CellLabel->
  "In[671]:=",ExpressionUUID->"a67baa4a-a4c6-438e-919f-e57c10f91848"],

Cell[BoxData["\<\"/Users/dtcitron/Documents/Publications/TarFlux/Data/SIR_\
Slow_low_time_series.csv\"\>"], "Output",
 CellChangeTimes->{{3.7876875700962667`*^9, 3.7876875961552896`*^9}, 
   3.7876876343466787`*^9, 3.787687834011088*^9, 3.787689219477357*^9, 
   3.787689371110642*^9, 3.787692965051601*^9, 3.787693000800817*^9, 
   3.787693283739599*^9, 3.787693419148376*^9, 3.787694829753324*^9, 
   3.788278157219225*^9},
 CellLabel->
  "Out[671]=",ExpressionUUID->"690c52b7-9616-4d1d-95b4-037966ee409d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{881, 704},
WindowMargins->{{-1505, Automatic}, {Automatic, -61}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 182, 3, 67, "Section",ExpressionUUID->"d5fe9526-ea5e-4b52-8aaa-751578c48230"],
Cell[765, 27, 5038, 127, 324, "Input",ExpressionUUID->"a25b3859-bc9e-413c-a525-59152b4b3ea9"],
Cell[5806, 156, 11785, 291, 724, "Input",ExpressionUUID->"6cae5cb0-4b3b-489c-99e1-c1c7838e1928"],
Cell[17594, 449, 4033, 111, 283, "Input",ExpressionUUID->"0e6295e7-46e1-4131-9136-ecb93d40d0ba"],
Cell[21630, 562, 2513, 58, 178, "Input",ExpressionUUID->"a0886e97-a45b-487a-a018-6ebdb4a01d60"],
Cell[24146, 622, 1926, 47, 136, "Input",ExpressionUUID->"1738ba5a-8774-4bfb-9272-4a80551ed578"],
Cell[CellGroupData[{
Cell[26097, 673, 2254, 57, 115, "Input",ExpressionUUID->"4733ed8e-498c-4df9-ab5f-7c9c24a47ed8"],
Cell[28354, 732, 40777, 726, 257, "Output",ExpressionUUID->"413e9d21-7498-438d-8850-5455e8f2d7c6"],
Cell[69134, 1460, 42788, 759, 257, "Output",ExpressionUUID->"fac74500-5851-4e07-b87f-5fc52c9e65c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111959, 2224, 1866, 50, 94, "Input",ExpressionUUID->"18b26548-db12-4a43-9f03-213288f46784"],
Cell[113828, 2276, 37472, 672, 253, "Output",ExpressionUUID->"108ecf40-be3b-4360-a681-2789481bd92b"],
Cell[151303, 2950, 35763, 644, 253, "Output",ExpressionUUID->"394dd1e8-b268-4fe7-b9c5-bf9faa366ba9"]
}, Open  ]],
Cell[187081, 3597, 332, 7, 35, "Text",ExpressionUUID->"cdd121de-c68a-4aef-87d7-367c58d86d61"],
Cell[187416, 3606, 860, 24, 73, "Input",ExpressionUUID->"679c657f-4c4e-4eda-bd40-2f83c0d3ce34"],
Cell[188279, 3632, 5163, 123, 304, "Input",ExpressionUUID->"34f5e24e-8ad4-428f-9819-44b39533ae0a"],
Cell[CellGroupData[{
Cell[193467, 3759, 558, 17, 30, "Input",ExpressionUUID->"0aaca936-e5d5-47b2-aa9f-d7834227d551"],
Cell[194028, 3778, 11352, 211, 245, "Output",ExpressionUUID->"9eafac84-19ae-4709-8ccc-d457e4dd7706"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[205429, 3995, 247, 4, 72, "Title",ExpressionUUID->"d1c15bcf-2a5f-402f-b9c6-63c03ac48ab5"],
Cell[205679, 4001, 997, 28, 94, "Input",ExpressionUUID->"821c3797-d812-482f-bc9f-4a6ce1dc637b"],
Cell[CellGroupData[{
Cell[206701, 4033, 273, 6, 53, "Subtitle",ExpressionUUID->"5e8225ab-602e-4a8b-9dcb-16549a7dd66b"],
Cell[206977, 4041, 5216, 124, 304, "Input",ExpressionUUID->"b46ffc0c-1c41-474c-bf7a-61f578e0efa2"],
Cell[CellGroupData[{
Cell[212218, 4169, 760, 22, 52, "Input",ExpressionUUID->"4e1d3a92-3ffa-420f-88be-cd61243f9b17"],
Cell[212981, 4193, 11436, 212, 244, "Output",ExpressionUUID->"0072d439-30fd-4903-a930-dc9fdd11fdfe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224454, 4410, 394, 8, 52, "Input",ExpressionUUID->"2c2a89ed-a58e-430d-a9ac-c4572faef419"],
Cell[224851, 4420, 395, 6, 34, "Output",ExpressionUUID->"6634643c-e05c-4b73-94ff-767d6862ce8f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225295, 4432, 243, 4, 53, "Subtitle",ExpressionUUID->"4e3a42f7-c40a-4f21-a686-5d62376f748d"],
Cell[225541, 4438, 4050, 101, 283, "Input",ExpressionUUID->"e0776f71-e8fb-4ba9-97c5-8afed61b8f62"],
Cell[CellGroupData[{
Cell[229616, 4543, 3240, 92, 199, "Input",ExpressionUUID->"050fd31d-c610-485f-89f6-9f3d31924772"],
Cell[232859, 4637, 36859, 663, 70, "Output",ExpressionUUID->"fe3e5874-b69a-4ce9-ad81-317850cd2e33"],
Cell[269721, 5302, 38047, 683, 70, "Output",ExpressionUUID->"209978ab-83d0-44c2-b16d-06868fd0d43c"],
Cell[307771, 5987, 49756, 875, 70, "Output",ExpressionUUID->"901b8544-ac11-4ecc-a4db-990a25a9cf1a"],
Cell[357530, 6864, 49680, 874, 70, "Output",ExpressionUUID->"2a554511-d55b-4c9d-8a4c-6642af2ed0be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407247, 7743, 1388, 38, 90, "Input",ExpressionUUID->"6da195ba-d168-4398-8444-45a60c597f39"],
Cell[408638, 7783, 446, 7, 70, "Output",ExpressionUUID->"ecffc43b-40a2-4538-94d0-b47212dfd8e3"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[409145, 7797, 295, 4, 72, "Title",ExpressionUUID->"b0d8c8d9-d4a0-4b7c-8dfd-dd7ed6872f57"],
Cell[409443, 7803, 992, 28, 94, "Input",ExpressionUUID->"a8cb49be-ea7b-433a-a008-3726548bed98"],
Cell[CellGroupData[{
Cell[410460, 7835, 273, 6, 53, "Subtitle",ExpressionUUID->"b64cfa65-05f1-4468-bc06-9eda5e471144"],
Cell[410736, 7843, 5266, 125, 304, "Input",ExpressionUUID->"392db5cc-65c1-4223-a4d7-eb669e5f672a"],
Cell[CellGroupData[{
Cell[416027, 7972, 758, 22, 52, "Input",ExpressionUUID->"2e80d4ce-890a-4e42-8269-6e7b0e4429b2"],
Cell[416788, 7996, 11329, 210, 244, "Output",ExpressionUUID->"ca4de1cb-aed8-4f56-b501-e348b0cd8991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428154, 8211, 420, 9, 52, "Input",ExpressionUUID->"e1f6a8b1-24a8-48c8-a1c7-2c616e0352d4"],
Cell[428577, 8222, 396, 6, 34, "Output",ExpressionUUID->"6cce5fa7-4e9f-43d6-a562-897cf09d434f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[429022, 8234, 243, 4, 53, "Subtitle",ExpressionUUID->"5c53098c-e82a-46e2-b131-35187279670d"],
Cell[429268, 8240, 4093, 102, 283, "Input",ExpressionUUID->"664c343d-b6b1-4e55-b116-55ede78a54fe"],
Cell[CellGroupData[{
Cell[433386, 8346, 3240, 92, 199, "Input",ExpressionUUID->"57180fdf-0f4c-4999-8de0-f737fba49f52"],
Cell[436629, 8440, 36996, 665, 253, "Output",ExpressionUUID->"c998e86c-74f2-4b92-8a54-73bc099e4fdc"],
Cell[473628, 9107, 34791, 630, 253, "Output",ExpressionUUID->"db5097c0-edd2-46e5-9cbf-0d8078fe76d3"],
Cell[508422, 9739, 41702, 743, 262, "Output",ExpressionUUID->"74b5585b-eff1-4e47-9456-84c9b3ea393f"],
Cell[550127, 10484, 43457, 772, 257, "Output",ExpressionUUID->"178b58b5-f1a9-4994-8c17-f8d6c7df3382"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593621, 11261, 1392, 38, 73, "Input",ExpressionUUID->"71247468-de47-478b-b47d-34fb7e53e6d2"],
Cell[595016, 11301, 485, 7, 34, "Output",ExpressionUUID->"b4d9804d-1baf-4ac5-bb08-f85a5b0c8cac"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[595562, 11315, 394, 6, 72, "Title",ExpressionUUID->"fb92fe85-7aa4-4db8-a357-7dcaa76bc50a"],
Cell[595959, 11323, 1135, 32, 94, "Input",ExpressionUUID->"4eeec78d-3001-4722-a4f0-3c63999a6bc5"],
Cell[CellGroupData[{
Cell[597119, 11359, 273, 6, 53, "Subtitle",ExpressionUUID->"94b010f4-b989-4879-a73f-601423b4717b"],
Cell[597395, 11367, 5317, 125, 304, "Input",ExpressionUUID->"6a047d3f-ca29-4f8d-b327-f4ef160a596d"],
Cell[CellGroupData[{
Cell[602737, 11496, 813, 23, 52, "Input",ExpressionUUID->"fe4609c1-d012-44af-835f-816bbc3a3800"],
Cell[603553, 11521, 11573, 215, 70, "Output",ExpressionUUID->"254d5dbb-caae-495f-a548-d48813925c9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615163, 11741, 517, 10, 52, "Input",ExpressionUUID->"640ded0e-ca92-4138-9a4c-9a435134d197"],
Cell[615683, 11753, 518, 8, 70, "Output",ExpressionUUID->"c1fe4973-3373-4768-9ba7-223b6119e04c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[616250, 11767, 243, 4, 53, "Subtitle",ExpressionUUID->"d4357ac3-6d10-45f7-b156-5cf06e671b4d"],
Cell[616496, 11773, 4094, 102, 283, "Input",ExpressionUUID->"e16b264c-cd77-4c05-95c0-2606e6298766"],
Cell[CellGroupData[{
Cell[620615, 11879, 3293, 93, 199, "Input",ExpressionUUID->"3b9b40e3-2abf-4b3f-a174-a4e2f39794be"],
Cell[623911, 11974, 35173, 635, 70, "Output",ExpressionUUID->"a74135be-f73b-47ae-9840-12af0457c8cc"],
Cell[659087, 12611, 36144, 652, 70, "Output",ExpressionUUID->"14a2159a-8bf3-4de5-8427-25fe26f80996"],
Cell[695234, 13265, 43337, 770, 70, "Output",ExpressionUUID->"e51f31a4-6752-4e02-8617-2510a7ceb448"],
Cell[738574, 14037, 45350, 803, 70, "Output",ExpressionUUID->"1b540646-b828-4fa3-82ef-e6dd679561da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783961, 14845, 1464, 39, 73, "Input",ExpressionUUID->"89bc794e-12be-4f4b-96ce-88f307ca718f"],
Cell[785428, 14886, 314, 5, 70, "Output",ExpressionUUID->"3c1c2a2b-ffeb-4713-970e-ba89395059e7"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[785803, 14898, 394, 6, 72, "Title",ExpressionUUID->"6e8613c9-9edb-4a97-aa51-989f4f1cfc68"],
Cell[786200, 14906, 1160, 33, 94, "Input",ExpressionUUID->"14347345-349e-455d-9d38-15a77e4c8fe6"],
Cell[CellGroupData[{
Cell[787385, 14943, 273, 6, 53, "Subtitle",ExpressionUUID->"5bc2963e-84a1-49d5-b14d-1997e8d4bf77"],
Cell[787661, 14951, 5266, 125, 304, "Input",ExpressionUUID->"bbd28f52-af2f-43d0-b520-809745f7316a"],
Cell[CellGroupData[{
Cell[792952, 15080, 758, 22, 52, "Input",ExpressionUUID->"052a6474-c3fc-4116-b1e3-460118fd8951"],
Cell[793713, 15104, 11452, 213, 70, "Output",ExpressionUUID->"48766309-136a-407a-b977-6676564c79fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[805202, 15322, 465, 9, 52, "Input",ExpressionUUID->"5c0ab757-ecd3-4bc3-b4f0-6742647af699"],
Cell[805670, 15333, 464, 7, 70, "Output",ExpressionUUID->"1716ccdc-c675-4e0f-bcca-2e40035ecf73"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[806183, 15346, 243, 4, 53, "Subtitle",ExpressionUUID->"718f96ac-1bba-4611-8633-48e07cfdfd16"],
Cell[806429, 15352, 4043, 101, 283, "Input",ExpressionUUID->"51c3c755-24c5-4de7-9da0-bdc5a4e0d29b"],
Cell[CellGroupData[{
Cell[810497, 15457, 3317, 93, 220, "Input",ExpressionUUID->"8d99b8d8-3ace-4645-8186-40b0a14caa18"],
Cell[813817, 15552, 37122, 667, 70, "Output",ExpressionUUID->"a364bf01-e35f-4010-ae93-cd16375ad3f0"],
Cell[850942, 16221, 34881, 631, 70, "Output",ExpressionUUID->"7845120b-a208-4fb7-ae67-c713e81e4dec"],
Cell[885826, 16854, 42670, 759, 70, "Output",ExpressionUUID->"f6ab7bd3-2d36-4b2a-b75e-2d4f695ffd5b"],
Cell[928499, 17615, 43466, 772, 70, "Output",ExpressionUUID->"2a156869-bf7e-46a8-9c05-dc8ea0418f10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[972002, 18392, 1443, 39, 73, "Input",ExpressionUUID->"a67baa4a-a4c6-438e-919f-e57c10f91848"],
Cell[973448, 18433, 508, 8, 34, "Output",ExpressionUUID->"690c52b7-9616-4d1d-95b4-037966ee409d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

